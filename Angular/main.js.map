{"version":3,"sources":["./src/app/scheduling/book-appointment/book-appointment.component.css","./src/app/scheduling/view-appointments/view-appointments.component.css","./src/app/Models/patientvisit.ts","./src/app/components/sidebar/sidebar.component.css","./src/app/auth-callback/auth-callback.component.css","./src/app/account/patient-register/patient-register.component.html","./src/app/patient-visit/patient-visit-doctor/patient-visit-doctor.component.css","./src/app/patient/view-data/view-data.component.html","./src/app/Models/PatientAllergy.ts","./src/app/Models/patientallergy1.ts","./src/app/account/account-routes.module.ts","./src/app/services/patient.service.ts","./src/app/core/auth.service.ts","./src/app/core/config.service.ts","./src/app/core/dropdownmaster.service.ts","./src/app/patient-visit/patient-visit-nurse/patient-visit-nurse.component.css","./src/app/app.component.css","./src/app/scheduling/appointment-action/appointment-action.component.html","./src/app/layouts/admin-layout/admin-layout.component.html","./src/environments/environment.ts","./src/app/account/register/register.component.css","./src/app/models/Appointment.ts","./src/app/components/navbar/navbar.component.css","./src/app/shared-modules/shared-material.module.ts","./src/app/CustomValidator/PasswdMatch.validator.ts","./src/app/patient/view-data/view-data.component.css","./src/app/components/footer/footer.component.css","./src/app/changepassword/changepassword.component.css","./src/app/changepassword/changepassword.component.ts","./src/app/patient-visit/patient-visit-nurse/patient-visit-nurse.component.html","./src/app/account/register/register.component.html","./src/app/components/sidebar/sidebar.component.html","./src/app/services/notifications.service.ts","./src/app/components/footer/footer.component.ts","./src/app/scheduling/appointment-action/appointment-action.component.ts","./src/app/patient/visithistorydata/visithistorydata.component.ts","./src/app/models/Patient.ts","./src/app/auth-callback/auth-callback.component.ts","./src/app/patient/visithistorydata/visithistorydata.component.html","./src/app/services/appointment.service.ts","./src/app/layouts/admin-layout/admin-layout.component.ts","./src/app/core/base.service.ts","./src/app/Models/patientprocedure.ts","./src/app/core/ToasterPosition.ts","./src/app/components/navbar/navbar.component.html","./src/app/app.component.ts","./src/app/patient/show-visit-history/show-visit-history.component.ts","./src/app/models/user.model.ts","./src/app/account/login/login.component.css","./src/app/patient/show-visit-history/show-visit-history.component.css","./src/app/scheduling/schedule/schedule.component.ts","./src/app/app.component.html","./src/app/components/footer/footer.component.html","./src/app/scheduling/view-appointments/view-appointments.component.ts","./src/app/app.module.ts","./src/app/scheduling/schedule/schedule.component.css","./src/app/patient-visit/patient-visit-nurse/patient-visit-nurse.component.ts","./src/app/app.routing.ts","./src/app/account/register/register.component.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/scheduling/view-appointments/view-appointments.component.html","./src/app/account/login/login.component.ts","./src/app/core/ToasterService.ts","./src/app/scheduling/book-appointment/book-appointment.component.html","./src/app/account/login/login.component.html","./src/app/Models/patientmedication.ts","./src/app/components/navbar/navbar.component.ts","./src/app/changepassword/changepassword.component.html","./src/app/patient/show-visit-history/show-visit-history.component.html","./src/app/components/components.module.ts","./src/app/account/account.module.ts","./src/app/account/patient-register/patient-register.component.ts","./src/app/patient/view-data/view-data.component.ts","./src/app/services/register.service.ts","./src/app/account/patient-register/patient-register.component.css","./src/app/services/doctor-service.service.ts","./src/app/auth-callback/auth-callback.component.html","./src/app/patient-visit/patient-visit-doctor/patient-visit-doctor.component.ts","./src/app/scheduling/book-appointment/book-appointment.component.ts","./src/app/layouts/admin-layout/admin-layout.component.scss","./src/app/Models/patientdiagnosis.ts","./src/app/scheduling/schedule/schedule.component.html","./src/app/patient-visit/patient-visit-doctor/patient-visit-doctor.component.html","./src/app/scheduling/appointment-action/appointment-action.component.css","./src/app/Models/PatientDemographicData.ts","./src/app/components/sidebar/sidebar.component.ts","./src/app/patient/visithistorydata/visithistorydata.component.css","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVkdWxpbmcvYm9vay1hcHBvaW50bWVudC9ib29rLWFwcG9pbnRtZW50LmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVkdWxpbmcvdmlldy1hcHBvaW50bWVudHMvdmlldy1hcHBvaW50bWVudHMuY29tcG9uZW50LmNzcyJ9 */\";","export class PatientVisit{\r\n  constructor(\r\n      public patientid:number=0,\r\n      public appointmentid:number=0,\r\n      public height:number=0,\r\n      public weight:number=0,\r\n      public bloodpressuresystolic:number=0,\r\n      public bloodpressurediastolic:number=0,\r\n      public bodytemperature:number=0,\r\n      public respirationrate:number=0,\r\n      // public id:string =\"\"        \r\n   )\r\n  {}\r\n\r\n// get PatientID() { return this.patientid };\r\n// set PatientID(address: string) { this.patientid = address };\r\n\r\n// get AppointmentID() { return this.appointmentid };\r\n// set AppointmentID(address: string) { this.appointmentid = address };\r\n\r\n// get Height() { return this.height };\r\n// set Height(address: string) { this.height = address };\r\n\r\n// get Weight() { return this.weight };\r\n// set Weight(address: string) { this.weight = address };\r\n\r\n// get Bloodpressuresystolic() { return this.bloodpressuresystolic };\r\n// set Bloodpressuresystolic(address: string) { this.bloodpressuresystolic = address };\r\n\r\n// get Bloodpressurediastolic() { return this.bloodpressurediastolic };\r\n// set Bloodpressurediastolic(address: string) { this.bloodpressurediastolic = address };\r\n\r\n// get Bodytemperature() { return this.bodytemperature };\r\n// set Bodytemperature(address: string) { this.bodytemperature = address };\r\n\r\n// get Respirationrate() { return this.respirationrate };\r\n// set Respirationrate(address: string) { this.respirationrate = address };\r\n\r\n// get ID() { return this.id };\r\n// set ID(address: string) { this.id = address };\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgtY2FsbGJhY2svYXV0aC1jYWxsYmFjay5jb21wb25lbnQuY3NzIn0= */\";","export default \" \\r\\n<div  *ngIf=\\\"!success\\\" class=\\\"signup-form\\\">\\r\\n    <form  class=\\\"form-group\\\" [formGroup]=\\\"fg\\\" (ngSubmit)=\\\"SavePatientData()\\\">\\r\\n    <h2>Patient Registration</h2>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\"><label for=\\\"firstname\\\">First Name:<span class=\\\"asterisk\\\"> *</span> </label>\\r\\n                <input type=\\\"text\\\" id=\\\"firstname\\\" name=\\\"firstname\\\" formControlName=\\\"firstname\\\" class=\\\"form-control\\\" placeholder=\\\"Your First Name\\\" required autofocus>\\r\\n                <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('firstname').touched && fg.get('firstname').errors?.required\\\">\\r\\n                    First name is required!\\r\\n                </span>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"col-sm-6\\\"><label for=\\\"lastname sr-only\\\">Last Name:<span class=\\\"asterisk\\\"> *</span> </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastname\\\" formControlName=\\\"lastname\\\" placeholder=\\\"Your Last Name\\\" required>\\r\\n                <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('lastname').touched && fg.get('lastname').errors?.required\\\">\\r\\n                    Last name is required!\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n     \\r\\n    <div class=\\\"form-group\\\">\\r\\n        <br/>\\r\\n        <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n        <label for=\\\"title\\\" class=\\\"sr-only\\\">Title<span class=\\\"asterisk\\\"> *</span></label>\\r\\n        <select id=\\\"title\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Select role\\\" required formControlName=\\\"title\\\">\\r\\n          <option disabled selected value=\\\"\\\">Select Title</option>\\r\\n          <option *ngFor=\\\"let title of titles\\\" value={{title[0]}}>{{title[1]}}</option>\\r\\n        </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n            <label for=\\\"gender\\\" class=\\\"sr-only\\\">Gender<span class=\\\"asterisk\\\"> *</span></label>\\r\\n            <select id=\\\"gender\\\" name=\\\"gender\\\" class=\\\"form-control\\\" placeholder=\\\"Select gender\\\" required formControlName=\\\"gender\\\">\\r\\n              <option disabled selected value=\\\"\\\">Select Gender</option>\\r\\n              <option *ngFor=\\\"let gender of genders\\\" value={{gender[0]}}>{{gender[1]}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\">Email:<span class=\\\"asterisk\\\"> *</span> </label>\\r\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" formControlName=\\\"email\\\" autocomplete=\\\"off\\\" required placeholder=\\\"Your Email\\\">\\r\\n        <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('email').touched && fg.get('email').errors?.required\\\">\\r\\n            Email is required!\\r\\n        </span>\\r\\n        <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('email').touched && fg.get('email').errors?.email\\\">\\r\\n            Email is not valid!\\r\\n        </span>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <label for=\\\"contact\\\">Contact No:<span class=\\\"asterisk\\\"> *</span> </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"contact\\\" formControlName=\\\"contact\\\" required placeholder=\\\"Your Contact No.\\\">\\r\\n                <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('contact').touched && fg.get('contact').errors?.required\\\">\\r\\n                    Contact is required!\\r\\n                </span>\\r\\n                <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('contact').touched && fg.get('contact').errors?.pattern\\\">\\r\\n                    Enter 10 digit number only!\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <label for=\\\"dob\\\">DOB:<span class=\\\"asterisk\\\"> *</span> </label>\\r\\n                <input type=\\\"date\\\" [max]=\\\"getToday()\\\" class=\\\"form-control\\\" name=\\\"dob\\\" formControlName=\\\"dob\\\" required>\\r\\n                <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('dob').touched && fg.get('dob').errors?.required\\\">\\r\\n                    DOB is required!\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n            <label for=\\\"password\\\">Password:<span class=\\\"asterisk\\\"> *</span> </label>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" formControlName=\\\"password\\\" required placeholder=\\\"Password\\\">\\r\\n            <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('password').touched && fg.get('password').errors?.required\\\">\\r\\n            Password is required!\\r\\n        </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n            <label for=\\\"confirmpassword\\\">Confirm Password:<span class=\\\"asterisk\\\"> *</span> </label>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirmpassword\\\" formControlName=\\\"confirmpassword\\\" required placeholder=\\\"Confirm Password\\\">\\r\\n            <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('confirmpassword').touched && fg.get('confirmpassword').errors?.required\\\">\\r\\n            ConfirmPassword is required!\\r\\n        </span>\\r\\n        <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('confirmpassword').touched && fg.get('confirmpassword').errors?.mismatch\\\">\\r\\n            ConfirmPassword does not match!\\r\\n        </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div> \\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button id=\\\"btnSubmit\\\" class=\\\"btn\\\" [disabled]=\\\"!fg.valid\\\">Register Now</button>\\r\\n        &nbsp;&nbsp;<label> Already have an account?</label>&nbsp;&nbsp;<a href=\\\"/login\\\"> Sign in</a>\\r\\n    </div>           \\r\\n</form>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n  <h1 style=\\\"color: red;\\\">{{msg}}</h1>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"success\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\r\\n    <h4 class=\\\"alert-heading\\\">Success!</h4>\\r\\n    <p>Your passsword reset successfully, <a routerLink=\\\"/userlogin\\\" href=\\\"/userlogin\\\">Please login</a> to continue.</p>        \\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnQtdmlzaXQvcGF0aWVudC12aXNpdC1kb2N0b3IvcGF0aWVudC12aXNpdC1kb2N0b3IuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <!-- <div class=\\\"col-md-12\\\">\\r\\n                <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\" style=\\\"float: right;\\\" (click)=\\\"DownloadPatientData()\\\">\\r\\n                    <i class=\\\"material-icons\\\">download</i>\\r\\n                </a>\\r\\n            </div> -->\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-danger\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Patient Data</h4>\\r\\n                        <p class=\\\"card-category\\\"></p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <form class=\\\"form-group\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"SavePatientDemographicData()\\\">\\r\\n                            <mat-tab-group>                           \\r\\n                                <mat-tab label=\\\"Personal\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                        <legend>Personal :</legend>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\"><label for=\\\"firstname\\\">First Name: </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstname\\\" formControlName=\\\"patientfirstname\\\" readonly>\\r\\n                                             <!-- <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('firstname').touched && fg.get('firstname').errors?.required\\\">\\r\\n                                                FirstName is required!\\r\\n                                            </span> -->\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\"><label for=\\\"lastname\\\">Last Name: </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastname\\\" formControlName=\\\"patientlastname\\\" readonly>\\r\\n                                            <!-- <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('lastname').touched && fg.get('lastname').errors?.required\\\">\\r\\n                                                LastName is required!\\r\\n                                            </span> -->\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-12\\\">\\r\\n                                    <label for=\\\"email\\\">Email: </label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" formControlName=\\\"patientemail\\\" readonly>\\r\\n                                    <!-- <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('email').touched && fg.get('email').errors?.required\\\">\\r\\n                                        Email is required!\\r\\n                                    </span>\\r\\n                                    <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('email').touched && fg.get('email').errors?.email\\\">\\r\\n                                        Email is not valid!\\r\\n                                    </span> -->\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"contact\\\">Contact: </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"contact\\\" formControlName=\\\"patientcontact\\\" readonly>\\r\\n                                            <!-- <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('contact').touched && fg.get('contact').errors?.required\\\">\\r\\n                                                Contact is required!\\r\\n                                            </span>\\r\\n                                            <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('contact').touched && fg.get('contact').errors?.pattern\\\">\\r\\n                                                Enter 10 digit number only!\\r\\n                                            </span> -->\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"dob\\\">DOB: </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dob\\\" formControlName=\\\"patientdob\\\" readonly>\\r\\n                                            <!-- <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('dob').touched && fg.get('dob').errors?.required\\\">\\r\\n                                                DOB is required!\\r\\n                                            </span> -->\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>                                \\r\\n                            </fieldset>\\r\\n                            </mat-tab>\\r\\n                                <mat-tab label=\\\"Demographics\\\">    \\r\\n                                    <br>                                \\r\\n                            <fieldset>\\r\\n                                <legend>Demographics: </legend>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\"><label for=\\\"race\\\">Race: </label>\\r\\n                                            <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"race\\\" placeholder=\\\"\\\" formControlName=\\\"race\\\"> -->\\r\\n                                            <mat-form-field appearance=\\\"fill\\\">\\r\\n                                                <mat-label>Race</mat-label>\\r\\n                                                <mat-select [(value)]=\\\"selectedRace\\\" #cmbrace>\\r\\n                                                  <mat-option>None</mat-option>\\r\\n                                                  <mat-option *ngFor=\\\"let Race of Race\\\" [value]=\\\"Race\\\">{{Race}}</mat-option>\\r\\n                                                </mat-select>\\r\\n                                              </mat-form-field>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\"><label for=\\\"ethnicity\\\">Ethnicity: </label>\\r\\n                                            <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ethnicity\\\" placeholder=\\\"\\\" formControlName=\\\"ethnicity\\\"> -->\\r\\n                                            <mat-form-field appearance=\\\"fill\\\">\\r\\n                                                <mat-label>Ethnicity</mat-label>\\r\\n                                                <mat-select [(value)]=\\\"selectedEthnicity\\\" #cmbethnicity>\\r\\n                                                  <mat-option>None</mat-option>\\r\\n                                                  <mat-option *ngFor=\\\"let Ethnicity of Ethnicity\\\" [value]=\\\"Ethnicity\\\">{{Ethnicity}}</mat-option>\\r\\n                                                </mat-select>\\r\\n                                              </mat-form-field>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"languagesknown\\\">Languages Known: </label><br>\\r\\n                                            <mat-select-autocomplete #autoComplete class=\\\"grid-7-11\\\"\\r\\n                                            [placeholder]=\\\"'Select Language'\\\"\\r\\n                                            [errorMsg]=\\\"errorMessage\\\"\\r\\n                                            [showErrorMsg]=\\\"showError\\\"\\r\\n                                            [options]=\\\"options\\\"\\r\\n                                            [display]=\\\"'display'\\\"\\r\\n                                            [value]=\\\"'value'\\\"\\r\\n                                            [multiple]='true'\\r\\n                                            [labelCount]=\\\"5\\\"\\r\\n                                            [selectedOptions]=\\\"selectedOptions\\\"\\r\\n                                            (selectionChange)=\\\"getSelectedOptions($event)\\\">\\r\\n                                          </mat-select-autocomplete>\\r\\n                                            <!-- <label for=\\\"languagesknown\\\">Languages Known: </label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"languagesknown\\\" placeholder=\\\"\\\" formControlName=\\\"languagesKnown\\\"> -->\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\"><label for=\\\"address\\\">Address: </label><textarea class=\\\"form-control\\\" name=\\\"address\\\" formControlName=\\\"address\\\"></textarea></div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <!-- <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"address\\\">Address: </label>\\r\\n                                    <textarea class=\\\"form-control\\\" name=\\\"address\\\"></textarea>\\r\\n                                </div> -->\\r\\n                            </fieldset>\\r\\n                            </mat-tab>                           \\r\\n                                <mat-tab label=\\\"Emergency Contact\\\"> \\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                    <legend>Emergency Contact: </legend>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\"><label for=\\\"firstname\\\">First Name: </label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstname\\\" placeholder=\\\"\\\" formControlName=\\\"nomineeFirstName\\\"></div>\\r\\n                                        <div class=\\\"col-sm-6\\\"><label for=\\\"lastname\\\">Last Name: </label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastname\\\" placeholder=\\\"\\\" formControlName=\\\"nomineeLastName\\\"></div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-12\\\">\\r\\n                                    <label for=\\\"email\\\">Email: </label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"\\\" formControlName=\\\"nomineeEmail\\\">                                    \\r\\n                                    <span class=\\\"asterisk\\\" *ngIf=\\\"userForm.get('nomineeEmail').touched && userForm.get('nomineeEmail').errors?.email\\\">\\r\\n                                        Email is not valid!\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\"><label for=\\\"relationship\\\">Relationship: </label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"relationship\\\" placeholder=\\\"\\\" formControlName=\\\"nomineeRelationship\\\"></div>\\r\\n                                        <div class=\\\"col-sm-6\\\"><label for=\\\"contact\\\">Contact: </label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"contact\\\" placeholder=\\\"\\\" formControlName=\\\"nomineeContact\\\"></div>\\r\\n                                        <span class=\\\"asterisk\\\" *ngIf=\\\"userForm.get('nomineeContact').touched && userForm.get('nomineeContact').errors?.pattern\\\">\\r\\n                                            Enter 10 digit number only!\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"address\\\">Address: </label><textarea class=\\\"form-control\\\" name=\\\"address\\\" formControlName=\\\"nomineeAddress\\\"></textarea>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <input type=\\\"checkbox\\\" name=\\\"sameasabove\\\" formControlName=\\\"sameasabove\\\"><span class=\\\"font-bold\\\"> Same As Above</span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-sm-4\\\"><input type=\\\"checkbox\\\" name=\\\"sameasabove\\\" formControlName=\\\"portalaccess\\\"> <span class=\\\"font-bold\\\"> Do you need access to patient portal?</span> </div>\\r\\n                                    <!-- <mat-radio-group aria-label=\\\"Select an option\\\" (change)=\\\"onChange($event)\\\"> \\r\\n                                        <mat-radio-button value=\\\"true\\\">Yes</mat-radio-button> \\r\\n                                        <mat-radio-button value=\\\"false\\\" [checked]=true>No</mat-radio-button>\\r\\n                                      </mat-radio-group> -->\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            </mat-tab>\\r\\n                                <mat-tab label=\\\"Allergies\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                        <legend>Allergies: </legend>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <!-- <div class=\\\"col-xl-4\\\"><label for=\\\"allergytype\\\">Type of allergy: </label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"allergytype\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"allergyName\\\"></div> -->\\r\\n                                        <div class=\\\"col-sm-4\\\"><label for=\\\"allergytype\\\">Type of allergy: </label>\\r\\n                                            <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"allergytype\\\" placeholder=\\\"\\\" #allergyInput> -->\\r\\n                                            <mat-form-field appearance=\\\"fill\\\">\\r\\n                                                <mat-label>Allergy</mat-label>\\r\\n                                                <mat-select #allergyInput>\\r\\n                                                  <mat-option>None</mat-option>\\r\\n                                                  <mat-option *ngFor=\\\"let allergy of allergyMaster\\\" [value]=\\\"allergy.allergyName\\\">{{allergy.allergyName}}</mat-option>\\r\\n                                                </mat-select>\\r\\n                                            </mat-form-field>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-4\\\"><input type=\\\"checkbox\\\" name=\\\"sameasabove\\\" (change)=\\\"IsFatalCheckEvent($event)\\\"> <span class=\\\"font-bold\\\"> Is allergy fatal</span> </div>\\r\\n                                        <div class=\\\"col-sm-4\\\"><button type=\\\"button\\\" class=\\\"btn btn-success\\\" id=\\\"btnSubmit\\\" (click)=\\\"SavePatientAllergy(allergyInput.value)\\\">Add</button></div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <div class=\\\"col-sm-12\\\">\\r\\n                                    <table mat-table [dataSource]=\\\"dataSourceAllergyData\\\" class=\\\"mat-elevation-z2\\\">\\r\\n                                        <ng-container matColumnDef=\\\"id\\\">\\r\\n                                          <th mat-header-cell *matHeaderCellDef class=\\\"th-font\\\"> Sr.No </th>\\r\\n                                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                                        </ng-container>  \\r\\n                                        <!-- FullName Column -->\\r\\n                                        <ng-container matColumnDef=\\\"allergy\\\">\\r\\n                                          <th mat-header-cell *matHeaderCellDef class=\\\"th-font\\\"> Allergy </th>\\r\\n                                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.allergy}} </td>\\r\\n                                        </ng-container>  \\r\\n                                        <!-- Date_of_Birth Column -->\\r\\n                                        <ng-container matColumnDef=\\\"isfatal\\\">\\r\\n                                          <th mat-header-cell *matHeaderCellDef class=\\\"th-font\\\"> IsFatal </th>\\r\\n                                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.isfatal}} </td>\\r\\n                                        </ng-container> \\r\\n                                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                                        <tr mat-row  *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                                      </table>\\r\\n                                      </div>\\r\\n                                      </div>\\r\\n                                </div>\\r\\n                            </fieldset>                       \\r\\n                        </mat-tab>\\r\\n                        </mat-tab-group>                        \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" id=\\\"btnSubmit\\\">Save</button>\\r\\n                        </div>     \\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";","export class PatientAllergy{\r\n    constructor(      \r\n        public id: number=0,\r\n        public allergy:string=\"\",\r\n        public isfatal:boolean=false,\r\n        public patientid:number=0\r\n     )\r\n    {\r\n        \r\n    }\r\n\r\n  //   get Id() { return this.id };\r\n  //   set Id(data: number) { this.id = data };\r\n\r\n  // get Allergy() { return this.allergy };\r\n  // set Allergy(data: string) { this.allergy = data };\r\n\r\n  // get Isfatal() { return this.isfatal };\r\n  // set Isfatal(data: boolean) { this.isfatal = data };\r\n\r\n  // get Patientid() { return this.patientid };\r\n  // set Patientid(data: number) { this.patientid = data };\r\n}","export class PatientAllergy{\r\n  constructor(              \r\n      public allergyid:number=0,\r\n      public fatalAllergy:boolean=false,\r\n      public patientid:number = 0,    \r\n      public allergyName:string = \"\",            \r\n   )\r\n  {\r\n      \r\n  }    \r\n// get Allergy() { return this.allergy };\r\n// set Allergy(data: string) { this.allergy = data };\r\n\r\n// get Isfatal() { return this.isfatal };\r\n// set Isfatal(data: boolean) { this.isfatal = data };\r\n\r\n// get Patientid() { return this.patientid };\r\n// set Patientid(data: string) { this.patientid = data };  \r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes,RouterModule } from '@angular/router';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { PatientRegisterComponent } from './patient-register/patient-register.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes : Routes = [\r\n    { path:'register',          component:RegisterComponent },\r\n    { path: 'patientregister',  component: PatientRegisterComponent },\r\n    { path: 'login',            component:LoginComponent }\r\n    //{ path: 'login',loadChildren:()=> import('./account.module').then(m=>m.AccountModule)  }\r\n];\r\n\r\n@NgModule({\r\n    imports:[RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n    providers:[]\r\n})\r\n\r\nexport class AccountRoutingModule{}","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\r\nimport {Observable, observable, pipe} from 'rxjs';\r\nimport {map, catchError} from 'rxjs/operators';\r\nimport {PatientDemographicData} from '../Models/PatientDemographicData';\r\nimport {PatientAllergy} from '../Models/PatientAllergy';\r\nimport { PatientVisit } from '../Models/patientvisit';\r\nimport {PatientDiagnosis} from '../Models/patientdiagnosis';\r\nimport {PatientProcedure} from '../Models/patientprocedure';\r\nimport {PatientMedication} from '../Models/patientmedication';\r\nimport {Patients} from '../models/Patient';\r\nimport { ConfigService } from '../core/config.service';\r\nimport { BaseService } from '../core/base.service';\r\nimport { Patient } from 'app/models/patientModel';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatientService extends BaseService{\r\n\r\n  constructor(private httpsvc:HttpClient, private config:ConfigService) {\r\n    super();\r\n   }\r\n\r\n   public GetPatientAllergyDataByID(userName: string):Observable<any>\r\n   {\r\n       return this.httpsvc.get<PatientAllergy>(this.config.patientManagementAPI+\"/Patient/getallergy?userName=\"+userName);\r\n   }\r\n \r\n   // public GetPatientDemographicDataByID(PatientID: number):Observable<any>\r\n   // {\r\n   //     return this.httpsvc.get<PatientDemographicData>(\"http://localhost:3000/DemographicData?patientid=\"+PatientID);\r\n   // }\r\n   public GetPatientDemographicDataByID(userName: string):Observable<any>\r\n   {\r\n     debugger;\r\n     const headers={'Access-Control-Allow-Origin':'http://localhost:54877',\r\n     'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,OPTIONS'};\r\n        return this.httpsvc.get<PatientDemographicData>(this.config.patientManagementAPI+\"/Patient/getdemographic?userName=\"+userName);\r\n       // return this.httpsvc.get<PatientDemographicData>(\"https://localhost:44326/api/department\");\r\n   }\r\n \r\n \r\n   public GetPatientDataByID(userName: string):Observable<any>\r\n   {\r\n       return this.httpsvc.get<any>(this.config.patientManagementAPI+\"/Patient/getpatient?userName=\"+userName);\r\n   }\r\n \r\n   public GetAllergyMaster():Observable<any>\r\n   {\r\n       return this.httpsvc.get<any>(this.config.patientManagementAPI+\"/Patient/getallergydata\");\r\n   }\r\n\r\n   public GetExcelReport(aID: number,pID: number):Observable<any>\r\n   {\r\n    let header = new HttpHeaders({\r\n      'Content-Type': 'text/csv'\r\n     });\r\n       return this.httpsvc.get(this.config.patientVisitManagementAPI+\"/patientvisit/getexcelreport?appointmentId=\"+aID+\"&patientId=\"+pID,{responseType:'blob',headers:header});      \r\n   }\r\n \r\n   public SaveAllergyData(userName:string,pal:PatientAllergy):Observable<any>\r\n   {\r\n     console.log(\"service.SaveAllergyData() hits\");\r\n     //  const headers={'content-type':'application/json'};\r\n     let header = new HttpHeaders({\r\n       'Content-Type': 'application/json'\r\n      });\r\n     if(userName != \"\")\r\n     {\r\n       return this.httpsvc.post<PatientAllergy>(this.config.patientManagementAPI+\"/Patient/addallergy?userName=\"+userName,JSON.stringify(pal),{headers:header}).pipe(catchError(this.handleError));\r\n     }\r\n   }\r\n \r\n   public SaveDemographicData(userName:string,pdgd:PatientDemographicData,operation:string):Observable<any>\r\n   {\r\n     debugger;\r\n     console.log(\"service.SaveAllergyData() hits\");\r\n     let header = new HttpHeaders({\r\n       'Content-Type': 'application/json'\r\n      });\r\n     if(pdgd.patientid >= 0)\r\n     {      \r\n       if(operation===\"POST\")\r\n       return this.httpsvc.post<PatientDemographicData>(this.config.patientManagementAPI+\"/Patient/adddemographic?userName=\"+userName,JSON.stringify(pdgd),{'headers':header});\r\n       else\r\n       return this.httpsvc.patch<PatientDemographicData>(this.config.patientManagementAPI+\"/Patient/updatedemographic?userName=\"+userName,JSON.stringify(pdgd),{'headers':header});\r\n     }\r\n   }\r\n   public SavePatientVisitData(p:PatientVisit,operation:string):Observable<any>\r\n   {\r\n     console.log(\"service.SavePatientVisitData() hits\");\r\n     console.log(JSON.stringify(p));\r\n     let header = new HttpHeaders({\r\n       'Content-Type': 'application/json'\r\n      });\r\n     if(operation===\"POST\")\r\n     {\r\n       return this.httpsvc.post<PatientVisit>(this.config.patientVisitManagementAPI+\"/patientvisit/addvitalsigns\", JSON.stringify(p),{'headers':header});      \r\n     }\r\n     else\r\n     {\r\n       return this.httpsvc.post<PatientVisit>(this.config.patientVisitManagementAPI+\"/patientvisit/updatevitalsigns\", JSON.stringify(p),{'headers':header});      \r\n     }\r\n   } \r\n   public SavePatientVisitAllergyData(p:PatientAllergy):Observable<any>\r\n   {\r\n     console.log(\"service.SavePatientVisitNurseData() hits\");\r\n     console.log(JSON.stringify(p));\r\n     const headers = { 'content-type': 'application/json'}  \r\n       return this.httpsvc.post<PatientAllergy>(this.config.patientVisitManagementAPI+\"/patientvisit/addallergy\", JSON.stringify(p),{'headers':headers});      \r\n   }\r\n   public SavePatientVisitDiagnosisData(p:PatientDiagnosis):Observable<any>\r\n   {\r\n     console.log(\"service.SavePatientVisitNurseData() hits\");\r\n     console.log(JSON.stringify(p));\r\n     const headers = { 'content-type': 'application/json'}  \r\n       return this.httpsvc.post<PatientDiagnosis>(this.config.patientVisitManagementAPI+\"/patientvisit/adddiagnosis\", JSON.stringify(p),{'headers':headers});      \r\n   }\r\n   public SavePatientVisitProcedureData(p:PatientProcedure):Observable<any>\r\n   {\r\n     console.log(\"service.SavePatientVisitNurseData() hits\");\r\n     console.log(JSON.stringify(p));\r\n     const headers = { 'content-type': 'application/json'}  \r\n       return this.httpsvc.post<PatientProcedure>(this.config.patientVisitManagementAPI+\"/patientvisit/addprocedure\", JSON.stringify(p),{'headers':headers});      \r\n   }\r\n   public SavePatientVisitMedicationData(p:PatientMedication):Observable<any>\r\n   {\r\n     console.log(\"service.SavePatientVisitNurseData() hits\");\r\n     console.log(JSON.stringify(p));\r\n     const headers = { 'content-type': 'application/json'}  \r\n       return this.httpsvc.post<PatientMedication>(this.config.patientVisitManagementAPI+\"/patientvisit/addmedication\", JSON.stringify(p),{'headers':headers});      \r\n   }\r\n     public SavePatientData(p:Patients):Observable<any>\r\n       {\r\n       console.log(\"service.SavePatientData() hits\");\r\n       const headers = { 'content-type': 'application/json'};\r\n       return this.httpsvc.post<Patients>(this.config.authApiURI+\"/patient\",p).pipe(catchError(this.handleError));\r\n       \r\n     }\r\n     public GetPatientVisitDataByID(aID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientVisit>(this.config.patientVisitManagementAPI+\"/patientvisit/getvitalsignsdata?appointmentid=\"+aID);\r\n    }\r\n    public GetPatientAllergyDataByPatientID(pID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientAllergy>(this.config.patientVisitManagementAPI+\"/patientvisit/getallergy?patientid=\"+pID);\r\n    }\r\n    public GetPatientDiagnosisDataByAppointmentID(aID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientDiagnosis>(this.config.patientVisitManagementAPI+\"/patientvisit/getdiagnosis?appointmentid=\"+aID);\r\n    }\r\n    public GetPatientProcedureDataByAppointmentID(aID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientProcedure>(this.config.patientVisitManagementAPI+\"/patientvisit/getprocedure?appointmentid=\"+aID);\r\n    }\r\n    public GetPatientMedicationDataByAppointmentID(aID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientMedication>(this.config.patientVisitManagementAPI+\"/patientvisit/getmedication?appointmentid=\"+aID);\r\n    }\r\n    public GetDiagnosisMaster():Observable<any>\r\n    {\r\n        return this.httpsvc.get<any>(this.config.patientVisitManagementAPI+\"/patientvisit/getdiagnosismasterdata\");\r\n    }    \r\n    public GetProcedureMaster():Observable<any>\r\n    {\r\n        return this.httpsvc.get<any>(this.config.patientVisitManagementAPI+\"/patientvisit/getproceduremasterdata\");\r\n    }  \r\n    public GetAllergyMasterVisit():Observable<any>\r\n    {\r\n        return this.httpsvc.get<any>(this.config.patientVisitManagementAPI+\"/patientvisit/getallergymasterdata\");\r\n    }\r\n    public GetMedicineMaster():Observable<any>\r\n    {\r\n        return this.httpsvc.get<any>(this.config.patientVisitManagementAPI+\"/patientvisit/getmedicinemasterdata\");\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { UserManager, UserManagerSettings, User } from 'oidc-client';\r\nimport { BehaviorSubject } from 'rxjs'; \r\nimport { BaseService } from \"./base.service\";\r\nimport { ConfigService } from './config.service';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport decode from 'jwt-decode';\r\nimport { analytics } from 'googleapis/build/src/apis/analytics';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService  extends BaseService{\r\n\r\n  // Observable navItem source\r\n  private _authNavStatusSource = new BehaviorSubject<boolean>(false);\r\n  // Observable navItem stream\r\n  authNavStatus$ = this._authNavStatusSource.asObservable();\r\n\r\n  private manager = new UserManager(getClientSettings());\r\n  private user: User | null;\r\n  private username: string;\r\n  public userrole:string;\r\n  \r\n  constructor(private http: HttpClient, private configService: ConfigService) { \r\n    super();     \r\n    \r\n    this.manager.getUser().then(user => { \r\n      this.user = user;      \r\n      this._authNavStatusSource.next(this.isAuthenticated());\r\n    });\r\n  }\r\n  login() { \r\n    return this.manager.signinRedirect();   \r\n  }\r\n\r\n  async completeAuthentication() {\r\n      this.user = await this.manager.signinRedirectCallback();\r\n      this._authNavStatusSource.next(this.isAuthenticated());\r\n      this.username = this.name;\r\n  }  \r\n\r\n  register(userRegistration: any) {   \r\n    console.log(userRegistration); \r\n    return this.http.post(this.configService.authApiURI + '/account', userRegistration).pipe(catchError(this.handleError));\r\n  }\r\n  changePassword(userModel: any,token:string){\r\n    console.log(userModel);\r\n    return this.http.post(this.configService.authApiURI + '/modify', userModel).pipe(catchError(this.handleError));\r\n  }\r\n  getUserRole(name:any){\r\n    return this.http.post(this.configService.authApiURI + '/information', {username:name}).pipe(catchError(this.handleError));\r\n  }\r\n  isAuthenticated(): boolean {\r\n    return this.user != null && !this.user.expired;\r\n  }\r\n  get userId():string{\r\n    if(this.isAuthenticated()){\r\n      let payload:any;\r\n      payload  = decode(this.authorizationHeaderValue);\r\n      return payload.sub;\r\n    }\r\n    return \"\";\r\n  }\r\n  \r\n  get authorizationHeaderValue(): string {\r\n    return `${this.user.token_type} ${this.user.access_token}`;\r\n  }\r\n\r\n  get name(): string {\r\n    return this.user != null ? this.user.profile.name : '';\r\n  }\r\n  get email(): string{\r\n    return this.user !=null ? this.user.profile.email:'';\r\n  }\r\n  get role(): string{\r\n    return this.user !=null ? this.userrole:'';\r\n  }\r\n\r\n  async signout() {\r\n    await this.manager.signoutRedirect();\r\n  }\r\n  signoutSilent(){\r\n    this.user=null;\r\n  }\r\n}\r\nexport function getClientSettings(): UserManagerSettings {\r\n  return {\r\n      authority: 'http://localhost:52778',\r\n      client_id: 'angular_spa',\r\n      redirect_uri: 'http://localhost:4200/auth-callback',\r\n      post_logout_redirect_uri: 'http://localhost:4200/',\r\n      response_type:\"id_token token\",\r\n      scope:\"openid profile email api.read\",\r\n      filterProtocolClaims: true,\r\n      loadUserInfo: true,\r\n      automaticSilentRenew: true,\r\n      silent_redirect_uri: 'http://localhost:4200/silent-refresh.html'\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n  constructor() { }\r\n  get authApiURI() {\r\n    return 'http://localhost:52778/api';\r\n  }    \r\n  get resourceApiURI() {\r\n    return 'http://localhost:61006/api';\r\n  }\r\n  get tempResourseAPI(){\r\n    return 'http://localhost:3000';\r\n  }\r\n  get adminApiUri(){\r\n    return 'http://localhost:55921';\r\n  }\r\n  get patientManagementAPI(){\r\n    return 'http://localhost:54877/api';\r\n  }\r\n  get scheduleManagementAPI(){\r\n    return 'http://localhost:56207/api';\r\n  }\r\n  get patientVisitManagementAPI(){\r\n    return 'http://localhost:61307/api';\r\n  }  \r\n  get inboxManagementAPI(){\r\n    return 'http://localhost:55264/api';\r\n  }\r\n}\r\n\r\n","export enum Roles{\r\n    admin=\"Admin\",\r\n    patient=\"Patient\",\r\n    doctor=\"Doctor\",\r\n    nurse = \"Nurse\"\r\n}\r\nexport enum Genders{\r\n    M=\"Male\",\r\n    F=\"Female\",\r\n    O=\"Others\"\r\n}\r\n\r\nexport enum UserType{\r\n    D=\"Doctor\",\r\n    N=\"Nurse\"\r\n}\r\nexport enum Title{\r\n    Mr=\"Mr.\",\r\n    Ms=\"Ms.\",\r\n    Mrs=\"Mrs.\",\r\n    Miss=\"Miss\"\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnQtdmlzaXQvcGF0aWVudC12aXNpdC1udXJzZS9wYXRpZW50LXZpc2l0LW51cnNlLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-danger\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Appointment Action</h4>\\r\\n                        <p class=\\\"card-category\\\"></p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <form class=\\\"form-group\\\" [formGroup]=\\\"fg\\\" (ngSubmit)=\\\"SaveAppointmentAction()\\\">                            \\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-2\\\">\\r\\n                                        <label for=\\\"appointmentaction\\\">Action: </label><br />\\r\\n                                        <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" formControlName=\\\"appointmentaction\\\" name=\\\"appointmentaction\\\" value=\\\"Approved\\\" checked>Approve</label>\\r\\n                                        <br>\\r\\n                                        <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" formControlName=\\\"appointmentaction\\\" name=\\\"appointmentaction\\\" value=\\\"Rejected\\\">Reject</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-10\\\">\\r\\n                                        <label for=\\\"appointmentreason\\\">Reason: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"appointmentreason\\\" formControlName=\\\"appointmentreason\\\">\\r\\n                                        <!-- <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('lastname').touched && fg.get('lastname').errors?.required\\\">\\r\\n                                            LastName is required!\\r\\n                                        </span> -->\\r\\n                                    </div>               \\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">            \\r\\n                                <button id=\\\"btnSubmit\\\" class=\\\"btn\\\">Save</button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"wrapper\\\">\\r\\n    <div class=\\\"sidebar\\\" data-color=\\\"danger\\\" data-background-color=\\\"white\\\" data-image=\\\"./assets/img/sidebar-1.jpg\\\">\\r\\n        <app-sidebar></app-sidebar>\\r\\n        <div class=\\\"sidebar-background\\\" style=\\\"background-image: url(./assets/img/sidebar-4.jpg)\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"main-panel\\\">\\r\\n        <app-navbar></app-navbar>\\r\\n        <router-outlet></router-outlet>\\r\\n        <div *ngIf=\\\"isMaps('maps')\\\">\\r\\n            <app-footer></app-footer>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"fixed-plugin\\\">\\r\\n        <div class=\\\"dropdown show-dropdown open \\\">\\r\\n            <a href=\\\"#\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"true\\\">\\r\\n                <i class=\\\"fa fa-cog fa-2x\\\"> </i>\\r\\n            </a>\\r\\n            <ul class=\\\"dropdown-menu\\\" x-placement=\\\"bottom-start\\\" style=\\\"position: absolute; top: 41px; left: -231px; will-change: top, left;\\\">\\r\\n                <li class=\\\"header-title\\\"> Sidebar Filters</li>\\r\\n                <li class=\\\"adjustments-line\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"switch-trigger active-color\\\">\\r\\n                        <div class=\\\"ml-auto mr-auto\\\">\\r\\n                            <span class=\\\"badge filter badge-purple\\\" data-color=\\\"purple\\\"></span>\\r\\n                            <span class=\\\"badge filter badge-azure\\\" data-color=\\\"azure\\\"></span>\\r\\n                            <span class=\\\"badge filter badge-green\\\" data-color=\\\"green\\\"></span>\\r\\n                            <span class=\\\"badge filter badge-orange\\\" data-color=\\\"orange\\\"></span>\\r\\n                            <span class=\\\"badge filter badge-danger active\\\" data-color=\\\"danger\\\"></span>\\r\\n                        </div>\\r\\n                        <div class=\\\"clearfix\\\"></div>\\r\\n                    <div class=\\\"ripple-container\\\"></div></a>\\r\\n                </li>\\r\\n                <li class=\\\"header-title\\\">Images</li>\\r\\n                <li>\\r\\n                    <a class=\\\"img-holder switch-trigger\\\" href=\\\"javascript:void(0)\\\">\\r\\n                        <img src=\\\"./assets/img/sidebar-1.jpg\\\" alt=\\\"\\\">\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a class=\\\"img-holder switch-trigger\\\" href=\\\"javascript:void(0)\\\">\\r\\n                        <img src=\\\"./assets/img/sidebar-2.jpg\\\" alt=\\\"\\\">\\r\\n                    <div class=\\\"ripple-container\\\"></div></a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a class=\\\"img-holder switch-trigger\\\" href=\\\"javascript:void(0)\\\">\\r\\n                        <img src=\\\"./assets/img/sidebar-3.jpg\\\" alt=\\\"\\\">\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li class=\\\"active\\\">\\r\\n                    <a class=\\\"img-holder switch-trigger\\\" href=\\\"javascript:void(0)\\\">\\r\\n                        <img src=\\\"./assets/img/sidebar-4.jpg\\\" alt=\\\"\\\">\\r\\n                    </a>\\r\\n                </li>\\r\\n                <!-- <li class=\\\"button-container\\\">\\r\\n                    <div>\\r\\n                        <button class=\\\"btn btn-info btn-block btn-fill\\\" data-toggle=\\\"modal\\\" data-target=\\\"#buy\\\">\\r\\n                            Download Free\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </li>\\r\\n                <li class=\\\"button-container\\\">\\r\\n                    <div>\\r\\n                        <button class=\\\"btn btn-warning btn-block btn-fill\\\" data-toggle=\\\"modal\\\" data-target=\\\"#buy\\\">\\r\\n                            Buy Pro\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </li>\\r\\n                <li class=\\\"button-container text-center\\\" routerLinkActive=\\\"active\\\">\\r\\n                  <div>\\r\\n                    <a class=\\\"btn btn-default btn-block\\\" href=\\\"https://demos.creative-tim.com/material-dashboard-angular2/#/documentation/tutorial\\\">\\r\\n                        View Documentation\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </li> -->\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- Buy-Modal-angular -->\\r\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"buy\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-body text-center\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n            <h4 class=\\\"margin-top\\\">\\r\\n                Free Version\\r\\n            </h4>\\r\\n            <div class=\\\"separator\\\"></div>\\r\\n            <a href=\\\"https://www.creative-tim.com/product/material-dashboard\\\" class=\\\"modal-button\\\" target=\\\"_blank\\\">\\r\\n                <div class=\\\"wrapper-card\\\">\\r\\n                    <div class=\\\"image-container\\\">\\r\\n                        <img src=\\\"./assets/img/html.png\\\" alt=\\\"unloaded\\\">\\r\\n                    </div>\\r\\n                    Html5\\r\\n                    <div class=\\\"separator\\\"></div>\\r\\n                    <div class=\\\"product-type\\\">\\r\\n                        FREE\\r\\n                    </div>\\r\\n                </div>\\r\\n            </a>\\r\\n            <a href=\\\"https://www.creative-tim.com/product/material-dashboard-angular2\\\" class=\\\"modal-button\\\" target=\\\"_blank\\\">\\r\\n                <div class=\\\"wrapper-card\\\">\\r\\n                    <div class=\\\"image-container image-angular-cli\\\">\\r\\n                        <img src=\\\"./assets/img/angular.png\\\" alt=\\\"unloaded\\\">\\r\\n                    </div>\\r\\n                    Angular\\r\\n                    <div class=\\\"separator\\\"></div>\\r\\n                    <div class=\\\"product-type\\\">\\r\\n                        FREE\\r\\n                    </div>\\r\\n                </div>\\r\\n            </a>\\r\\n            <h4>\\r\\n                PRO Version\\r\\n            </h4>\\r\\n            <div class=\\\"separator\\\"></div>\\r\\n            <a href=\\\"https://www.creative-tim.com/product/material-dashboard-pro\\\" class=\\\"modal-button\\\" target=\\\"_blank\\\">\\r\\n                <div class=\\\"image-container\\\">\\r\\n                    <img src=\\\"./assets/img/html.png\\\" alt=\\\"unloaded\\\">\\r\\n                </div>\\r\\n                Html5\\r\\n                <div class=\\\"separator\\\"></div>\\r\\n                <div class=\\\"price\\\">\\r\\n                    from\\r\\n                    <span>\\r\\n                        49\\r\\n                        <i class=\\\"fa fa-usd\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </span>\\r\\n                </div>\\r\\n            </a>\\r\\n            <a href=\\\"https://www.creative-tim.com/product/material-dashboard-pro-angular2\\\" class=\\\"modal-button\\\" target=\\\"_blank\\\">\\r\\n                <div class=\\\"image-container image-angular-cli\\\">\\r\\n                    <img src=\\\"./assets/img/angular.png\\\" alt=\\\"unloaded\\\">\\r\\n                </div>\\r\\n                Angular\\r\\n                <div class=\\\"separator\\\"></div>\\r\\n                <div class=\\\"price\\\">\\r\\n                    from\\r\\n                    <span>\\r\\n                        59\\r\\n                        <i class=\\\"fa fa-usd\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </span>\\r\\n                </div>\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\";","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","export default \".example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n\\r\\n  .tbar {\\r\\n    position: relative;\\r\\n    z-index: 2;\\r\\n}\\r\\n\\r\\n  .mat-toolbar.mat-primary {\\r\\n  background: #202721; \\r\\n  color: #fff;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWNjb3VudC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztFQUNoQjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixVQUFVO0FBQ2Q7O0VBQ0E7RUFDRSxtQkFBbUI7RUFDbkIsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtc3BhY2VyIHtcclxuICAgIGZsZXg6IDEgMSBhdXRvO1xyXG4gIH1cclxuXHJcbiAgLnRiYXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgei1pbmRleDogMjtcclxufVxyXG4ubWF0LXRvb2xiYXIubWF0LXByaW1hcnkge1xyXG4gIGJhY2tncm91bmQ6ICMyMDI3MjE7IFxyXG4gIGNvbG9yOiAjZmZmO1xyXG59Il19 */\";","export class Appointment{\r\n  constructor(      \r\n    public id: number=0,\r\n    public drname:string=\"\",\r\n    public patientname:string=\"\",\r\n    public date:string=\"\",\r\n    public fromtime:string=\"\",\r\n    public totime:string=\"\",\r\n    public drid:string=\"\",\r\n    public patientid:string=\"\",\r\n    public isApproved:boolean,\r\n    public reason:string=\"\",\r\n    public description:string=\"\",    \r\n    public drDisplayId:string=\"\",\r\n    public patientDisplayId:string=\"\",\r\n    public speciality:string=\"\"\r\n           )\r\n  {\r\n      \r\n  }\r\n\r\n//   get Id() { return this.id };\r\n//   set Id(data: number) { this.id = data };\r\n\r\n// get Drname() { return this.drname };\r\n// set Drname(data: string) { this.drname = data };\r\n\r\n// get Patientname() { return this.patientname };\r\n// set Patientname(data: string) { this.patientname = data };\r\n\r\n// get Date() { return this.date };\r\n// set Date(data: string) { this.date = data };\r\n\r\n// get Fromtime() { return this.fromtime };\r\n// set Fromtime(data: string) { this.fromtime = data };\r\n\r\n// get Totime() { return this.totime };\r\n// set Totime(data: string) { this.totime = data };\r\n\r\n// get Drid() { return this.drid };\r\n// set Drid(data: string) { this.drid = data };\r\n\r\n// get Patientid() { return this.patientid };\r\n// set Patientid(data: string) { this.patientid = data };\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatTableModule} from '@angular/material/table';\r\n// import { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n// import {RegisterComponent} from '../../app/admin/register/register.component';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatPaginatorModule,\r\n    MatTabsModule\r\n  ],\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatPaginatorModule,\r\n    MatTabsModule\r\n  ]\r\n})\r\nexport class SharedMaterialModule { }\r\n","import { FormControl,ValidatorFn } from '@angular/forms';\r\n\r\nexport function MatchPasswd(newpassword: string): ValidatorFn {\r\n    return (control: FormControl) => {\r\n        if (!control || !control.parent) {\r\n            return null;\r\n        }\r\n        return control.parent.get(newpassword).value === control.value ? null : { mismatch: true };\r\n    };\r\n}\r\n","export default \".mat-table{\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.font-bold\\r\\n{\\r\\n    font-weight :bold;\\r\\n}\\r\\n\\r\\n.th-font\\r\\n{\\r\\n    font-size: 15px;\\r\\n    font-weight :bold;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGF0aWVudC92aWV3LWRhdGEvdmlldy1kYXRhLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7O0lBRUksaUJBQWlCO0FBQ3JCOztBQUVBOztJQUVJLGVBQWU7SUFDZixpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9wYXRpZW50L3ZpZXctZGF0YS92aWV3LWRhdGEuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtdGFibGV7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmZvbnQtYm9sZFxyXG57XHJcbiAgICBmb250LXdlaWdodCA6Ym9sZDtcclxufVxyXG5cclxuLnRoLWZvbnRcclxue1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQgOmJvbGQ7XHJcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYW5nZXBhc3N3b3JkL2NoYW5nZXBhc3N3b3JkLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { finalize } from 'rxjs/operators'\r\nimport { AuthService } from '../core/auth.service';\r\nimport { UserModel }    from '../models/user.model';\r\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\r\nimport { ToasterService } from './../core/ToasterService';\r\nimport { ToasterPosition } from './../core/ToasterPosition';\r\nimport { MatchPasswd } from '../CustomValidator/PasswdMatch.validator'\r\nimport { of } from 'rxjs';\r\nimport { delay } from 'rxjs/operators';\r\nimport { User } from 'oidc-client';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-changepassword',\r\n  templateUrl: './changepassword.component.html',\r\n  styleUrls: ['./changepassword.component.css']\r\n})\r\nexport class ChangepasswordComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService,private toastr: ToasterService,private spinner: NgxSpinnerService,private router :Router) { }\r\n\r\n  success: boolean;\r\n  error: string;\r\n  userId: string= this.authService.email; \r\n  usermodel: UserModel = { oldPassword: '', email: this.authService.email , newPassword: '', confirmPassword:''};\r\n  submitted: boolean = false;\r\n  busy:boolean;\r\n  result: any;\r\n  formdata:any;\r\n  ngOnInit(): void {\r\n    this.userId = this.authService.email;\r\n    this.usermodel =new UserModel('',this.userId,'','');\r\n    console.log(this.userId);\r\n  }\r\n  onSubmit(token:string){\r\n    this.busy = true;\r\n    this.spinner.show();\r\n    //this.usermodel.email = this.authService.email;\r\n    this.formdata = this.usermodel;\r\n    this.usermodel.email=this.userId;\r\n\r\n    console.log(this.usermodel);\r\n    this.authService.changePassword(this.usermodel,this.authService.authorizationHeaderValue)\r\n      .pipe(finalize(() => {\r\n        this.spinner.hide();\r\n      }))  \r\n      .subscribe(\r\n      result => {         \r\n         if(result) {\r\n          this.busy = false;\r\n          this.spinner.hide();\r\n            console.log(\"success\");\r\n            this.success = true;\r\n            this.toastr.success('Success', 'Password Reset Successfully',ToasterPosition.topFull);\r\n            this.authService.signoutSilent();\r\n            //this.router.navigate(['relogin/Password reset successfully']);\r\n         }\r\n      },\r\n      error => {\r\n        this.spinner.hide();\r\n        this.result = error;\r\n        console.log(this.result);\r\n        this.toastr.error('Error',this.result,ToasterPosition.topFull);\r\n        this.error = error;       \r\n      });\r\n  }\r\n  relogin(){\r\n    this.authService.signout();\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-danger\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Patient Visit Data</h4>\\r\\n                        <p class=\\\"card-category\\\"></p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <form class=\\\"form-group\\\" [formGroup]=\\\"fg\\\" (ngSubmit)=\\\"SavePatientVisitNurse()\\\">\\r\\n                            <mat-tab-group dynamicHeight>\\r\\n                                <!-- <mat-tab label=\\\"Patient Details\\\">\\r\\n                                    <br>   \\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"ApptID\\\">AppointmentID: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ApptID\\\" formControlName=\\\"ApptID\\\" disabled>                        \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"PtID\\\">PatientID: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"PtID\\\" formControlName=\\\"PtID\\\" disabled>                        \\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                    </fieldset>\\r\\n                                </mat-tab> -->\\r\\n                                <mat-tab label=\\\"Vital Signs\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"height\\\">Height (in cms): <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"height\\\" formControlName=\\\"height\\\">                        \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"weight\\\">Weight (in kgs): <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"weight\\\" formControlName=\\\"weight\\\">                        \\r\\n                                                </div>\\r\\n                                            </div>            \\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"bloodpressuresystolic\\\">Blood Pressure Systolic (in mmHg): <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bloodpressuresystolic\\\" formControlName=\\\"bloodpressuresystolic\\\">                        \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"bloodpressurediastolic\\\">Blood Pressure Diastolic (in mmHg): <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bloodpressurediastolic\\\" formControlName=\\\"bloodpressurediastolic\\\">                        \\r\\n                                                </div>\\r\\n                                            </div>            \\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"temperature\\\">Body Temperature (in celsius): <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bodytemperature\\\" formControlName=\\\"bodytemperature\\\">                        \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"respirationrate\\\">Respiration Rate (in BPM): <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"respirationrate\\\" formControlName=\\\"respirationrate\\\">                        \\r\\n                                                </div>\\r\\n                                            </div>                        \\r\\n                                        </div>\\r\\n                                    </fieldset>\\r\\n                                </mat-tab>\\r\\n                                <mat-tab label=\\\"Allergies\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"Allergytype\\\">Allergy Type: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <select class=\\\"custom-select\\\" [(ngModel)]=\\\"allergytype\\\" [ngModelOptions]=\\\"{standalone: true}\\\" aria-label=\\\"Default select example\\\">\\r\\n                                                        <option selected>Select Allergy Type</option>\\r\\n                                                        <option *ngFor=\\\"let allergy of allergyMaster\\\" [value]=\\\"allergy.id\\\">{{allergy.allergyName}}</option>\\r\\n                                                      </select>\\r\\n                                                      <!-- <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"name\\\" /> -->\\r\\n                                                </div>                \\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"fatalallergy\\\">Fatal Allergy? <span class=\\\"asterisk\\\"> *</span></label><br>\\r\\n                                                    <input type=\\\"checkbox\\\" id=\\\"chkFatal\\\" name=\\\"chkFatal\\\" [(ngModel)]=\\\"chkFatal\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"True\\\">                    \\r\\n                                                    <!-- <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" [(ngModel)]=\\\"year\\\" [ngModelOptions]=\\\"{standalone: true}\\\" name=\\\"optradio\\\" checked>True</label>\\r\\n                                                    <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" [(ngModel)]=\\\"year\\\" [ngModelOptions]=\\\"{standalone: true}\\\" name=\\\"optradio\\\">False</label>                     -->\\r\\n                                                    <!-- <input type=\\\"text\\\" [(ngModel)]=\\\"year\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"year\\\" /> -->\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <button id=\\\"btnSubmitAllergy\\\" type=\\\"button\\\" (click)=\\\"AddAllergy()\\\" class=\\\"btn\\\">Add Allergy</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <table class=\\\"table table-hover table-striped table-bordered\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th>Allergy</th><th>Fatal Allergy?</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let row of AllergyRows\\\">                  \\r\\n                                                        <td>{{row.allergytype}}</td>\\r\\n                                                        <td>{{row.chkFatal}}</td>\\r\\n                                                      </tr>\\r\\n                                                </tbody>                                \\t\\t\\t\\t\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n\\r\\n                                    </fieldset>\\r\\n                                </mat-tab>\\r\\n                                <mat-tab label=\\\"Diagnosis\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>                                                                            \\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <table class=\\\"table table-hover table-striped table-bordered\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th>Diagnosis</th><th>Diagnosis Description</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let row of DiagnosisRows\\\">                  \\r\\n                                                        <td>{{row.diagnosistype}}</td>\\r\\n                                                        <td>{{row.diagnosisdescription}}</td>\\r\\n                                                      </tr>\\r\\n                                                </tbody>                                \\t\\t\\t\\t\\r\\n                                            </table>          \\r\\n                                        </div>\\r\\n                                    </fieldset>\\r\\n                                </mat-tab>\\r\\n                                <mat-tab label=\\\"Procedure\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <table class=\\\"table table-hover table-striped table-bordered\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th>Procedure</th><th>Procedure Description</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let row of ProcedureRows\\\">                  \\r\\n                                                        <td>{{row.proceduretype}}</td>\\r\\n                                                        <td>{{row.proceduredescription}}</td>\\r\\n                                                      </tr>\\r\\n                                                </tbody>                                \\t\\t\\t\\t\\r\\n                                            </table>               \\r\\n                                        </div>\\r\\n                                    </fieldset>\\r\\n                                </mat-tab>\\r\\n                                <mat-tab label=\\\"Medication\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <table class=\\\"table table-hover table-striped table-bordered\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th>Medication</th><th>Medication Description</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let row of MedicationRows\\\">                  \\r\\n                                                        <td>{{row.medicationtype}}</td>                        \\r\\n                                                        <td>{{row.medicationdescription}}</td>\\r\\n                                                      </tr>                    \\r\\n                                                </tbody>                                \\t\\t\\t\\t\\r\\n                                            </table>        \\r\\n                                        </div>\\r\\n                                    </fieldset>\\r\\n                                </mat-tab>\\r\\n                            </mat-tab-group>\\r\\n                            <div class=\\\"form-group\\\">            \\r\\n                                <button id=\\\"btnFormSubmit\\\" type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"\\r\\n<div class=\\\"row justify-content-center\\\"> \\r\\n    <div class=\\\"col-md-4 text-center\\\">\\r\\n      <form *ngIf=\\\"!success\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <img class=\\\"mb-4\\\" src=\\\"assets/images/PMSlogo.png\\\" alt=\\\"\\\" width=\\\"125\\\" height=\\\"125\\\">\\r\\n        <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Register</h1>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\" class=\\\"sr-only\\\">Name</label>\\r\\n            <input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"userRegistration.name\\\" class=\\\"form-control\\\" placeholder=\\\"Your name\\\" required autoFocus>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"email\\\" class=\\\"sr-only\\\">Email address</label>\\r\\n            <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"userRegistration.email\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\" email required>\\r\\n            <small [hidden]=\\\"email.valid || (email.pristine && !submitted)\\\" class=\\\"text-danger\\\">Please enter a valid email</small>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"role\\\" class=\\\"sr-only\\\">Role</label>\\r\\n          <select id=\\\"role\\\" name=\\\"role\\\" [(ngModel)]=\\\"userRegistration.role\\\"  class=\\\"form-control\\\" placeholder=\\\"Select role\\\" required>\\r\\n            <option disabled selected value=\\\"\\\">Select Role</option>\\r\\n            <!-- <option>Choose Role</option> -->\\r\\n            <option *ngFor=\\\"let role of keys()\\\">{{role}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password\\\" class=\\\"sr-only\\\">Password</label>\\r\\n            <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"userRegistration.password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" aria-describedby=\\\"passwordHelp\\\" required>     \\r\\n            <small id=\\\"passwordHelp\\\" class=\\\"form-text text-muted\\\">Min. 6 characters with at least one non alphanumeric character</small>\\r\\n        </div>   \\r\\n        <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!f.form.valid\\\">Go</button>\\r\\n        <ngx-spinner></ngx-spinner>   \\r\\n        <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3\\\" role=\\\"alert\\\">\\r\\n            <strong>Oops!</strong> {{error}}\\r\\n        </div>     \\r\\n      </form>      \\r\\n      <div *ngIf=\\\"success\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\r\\n          <h4 class=\\\"alert-heading\\\">Well done!</h4>\\r\\n          <p>Your account was created successfully, <a routerLink=\\\"/login\\\">Please login</a> to continue.</p>        \\r\\n      </div>  \\r\\n    </div> \\r\\n  </div>\\r\\n  \\r\\n  <ngx-spinner></ngx-spinner>\\r\\n  \";","export default \"<div class=\\\"logo\\\">\\r\\n    <a href=\\\"/\\\" class=\\\"simple-text\\\">\\r\\n        <div class=\\\"logo-img\\\">\\r\\n            <img style=\\\"margin-top: 3%;\\\" src=\\\"/assets/img/PMSlogo.png\\\"/>\\r\\n        </div>\\r\\n        PMS\\r\\n    </a>\\r\\n</div>\\r\\n<div class=\\\"sidebar-wrapper\\\">\\r\\n  <div *ngIf=\\\"isMobileMenu()\\\">\\r\\n    <form class=\\\"navbar-form\\\">\\r\\n      <span class=\\\"bmd-form-group\\\">\\r\\n        <div class=\\\"input-group no-border\\\">\\r\\n          <input type=\\\"text\\\" value=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n            <i class=\\\"material-icons\\\">search</i>\\r\\n            <div class=\\\"ripple-container\\\"></div>\\r\\n          </button>\\r\\n        </div>\\r\\n      </span>\\r\\n    </form>\\r\\n    <ul class=\\\"nav navbar-nav nav-mobile-menu\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\">\\r\\n                <i class=\\\"material-icons\\\">dashboard</i>\\r\\n                <p>\\r\\n                    <span class=\\\"d-lg-none d-md-block\\\">Stats</span>\\r\\n                </p>\\r\\n            </a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item dropdown\\\">\\r\\n            <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                <i class=\\\"material-icons\\\">notifications</i>\\r\\n                <span class=\\\"notification\\\">5</span>\\r\\n                <p>\\r\\n                    <span class=\\\"d-lg-none d-md-block\\\">Some Actions</span>\\r\\n                </p>\\r\\n            </a>\\r\\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\r\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Mike John responded to your email</a>\\r\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">You have 5 new tasks</a>\\r\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">You're now friend with Andrew</a>\\r\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another Notification</a>\\r\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another One</a>\\r\\n            </div>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\">\\r\\n                <i class=\\\"material-icons\\\">person</i>\\r\\n                <p>\\r\\n                    <span class=\\\"d-lg-none d-md-block\\\">Account</span>\\r\\n                </p>\\r\\n            </a>\\r\\n        </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n    <ul class=\\\"nav\\\">\\r\\n        <li routerLinkActive=\\\"active\\\" *ngFor=\\\"let menuItem of menuItems\\\" class=\\\"{{menuItem.class}} nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"[menuItem.path]\\\">\\r\\n                <i class=\\\"material-icons\\\">{{menuItem.icon}}</i>\\r\\n                <p>{{menuItem.title}}</p>\\r\\n            </a>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable, observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Notification} from '../models/Notification';\r\nimport { ConfigService } from '../core/config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationsService {\r\n\r\n  constructor(private httpsvc:HttpClient,private config:ConfigService) { }\r\n\r\n  public GetNotificationsByID(userName: string):Observable<any>\r\n  {    \r\n      return this.httpsvc.get<Notification>(this.config.patientManagementAPI+\"/Patient/getnotifications?userName=\"+userName);\r\n  }\r\n\r\n  public SetIsSeenNotification(id:number):Observable<any>\r\n  {\r\n    console.log(\"service.SetIsSeenNotification() hits\");\r\n    // console.log(JSON.stringify(p));\r\n    let header = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n     });\r\n      return this.httpsvc.patch<any>(this.config.patientManagementAPI+\"/Patient/updatenotification?id=\"+id,{'headers':header});      \r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  test : Date = new Date();\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component,Input, OnInit,Output,EventEmitter } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FormGroup} from '@angular/forms';\r\nimport { FormControl} from '@angular/forms';\r\nimport { Validators} from '@angular/forms';\r\nimport { Appointment } from '../../models/Appointment';\r\nimport { ToasterPosition } from '../../../app/core/ToasterPosition';\r\nimport {ToasterService} from '../../core/ToasterService';\r\nimport { AppointmentService } from '../../../app/services/appointment.service';\r\n\r\n@Component({\r\n  selector: 'app-appointment-action',\r\n  templateUrl: './appointment-action.component.html',\r\n  styleUrls: ['./appointment-action.component.css']\r\n})\r\nexport class AppointmentActionComponent implements OnInit {\r\n\r\n  public Appointment;\r\n  public ob :Observable<Appointment[]>;\r\n  public obad :Observable<Appointment[]>;\r\n  success: boolean;\r\n  isApproved: boolean=false;\r\n  \r\n  public appointmentdata: Appointment[]=[];\r\n\r\n  fg: FormGroup = new FormGroup({    \r\n    appointmentaction : new FormControl('',Validators.required),\r\n    appointmentreason : new FormControl('',Validators.required) \r\n  });  \r\n  @Input()  aId:number;\r\n  @Input()  pId:number;  \r\n  @Input() drname:string;\r\n  @Input() patientname:string;\r\n  @Input() date:string;\r\n  @Input() fromtime:string;\r\n  @Input() totime:string;\r\n  @Input() drid:string;  \r\n  @Output(\"parentFun\") parentFun: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private appointmentsvc: AppointmentService,private toaster:ToasterService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadAppointmentActionData(this.aId);\r\n  }\r\n    public SaveAppointmentAction(): void\r\n    {     \r\n      debugger;  \r\n        if(this.fg.value.appointmentaction == \"Approved\")\r\n          this.isApproved=true;        \r\n        this.Appointment=new Appointment(this.aId,this.drname,this.patientname,this.date,this.fromtime,\r\n                                this.totime,this.drid,this.pId.toString(),this.isApproved,\r\n                                this.fg.value.appointmentreason);  \r\n                    \r\n        if(this.fg.invalid==false)\r\n        { \r\n          debugger;\r\n          console.log('Before hitting service');        \r\n          this.ob = this.appointmentsvc.SaveAppointmentActionData(this.Appointment)        \r\n          this.ob.subscribe(\r\n            data => { \r\n              console.log(data);      \r\n              console.log(\"Output Is: \"+data[\"firstname\"]); \r\n              this.success = true;\r\n              this.sendMessage();\r\n              this.toaster.success(\"Success\",data[\"response\"],ToasterPosition.topFull,this.functioncallbackFunction) \r\n              //this.msg = data[\"firstname\"]+ \", has Registered Successfully\" \r\n            },\r\n            (error: any) => console.log(\"Error in saving practitioner data\")\r\n            );\r\n      }\r\n  }\r\n  functioncallbackFunction(){\r\n    this.success=true;\r\n  }\r\n  public loadAppointmentActionData(aId:number)\r\n  {\r\n    console.log('LoadData'+this.aId);\r\n    debugger;\r\n   this.obad=this.appointmentsvc.GetAppointmentActionDataByAppointmentID(this.aId);\r\n   let appointmentaction:string=\"\";\r\n   this.obad.subscribe(\r\n     (pv:Appointment[])=>{this.appointmentdata=pv;console.log(this.appointmentdata[0]); debugger;\r\n      if(this.appointmentdata[\"isApproved\"]==true)      \r\n        appointmentaction=\"Approved\";\r\n      else\r\n        appointmentaction = \"Rejected\";\r\n     this.fg.patchValue({\r\n       \"appointmentreason\": this.appointmentdata[\"reason\"],\r\n       \"appointmentaction\": appointmentaction,       \r\n     })\r\n   },\r\n   (error:any)=>console.log('fails to load nurse data')\r\n   );\r\n  }\r\n  sendMessage() {\r\n    //this.messageEvent.emit(this.message);\r\n    this.parentFun.emit();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { Appointment } from '../../models/Appointment';\r\nimport { Observable } from 'rxjs';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {AfterViewInit, ViewChild} from '@angular/core';\r\nimport { AuthService } from '../../core/auth.service';\r\nimport { finalize } from 'rxjs/operators'\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppointmentService } from '../../services/appointment.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ConfigService } from 'app/core/config.service';\r\n\r\nclass DataTablesResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n@Component({\r\n  selector: 'app-visithistorydata',\r\n  templateUrl: './visithistorydata.component.html',\r\n  styleUrls: ['./visithistorydata.component.css']\r\n})\r\nexport class VisithistorydataComponent implements OnInit {\r\n\r\n  public ob :Observable<Appointment[]>;  \r\n  public dataSourceAppointmentData: Appointment[]= [];\r\n  \r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;  \r\n  dtOptions: DataTables.Settings = {};  \r\n  datasource: MatTableDataSource<Appointment>;\r\n   displayedColumns = [\r\n    'AppointmentId',\r\n    'DoctorID',\r\n    'DoctorName',\r\n    'PatientID',\r\n    'PatientName',\r\n    'Date',\r\n    'StartTime',\r\n    'EndTime',\r\n    'Description',\r\n    'View_Edit_Delete'                                            \r\n   ];\r\n   \r\n  public pIdToUpdate:number; \r\n  public aIdToUpdate:number; \r\n  public drName:string; \r\n  constructor(private authService: AuthService,\r\n    private router: Router, private route: ActivatedRoute,\r\n    private modalService: NgbModal,\r\n    private appointmentsvc:AppointmentService,private spinner:NgxSpinnerService,private http:HttpClient,private conf:ConfigService ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.LoadAppointmentsHistory();\r\n    // const that = this;\r\n    // this.dtOptions = {\r\n      \r\n    //   pagingType: 'full_numbers',\r\n    //   pageLength: 2,\r\n    //   serverSide: true,\r\n    //   processing: true,\r\n    //   ajax: (dataTablesParameters: any, callback) => {\r\n    //     that.http.post<DataTablesResponse>(\r\n    //         this.conf.tempResourseAPI+\"/Doctor\",\r\n    //         dataTablesParameters, {}\r\n    //       ).subscribe(resp => {\r\n    //         //that.DoctorData = resp.data;\r\n\r\n    //         callback({\r\n    //           data: []\r\n    //         });\r\n    //       });\r\n    //   },\r\n    //   columns: [\r\n    //   //   {\r\n    //   //   title: 'Title',\r\n    //   //   data: 'title'\r\n    //   // }, {\r\n    //   //   title: 'First name',\r\n    //   //   data: 'firstname'\r\n    //   // }, {\r\n    //   //   title: 'Last name',\r\n    //   //   data: 'lastname'\r\n    //   // }, {\r\n    //   //   title: 'Action',\r\n    //   //   render: function (data: any, type: any, full: any) {\r\n    //   //     return 'View';\r\n    //   //   },\r\n    //   // }\r\n    // ]\r\n    // };\r\n  }\r\n\r\n  public LoadAppointmentsHistory():void\r\n  {    \r\n    this.spinner.show();\r\n    this.ob = this.appointmentsvc.GetAppointmentsHistoryForPatient(this.authService.email)\r\n    this.ob.subscribe(\r\n      data => { \r\n        this.spinner.hide();\r\n        console.log(\"Output\");\r\n        console.log(data);\r\n        this.datasource = new MatTableDataSource<Appointment>(data);\r\n        this.datasource.paginator = this.paginator;\r\n        this.datasource.sort = this.sort;\r\n      },\r\n      (error: any) => console.log(\"Error in fetching data\")\r\n      );\r\n      \r\n  }\r\n\r\n  open(content,selectedaId?:number,selectedpId?:number,Drname?:string)\r\n  { // Ng Pop Up Model    \r\n    debugger;\r\n    this.modalService.open(content,{ size:'xl',centered:true,scrollable:true});    \r\n    this.aIdToUpdate=selectedaId;  \r\n    this.pIdToUpdate=selectedpId;  \r\n    this.drName=Drname; \r\n  }\r\n\r\n}\r\n","export class Patients{\r\n  constructor(\r\n      public firstname:string=\"\",\r\n      public lastname:string=\"\",\r\n      public dob:string=\"\",\r\n      public contact:string=\"\",\r\n      public email:string=\"\",\r\n      public password:string=\"\",        \r\n      public fullName:string =\"\",\r\n      public status:string = \"\" ,\r\n      public blocked_unblocked:string = \"\",\r\n      public title=\"\",\r\n      public gender=\"\",\r\n   )\r\n  {\r\n      \r\n  }\r\n\r\n\r\nget FirstName() { return this.firstname };\r\nset FirstName(address: string) { this.firstname = address };\r\n\r\nget LastName() { return this.lastname };\r\nset LastName(address: string) { this.lastname = address };\r\n\r\nget DOB() { return this.dob };\r\nset DOB(address: string) { this.dob = address };\r\n\r\nget Contact() { return this.contact };\r\nset Contact(address: string) { this.contact = address };\r\n\r\nget Email() { return this.email };\r\nset Email(address: string) { this.email = address };\r\n\r\nget Password() { return this.password };\r\nset Password(supplierName: string) { this.password = supplierName };\r\n\r\nget FullName() { return this.fullName };\r\nset FullName(supplierName: string) { this.fullName = supplierName };\r\n\r\nget Status() { return this.status };\r\nset Status(supplierName: string) { this.status = supplierName };\r\n\r\nget Blocked_unblocked() { return this.blocked_unblocked };\r\nset Blocked_unblocked(supplierName: string) { this.blocked_unblocked = supplierName };\r\n\r\nget Title() { return this.title };\r\nset Title(supplierName: string) { this.title = supplierName };\r\n\r\nget Gender() { return this.gender };\r\nset Gender(supplierName: string) { this.gender = supplierName };\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute,Router } from '@angular/router'\r\nimport { AuthService } from '../core/auth.service';\r\n@Component({\r\n  selector: 'app-auth-callback',\r\n  templateUrl: './auth-callback.component.html',\r\n  styleUrls: ['./auth-callback.component.css']\r\n})\r\nexport class AuthCallbackComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService,private router: Router,private route:ActivatedRoute) { }\r\n  error :boolean;\r\n  async ngOnInit() {\r\n  // check for error\r\n  if (this.route.snapshot.fragment.indexOf('error') >= 0) {\r\n    this.error=true; \r\n    return;    \r\n  }\r\n \r\n await this.authService.completeAuthentication();      \r\n   this.router.navigate(['/dashboard']);    \r\n  }\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"divclass\\\">\\r\\n            <div>\\r\\n                <table mat-table [dataSource]=\\\"datasource\\\" class=\\\"table table-striped table-responsive-md\\\" matSort>    \\r\\n                    <ng-container matColumnDef=\\\"AppointmentId\\\">                      \\r\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"th-font\\\"> Appt.Id</th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                    </ng-container>    \\r\\n                    <ng-container matColumnDef=\\\"DoctorID\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"th-font\\\"> Dr.ID </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.drDisplayId}} </td>\\r\\n                    </ng-container>  \\r\\n                    <ng-container matColumnDef=\\\"DoctorName\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"th-font\\\"> Doctor Name </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.drname}} </td>\\r\\n                    </ng-container>  \\r\\n                    <ng-container matColumnDef=\\\"PatientID\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"th-font\\\"> PatientID </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.patientDisplayId}} </td>\\r\\n                    </ng-container> \\r\\n                    <ng-container matColumnDef=\\\"PatientName\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"th-font\\\"> Patient Name </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.patientname}} </td>\\r\\n                    </ng-container>  \\r\\n                    <ng-container matColumnDef=\\\"Date\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"th-font\\\"> Date </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date}} </td>\\r\\n                    </ng-container> \\r\\n                    <ng-container matColumnDef=\\\"StartTime\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"th-font\\\"> From </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fromtime}} </td>\\r\\n                    </ng-container>      \\r\\n                    <ng-container matColumnDef=\\\"EndTime\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"th-font\\\"> To </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.totime}} </td>\\r\\n                    </ng-container>                         \\r\\n                    <ng-container matColumnDef=\\\"Description\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef class=\\\"th-font\\\"> Description </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n                      </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"View_Edit_Delete\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"th-font\\\"> Actions </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                          <button class=\\\"btn btn-outline-primary\\\" (click)=\\\"open(content,element.id,element.patientid,element.drname)\\\">View Details</button> \\r\\n                      </td>\\r\\n                    </ng-container>                   \\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                  </table>\\r\\n            </div>            \\r\\n            <mat-paginator [length]=\\\"100\\\" [pageSize]=\\\"5\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" style=\\\"color: #0047AB; font-size: small;\\\">\\r\\n            </mat-paginator>\\r\\n        </div>\\r\\n        </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n          <div>\\r\\n      <button type=\\\"button\\\" class=\\\"close btn-close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times; &nbsp;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n      <app-show-visit-history [aId]=\\\"aIdToUpdate\\\" [pId]=\\\"pIdToUpdate\\\" [drName]=\\\"drName\\\"></app-show-visit-history>\\r\\n  </ng-template>\";","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Appointment} from '../Models/Appointment';\r\nimport { ConfigService } from '../core/config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentService {\r\n\r\n  constructor(private httpsvc:HttpClient,private config:ConfigService) { }\r\n\r\n  public SaveAppointment(a:Appointment):Observable<any>\r\n  {\r\n    console.log(\"service.SaveAppointment() hits\");\r\n    const headers={'content-type':'application/json'};\r\n    if(a.drid !=\"\")\r\n    {\r\n      return this.httpsvc.post<Appointment>(this.config.scheduleManagementAPI+ \"/Schedule/bookappoinment\",JSON.stringify(a),{'headers':headers});\r\n    }\r\n  }\r\n  public SaveAppointmentActionData(p:Appointment):Observable<any>\r\n    {\r\n      console.log(\"service.SavePatientVisitNurseData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n        return this.httpsvc.post<Appointment>(this.config.scheduleManagementAPI+\"/Schedule/updateappointmentaction\", JSON.stringify(p),{'headers':headers});      \r\n    }\r\n    public GetAppointmentActionDataByAppointmentID(aID: number):Observable<any>\r\n    { \r\n        debugger;          \r\n        return this.httpsvc.get<any>(this.config.scheduleManagementAPI+\"/Schedule/getappointmentaction?id=\"+aID);\r\n    \r\n    }\r\n    public GetAppointmentsHistoryForPatient(userName: string):Observable<any>\r\n    { \r\n        debugger;          \r\n        return this.httpsvc.get<any>(this.config.scheduleManagementAPI+\"/Schedule/getappointmentshistoryforpatient?userName=\"+userName);\r\n    }\r\n    \r\n  \r\n}\r\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { Location, LocationStrategy, PathLocationStrategy, PopStateEvent } from '@angular/common';\r\nimport 'rxjs/add/operator/filter';\r\nimport { NavbarComponent } from '../../components/navbar/navbar.component';\r\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\nimport * as $ from \"jquery\";\r\n\r\n@Component({\r\n  selector: 'app-admin-layout',\r\n  templateUrl: './admin-layout.component.html',\r\n  styleUrls: ['./admin-layout.component.scss']\r\n})\r\nexport class AdminLayoutComponent implements OnInit {\r\n  private _router: Subscription;\r\n  private lastPoppedUrl: string;\r\n  private yScrollStack: number[] = [];\r\n\r\n  constructor( public location: Location, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n      const isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\r\n\r\n      if (isWindows && !document.getElementsByTagName('body')[0].classList.contains('sidebar-mini')) {\r\n          // if we are on windows OS we activate the perfectScrollbar function\r\n\r\n          document.getElementsByTagName('body')[0].classList.add('perfect-scrollbar-on');\r\n      } else {\r\n          document.getElementsByTagName('body')[0].classList.remove('perfect-scrollbar-off');\r\n      }\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\r\n\r\n      this.location.subscribe((ev:PopStateEvent) => {\r\n          this.lastPoppedUrl = ev.url;\r\n      });\r\n       this.router.events.subscribe((event:any) => {\r\n          if (event instanceof NavigationStart) {\r\n             if (event.url != this.lastPoppedUrl)\r\n                 this.yScrollStack.push(window.scrollY);\r\n         } else if (event instanceof NavigationEnd) {\r\n             if (event.url == this.lastPoppedUrl) {\r\n                 this.lastPoppedUrl = undefined;\r\n                 window.scrollTo(0, this.yScrollStack.pop());\r\n             } else\r\n                 window.scrollTo(0, 0);\r\n         }\r\n      });\r\n      this._router = this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event: NavigationEnd) => {\r\n           elemMainPanel.scrollTop = 0;\r\n           elemSidebar.scrollTop = 0;\r\n      });\r\n      if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n          let ps = new PerfectScrollbar(elemMainPanel);\r\n          ps = new PerfectScrollbar(elemSidebar);\r\n      }\r\n\r\n      const window_width = $(window).width();\r\n      let $sidebar = $('.sidebar');\r\n      let $sidebar_responsive = $('body > .navbar-collapse');\r\n      let $sidebar_img_container = $sidebar.find('.sidebar-background');\r\n\r\n\r\n      if(window_width > 767){\r\n          if($('.fixed-plugin .dropdown').hasClass('show-dropdown')){\r\n              $('.fixed-plugin .dropdown').addClass('open');\r\n          }\r\n\r\n      }\r\n\r\n      $('.fixed-plugin a').click(function(event){\r\n        // Alex if we click on switch, stop propagation of the event, so the dropdown will not be hide, otherwise we set the  section active\r\n          if($(this).hasClass('switch-trigger')){\r\n              if(event.stopPropagation){\r\n                  event.stopPropagation();\r\n              }\r\n              else if(window.event){\r\n                 window.event.cancelBubble = true;\r\n              }\r\n          }\r\n      });\r\n\r\n      $('.fixed-plugin .badge').click(function(){\r\n          let $full_page_background = $('.full-page-background');\r\n\r\n\r\n          $(this).siblings().removeClass('active');\r\n          $(this).addClass('active');\r\n\r\n          var new_color = $(this).data('color');\r\n\r\n          if($sidebar.length !== 0){\r\n              $sidebar.attr('data-color', new_color);\r\n          }\r\n\r\n          if($sidebar_responsive.length != 0){\r\n              $sidebar_responsive.attr('data-color',new_color);\r\n          }\r\n      });\r\n\r\n      $('.fixed-plugin .img-holder').click(function(){\r\n          let $full_page_background = $('.full-page-background');\r\n\r\n          $(this).parent('li').siblings().removeClass('active');\r\n          $(this).parent('li').addClass('active');\r\n\r\n\r\n          var new_image = $(this).find(\"img\").attr('src');\r\n\r\n          if($sidebar_img_container.length !=0 ){\r\n              $sidebar_img_container.fadeOut('fast', function(){\r\n                 $sidebar_img_container.css('background-image','url(\"' + new_image + '\")');\r\n                 $sidebar_img_container.fadeIn('fast');\r\n              });\r\n          }\r\n\r\n          if($full_page_background.length != 0){\r\n\r\n              $full_page_background.fadeOut('fast', function(){\r\n                 $full_page_background.css('background-image','url(\"' + new_image + '\")');\r\n                 $full_page_background.fadeIn('fast');\r\n              });\r\n          }\r\n\r\n          if($sidebar_responsive.length != 0){\r\n              $sidebar_responsive.css('background-image','url(\"' + new_image + '\")');\r\n          }\r\n      });\r\n  }\r\n  ngAfterViewInit() {\r\n      this.runOnRouteChange();\r\n  }\r\n  isMaps(path){\r\n      var titlee = this.location.prepareExternalUrl(this.location.path());\r\n      titlee = titlee.slice( 1 );\r\n      if(path == titlee){\r\n          return false;\r\n      }\r\n      else {\r\n          return true;\r\n      }\r\n  }\r\n  runOnRouteChange(): void {\r\n    if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      const ps = new PerfectScrollbar(elemMainPanel);\r\n      ps.update();\r\n    }\r\n  }\r\n  isMac(): boolean {\r\n      let bool = false;\r\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\r\n          bool = true;\r\n      }\r\n      return bool;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { throwError } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BaseService {\r\n\r\n  constructor() { }\r\n  protected handleError(error: any) {\r\n\r\n    var applicationError = error.headers.get('Application-Error');\r\n\r\n    // either application-error in header or model error in body\r\n    if (applicationError) {\r\n      return throwError(applicationError);\r\n    }\r\n    \r\n    var modelStateErrors: string = '';\r\n\r\n      // for now just concatenate the error descriptions, alternative we could simply pass the entire error response upstream\r\n      for (var key in error.error) {\r\n        if (error.error[key]) modelStateErrors += error.error[key].description + '\\n'; \r\n      }\r\n      \r\n    modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\r\n    return throwError(modelStateErrors || 'Server error');\r\n    }\r\n  }\r\n","export class PatientProcedure{\r\n  constructor(              \r\n      public ProcedureId:number=0,\r\n      public procedureDescription:string=\"\",\r\n      public patientid:string=\"\",\r\n      public AppointmentId:number=0,\r\n      public procedureCode:string=\"\"\r\n   )\r\n  {}\r\n\r\n// get Procedure() { return this.procedure };\r\n// set Procedure(data: string) { this.procedure = data };\r\n\r\n// get Proceduredescription() { return this.procedureDescription };\r\n// set Proceduredescription(data: string) { this.procedureDescription = data };\r\n\r\n// get Patientid() { return this.patientid };\r\n// set Patientid(data: string) { this.patientid = data };\r\n\r\n// get Appointmentid() { return this.appointmentid };\r\n// set Appointmentid(data: string) { this.appointmentid = data };\r\n}","export enum ToasterPosition {\r\n    topRight = 'toast-top-right',\r\n    topLeft = 'toast-top-left',\r\n    bottomRight = 'toast-bottom-right',\r\n    bottomLeft= 'toast-bottom-left',\r\n    topFull = 'toast-top-full-width',\r\n    // Other positions you would like\r\n  }","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-transparent  navbar-absolute fixed-top\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"navbar-wrapper\\\">\\r\\n          <a class=\\\"navbar-brand\\\" href=\\\"javascript:void(0)\\\">{{getTitle()}}</a>\\r\\n        </div>\\r\\n        <button mat-raised-button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"sidebarToggle()\\\">\\r\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n            <span class=\\\"navbar-toggler-icon icon-bar\\\"></span>\\r\\n            <span class=\\\"navbar-toggler-icon icon-bar\\\"></span>\\r\\n            <span class=\\\"navbar-toggler-icon icon-bar\\\"></span>\\r\\n        </button>\\r\\n        <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navigation\\\">\\r\\n            <!-- <form class=\\\"navbar-form\\\">\\r\\n                <div class=\\\"input-group no-border\\\">\\r\\n                    <input type=\\\"text\\\" value=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\r\\n                    <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n                        <i class=\\\"material-icons\\\">search</i>\\r\\n                        <div class=\\\"ripple-container\\\"></div>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </form> -->\\r\\n            <ul class=\\\"navbar-nav\\\">\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link\\\" href=\\\"/dashboard\\\">\\r\\n                        <i class=\\\"material-icons\\\">dashboard</i>\\r\\n                        <p>\\r\\n                            <span class=\\\"d-lg-none d-md-block\\\">Stats</span>\\r\\n                        </p>\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item dropdown\\\">\\r\\n                    <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        <i class=\\\"material-icons\\\">notifications</i>\\r\\n                        <span class=\\\"notification\\\">{{badgeValue}}</span>\\r\\n                        <p>\\r\\n                            <span class=\\\"d-lg-none d-md-block\\\">Some Actions</span>\\r\\n                        </p>\\r\\n                    </a>\\r\\n                    <!-- <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Appointment Confirmed: Dr. D'souza</a>\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Appointment Confirmed: Dr. Yigit</a>\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Appointment Declined: Dr. Rona</a>\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Appointment Declined: Dr. Bose</a>\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">See all...</a>\\r\\n                    </div> -->\\r\\n                    <div class=\\\"dropdown-menu dropdown-menu-right\\\"  aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" *ngFor=\\\"let ntf of notificationData\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"setIsSeenNotification(ntf.id)\\\">{{getNotificationTimeDiff(ntf.createdDate)}}, {{ntf.notificationText}}</a>\\r\\n                        <a class=\\\"dropdown-item\\\" routerLink=\\\"/notifications\\\" href=\\\"javascript:void(0)\\\">See all...</a>\\r\\n                    </div>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item dropdown\\\">\\r\\n                    <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\" id=\\\"navbarDropdownMenuLink2\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        <i class=\\\"material-icons\\\">person</i>\\r\\n                        <p>\\r\\n                            <span class=\\\"d-lg-none d-md-block\\\">Account</span>\\r\\n                        </p>\\r\\n                    </a>\\r\\n                    <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdownMenuLink2\\\" *ngIf=\\\"isAuth()\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"/user-profile\\\" ><i style=\\\"font-size: medium;\\\" class=\\\"material-icons\\\">person_pin</i>&nbsp;&nbsp;&nbsp; {{this.name}}</a>\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"logout()\\\"><i style=\\\"font-size: medium;\\\" class=\\\"material-icons\\\">logout</i>&nbsp;&nbsp;&nbsp; logout</a>\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"/changepassword\\\" ><i style=\\\"font-size: medium;\\\" class=\\\"material-icons\\\">vpn_key</i>&nbsp;&nbsp;&nbsp; change password</a>\\r\\n                    </div>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\\r\\n\\r\\n<!--\\r\\n\\r\\n<nav class=\\\"navbar navbar-transparent navbar-absolute\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button mat-raised-button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" (click)=\\\"sidebarToggle()\\\">\\r\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <a class=\\\"navbar-brand\\\" href=\\\"javascript:void(0)\\\">{{getTitle()}}</a>\\r\\n        </div>\\r\\n        <div class=\\\"collapse navbar-collapse\\\">\\r\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                <li>\\r\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                        <i class=\\\"material-icons\\\">dashboard</i>\\r\\n                        <p class=\\\"hidden-lg hidden-md\\\">Dashboard</p>\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li class=\\\"dropdown\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                        <i class=\\\"material-icons\\\">notifications</i>\\r\\n                        <span class=\\\"notification\\\">5</span>\\r\\n                        <p class=\\\"hidden-lg hidden-md\\\">Notifications</p>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a href=\\\"javascript:void(0)\\\">Mike John responded to your email</a></li>\\r\\n                        <li><a href=\\\"javascript:void(0)\\\">You have 5 new tasks</a></li>\\r\\n                        <li><a href=\\\"javascript:void(0)\\\">You're now friend with Andrew</a></li>\\r\\n                        <li><a href=\\\"javascript:void(0)\\\">Another Notification</a></li>\\r\\n                        <li><a href=\\\"javascript:void(0)\\\">Another One</a></li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                       <i class=\\\"material-icons\\\">person</i>\\r\\n                       <p class=\\\"hidden-lg hidden-md\\\">Profile</p>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n\\r\\n            <form class=\\\"navbar-form navbar-right\\\" role=\\\"search\\\">\\r\\n                <div class=\\\"form-group form-black is-empty\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\r\\n                    <span class=\\\"material-input\\\"></span>\\r\\n                </div>\\r\\n                <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n                    <i class=\\\"material-icons\\\">search</i><div class=\\\"ripple-container\\\"></div>\\r\\n                </button>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav> -->\\r\\n\";","import { Component} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, RequiredValidator} from '@angular/forms';\r\nimport { observable, Observable } from 'rxjs';\r\nimport { PatientVisit } from '../../Models/patientvisit';\r\nimport { PatientService} from '../../services/patient.service';\r\nimport { PatientAllergy } from '../../Models/patientallergy1';\r\nimport { PatientDiagnosis } from '../../Models/patientdiagnosis';\r\nimport { PatientProcedure } from '../../Models/patientprocedure';\r\nimport { PatientMedication } from '../../Models/patientmedication';\r\nimport {ToasterService} from '../../core/ToasterService';\r\n\r\n@Component({\r\n  selector: 'app-show-visit-history',\r\n  templateUrl: './show-visit-history.component.html',\r\n  styleUrls: ['./show-visit-history.component.css']\r\n})\r\nexport class ShowVisitHistoryComponent implements OnInit {\r\n  public ob :Observable<string>;\r\n  public obpv:Observable<PatientVisit[]>;\r\n  public oballergy:Observable<PatientAllergy[]>;\r\n  public obdiagnosis:Observable<PatientDiagnosis[]>;\r\n  public obdiagnosismaster:Observable<PatientDiagnosis[]>;\r\n  public obprocedure:Observable<PatientProcedure[]>;\r\n  public obmedication:Observable<PatientMedication[]>;\r\n  success: boolean;\r\n  public patientvisitdoctor;  \r\n  msg:string=\"\";\r\n  public patienvisitallergy;\r\n  public patienvisitdiagnosis;\r\n  public patienvisitprocedure;\r\n  public patienvisitmedication;\r\n  public allergytype: string;\r\n  public chkFatal: string;\r\n  public diagnosistype: string;\r\n  public diagnosisdescription: string;\r\n  public proceduretype: string;\r\n  public proceduredescription: string;\r\n  public medicationtype: string;\r\n  public medicationdosage: string;\r\n  public description: string;\r\n  public AllergyRows: Array<{allergytype: string, chkFatal: boolean}> = [];\r\n  public DiagnosisRows: Array<{diagnosiscode: string, diagnosisdescription: string}> = [];\r\n  public ProcedureRows: Array<{proceduretype: string, proceduredescription: string}> = [];\r\n  public MedicationRows: Array<{medicationtype: string, medicationdescription: string}> = [];\r\n\r\n  @Input()  pId:number;\r\n  @Input()  aId:number;\r\n  @Input()  drName:string;\r\n\r\n  public patientvisitdata: PatientVisit[]=[];\r\n  public patientAllergyData: PatientAllergy[]=[];\r\n  public patientDiagnosisData: PatientDiagnosis[]=[];\r\n  public patientProcedureData: PatientProcedure[]=[];\r\n  public patientMedicationData: PatientMedication[]=[];\r\n  \r\n  fg: FormGroup = new FormGroup({\r\n    height: new FormControl('',Validators.required),\r\n    weight: new FormControl('',Validators.required),\r\n    bloodpressuresystolic: new FormControl('',Validators.required),\r\n    bloodpressurediastolic: new FormControl('',Validators.required),\r\n    bodytemperature: new FormControl('',Validators.required),\r\n    respirationrate : new FormControl('',Validators.required),\r\n    ApptID: new FormControl('',Validators.required),\r\n    DrName: new FormControl('',Validators.required)    \r\n  });\r\n\r\n  constructor(private practitionersvc: PatientService) { }\r\n  loadAppointmentData(aId:number)\r\n  {    \r\n   this.obpv=this.practitionersvc.GetPatientVisitDataByID(this.aId);\r\n   this.obpv.subscribe(\r\n     (pv:PatientVisit[])=>{this.patientvisitdata=pv;\r\n      console.log(this.patientvisitdata)       \r\n       console.log(this.patientvisitdata[\"height\"])\r\n     this.fg.patchValue({\r\n       \"height\": this.patientvisitdata[\"height\"],\r\n       \"weight\": this.patientvisitdata[\"weight\"],\r\n       \"bloodpressuresystolic\": this.patientvisitdata[\"bloodPressureSystolic\"],\r\n       \"bloodpressurediastolic\":this.patientvisitdata[\"bloodPressureDiastolic\"],\r\n       \"bodytemperature\":this.patientvisitdata[\"bodyTemperature\"],\r\n       \"respirationrate\":this.patientvisitdata[\"respirationRate\"]       \r\n     })\r\n   },\r\n   (error:any)=>console.log('fails to load nurse data')\r\n   );\r\n  }\r\n  loadAllergyData(pId:number)\r\n  {    \r\n  this.AllergyRows = [];\r\n   this.oballergy=this.practitionersvc.GetPatientAllergyDataByPatientID(this.pId);\r\n   this.oballergy.subscribe(\r\n     (pv:PatientAllergy[])=>{this.patientAllergyData=pv;      \r\n       console.log(this.patientAllergyData)\r\n       for (let i = 0; i < this.patientAllergyData.length; i++) {\r\n        this.AllergyRows.push( {allergytype: this.patientAllergyData[i].allergyName, \r\n          chkFatal: this.patientAllergyData[i].fatalAllergy } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadDiagnosisData(aId:number)\r\n  {      \r\n   this.DiagnosisRows=[];\r\n   this.obdiagnosis=this.practitionersvc.GetPatientDiagnosisDataByAppointmentID(this.aId);\r\n   this.obdiagnosis.subscribe(\r\n     (pv:PatientDiagnosis[])=>{this.patientDiagnosisData=pv;      \r\n       console.log(this.patientDiagnosisData)\r\n       for (let i = 0; i < this.patientDiagnosisData.length; i++) {\r\n        this.DiagnosisRows.push( {diagnosiscode: this.patientDiagnosisData[i].diagnosisCode, \r\n          diagnosisdescription: this.patientDiagnosisData[i].diagnosisDescription } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadProcedureData(aId:number)\r\n  {   \r\n    this.ProcedureRows=[];\r\n   this.obprocedure=this.practitionersvc.GetPatientProcedureDataByAppointmentID(this.aId);\r\n   this.obprocedure.subscribe(\r\n     (pv:PatientProcedure[])=>{this.patientProcedureData=pv;      \r\n       console.log(this.patientProcedureData[0])\r\n       for (let i = 0; i < this.patientProcedureData.length; i++) {\r\n        this.ProcedureRows.push( {proceduretype: this.patientProcedureData[i].procedureCode, \r\n          proceduredescription: this.patientProcedureData[i].procedureDescription } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadMedicationData(aId:number)\r\n  {   \r\n    this.MedicationRows=[];\r\n   this.obmedication=this.practitionersvc.GetPatientMedicationDataByAppointmentID(this.aId);\r\n   this.obmedication.subscribe(\r\n     (pv:PatientMedication[])=>{this.patientMedicationData=pv;      \r\n       console.log(this.patientMedicationData[0])\r\n       for (let i = 0; i < this.patientMedicationData.length; i++) {\r\n        this.MedicationRows.push( {medicationtype: this.patientMedicationData[i].medicineStrength,          \r\n        medicationdescription: this.patientMedicationData[i].description} );\r\n      }       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n\r\n  DownloadPatientData()\r\n      {\r\n        debugger;\r\n\r\n         this.ob = this.practitionersvc.GetExcelReport(this.aId,this.pId);\r\n        this.ob.subscribe(\r\n          (response: any) =>{\r\n            debugger;\r\n              let dataType = response.type;\r\n              let binaryData = [];\r\n              binaryData.push(response);\r\n              let downloadLink = document.createElement('a');\r\n              downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {type: dataType}));\r\n              let fileName=\"Report_\"+new Date().toLocaleString()+\".xlsx\";\r\n                  downloadLink.setAttribute('download', fileName);\r\n              document.body.appendChild(downloadLink);\r\n              downloadLink.click();\r\n          }\r\n      )\r\n      }\r\n    \r\n  ngOnInit(): void {  \r\n    debugger;  \r\n    this.loadAppointmentData(this.aId);\r\n    this.loadAllergyData(this.pId);\r\n    this.loadDiagnosisData(this.aId);\r\n    this.loadProcedureData(this.aId);\r\n    this.loadMedicationData(this.aId);\r\n    this.fg.patchValue({      \r\n      \"ApptID\":this.aId,\r\n      \"DrName\":\"Dr. \"+this.drName\r\n    })\r\n  }\r\n  functioncallbackFunction(){\r\n    this.success=true;\r\n  }\r\n\r\n}\r\n","export class UserModel{\r\n    email: string;\r\n    oldPassword: string;\r\n    newPassword: string;\r\n        confirmPassword:string;\r\n    constructor(\r\n        email:string,\r\n        oldPassword: string,\r\n        newPassword: string,\r\n        confirmPassword:string,\r\n    ){}\r\n    // get email() { return this.email };\r\n    // set email(email: string) { this.email = email };\r\n    // get oldPassword() { return this.oldPassword };\r\n    // set oldPassword(email: string) { this.oldPassword = email };\r\n    // get newPassword() { return this.newPassword };\r\n    // set newPassword(email: string) { this.newPassword = email };\r\n    // get confirmPassword() { return this.confirmPassword };\r\n    // set confirmPassword(email: string) { this.confirmPassword = email };\r\n    \r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\";","export default \".th-font\\r\\n{\\r\\n    font-size: 15px;\\r\\n    font-weight :bold;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGF0aWVudC9zaG93LXZpc2l0LWhpc3Rvcnkvc2hvdy12aXNpdC1oaXN0b3J5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksZUFBZTtJQUNmLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnQvc2hvdy12aXNpdC1oaXN0b3J5L3Nob3ctdmlzaXQtaGlzdG9yeS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRoLWZvbnRcclxue1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQgOmJvbGQ7XHJcbn0iXX0= */\";","import { Component, OnInit,Input } from '@angular/core';\r\nimport { Observable, observable } from 'rxjs';\r\nimport { Doctors } from '../../models/Doctor';\r\nimport { DoctorServiceService } from '../../services/doctor-service.service'\r\nimport { ViewChild } from '@angular/core';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-schedule',\r\n  templateUrl: './schedule.component.html',\r\n  styleUrls: ['./schedule.component.css']\r\n})\r\nexport class ScheduleComponent implements OnInit {\r\n\r\n  public ob:Observable<Doctors[]>;\r\n  // public doctorsdata: Doctors[]=[];\r\n  public doctorsdata: any;\r\n  public doctorinfo:Doctors;\r\n  public filterStr:string=\"\";\r\n  public drIdForAppointment:number;\r\n  \r\n  @ViewChild('cmbcity')\r\n    public cmbcity: any;\r\n  @ViewChild('cmbspeciality')\r\n    public cmbspeciality: any;\r\n   public rbGender:string=\"\"; \r\n  \r\n    City: string[] = [\r\n      'Mumbai', 'Thane', 'Kalyan', 'Andheri', 'Borivali','Dadar','Sion','Kurla','Ghatkopar','Mulund','Dombivli'\r\n      ,'Airoli','Turbhe','Belapur','Panvel','Bandra','Malad','Virar','Pawai' ];\r\n  \r\n      speciality: string[] = [\r\n        'Allergist', 'Cardiologist', 'Dentist', 'Dermatologist', 'Gynecologist','Neurologist','Pediatrician','Psychiatrist' ];  \r\n  \r\n    constructor(private doctorservice:DoctorServiceService,config: NgbModalConfig, \r\n      private modalService: NgbModal,private spinner:NgxSpinnerService ) {\r\n   //modals used by this component\r\n   config.backdrop = 'static';\r\n   config.keyboard = false;\r\n  \r\n     }\r\n  \r\n  public GetAllDoctor():void\r\n  {\r\n    console.log('ts.GetAllDoctors called');\r\n    this.spinner.show(); \r\n  this.ob=this.doctorservice.GetAllDoctors();\r\n  this.ob.subscribe(\r\n    (dr:any)=>{\r\n      this.spinner.hide();\r\n      this.doctorsdata=dr;\r\n      console.log(this.doctorsdata)\r\n    },\r\n    (error:any)=>console.log('fails to load doctors data')\r\n    );\r\n  }\r\n  \r\n  onChange(mrChange: any) {\r\n    this.rbGender=mrChange.value;\r\n  }\r\n  \r\n  public GetFilterData():void\r\n  {\r\n  // console.log(this.cmbcity.value);\r\n  // console.log(this.cmbspeciality.value);\r\n  // console.log(this.rbGender);\r\n  this.filterStr=\"\";\r\n  if(typeof this.cmbcity.value!= 'undefined' || this.cmbcity.value)\r\n  {\r\n    this.filterStr+=(typeof this.filterStr!='undefined' && this.filterStr)?(\"&city=\"+this.cmbcity.value):(\"city=\"+this.cmbcity.value);\r\n    //console.log(this.filterStr);\r\n  }\r\n  if(typeof this.cmbspeciality.value!= 'undefined' || this.cmbspeciality.value)\r\n  {\r\n    this.filterStr+=(typeof this.filterStr!='undefined' && this.filterStr)?(\"&speciality=\"+this.cmbspeciality.value):(\"speciality=\"+this.cmbspeciality.value);\r\n    //console.log(this.filterStr);\r\n  }\r\n  if(this.rbGender!=\"\")\r\n  {\r\n    this.filterStr+=(typeof this.filterStr!='undefined' && this.filterStr)?(\"&gender=\"+this.rbGender):(\"gender=\"+this.rbGender);\r\n    //console.log(this.filterStr);\r\n  }\r\n  console.log(this.filterStr);\r\n  \r\n  this.ob=this.doctorservice.GetFilteredDoctors(this.filterStr);\r\n  this.ob.subscribe(\r\n    (dr:any)=>{this.doctorsdata=dr;console.log(this.doctorsdata)},\r\n    (error:any)=>console.log('fails to load doctors data')\r\n    );\r\n  \r\n  }\r\n  \r\n  open(content,selectedDrId:number) { // Ng Pop Up Model \r\n    debugger;\r\n    this.modalService.open(content,{ size: 'xl',centered:true });\r\n    this.drIdForAppointment=selectedDrId;\r\n  } \r\n  \r\n    ngOnInit(): void {\r\n      this.GetAllDoctor();\r\n    }\r\n\r\n    receiveMessage($event) {      \r\n      this.modalService.dismissAll();\r\n      this.GetAllDoctor();\r\n    } \r\n}\r\n","export default \"\\r\\n<ngx-spinner></ngx-spinner>\\r\\n<router-outlet></router-outlet>\\r\\n\";","export default \"<footer class=\\\"footer \\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <!-- <nav class=\\\"pull-left\\\">\\r\\n            <ul>\\r\\n                <li>\\r\\n                    <a href=\\\"https://www.creative-tim.com\\\">\\r\\n                        Creative Tim\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a href=\\\"https://creative-tim.com/about-us\\\">\\r\\n                        About Us\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a href=\\\"http://blog.creative-tim.com\\\">\\r\\n                        Blog\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a href=\\\"https://www.creative-tim.com/license\\\">\\r\\n                        Licenses\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </nav> -->\\r\\n        <div class=\\\"copyright pull-center\\\">\\r\\n            &copy;\\r\\n            {{test | date: 'yyyy'}}, Citiustech\\r\\n            <!-- <a href=\\\"https://www.creative-tim.com\\\" target=\\\"_blank\\\">Creative Tim</a> for a better web. -->\\r\\n        </div>\\r\\n    </div>\\r\\n</footer>\\r\\n\";","import { Component, OnInit, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\r\nimport { RegisterService } from '../../services/register.service';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { Appointment } from '../../models/Appointment';\r\nimport { Observable } from 'rxjs';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {AfterViewInit, ViewChild} from '@angular/core';\r\nimport { AuthService } from '../../core/auth.service';\r\nimport { finalize } from 'rxjs/operators'\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PatientService } from '../../services/patient.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-view-appointments',\r\n  templateUrl: './view-appointments.component.html',\r\n  styleUrls: ['./view-appointments.component.css']\r\n})\r\nexport class ViewAppointmentsComponent implements OnInit {\r\n  value = '';\r\n  public ob :Observable<Appointment[]>;\r\n  public regiterData;\r\n  msg:any;\r\n  dataSourceAppointment: any;  \r\n  public AppointmentData: Appointment[]= [];\r\n  public dataSourceAppointmentData: MatTableDataSource<Appointment>;\r\n  role:string;\r\n  res:any;\r\n  public matselection: any;\r\n  public pIdToUpdate:number; \r\n  public aIdToUpdate:number; \r\n  public drnameToUpdate:string; \r\n  public patientnameToUpdate:string; \r\n  public dateToUpdate:string; \r\n  public fromtimeToUpdate:string; \r\n  public totimeToUpdate:string; \r\n  public dridToUpdate:string; \r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  \r\n  displayedColumns = [\r\n                      'ID',\r\n                      'DrID',\r\n                      'Description',\r\n                      'DrName',\r\n                      'PatientID',\r\n                      'PatientName',\r\n                      'Date',\r\n                      'Fromtime',\r\n                      'Totime',\r\n                      'View_Edit_Delete'                                            \r\n                     ];\r\n  constructor(private registerService: RegisterService,\r\n              private authService: AuthService,\r\n              private router: Router, private route: ActivatedRoute,\r\n              private modalService: NgbModal,\r\n              private patientsvc:PatientService,\r\n              private spinner:NgxSpinnerService,) { }  \r\n  public Getjson():void\r\n  {    \r\n    this.ob = this.registerService.GetAppointmentJsonData()\r\n    this.ob.subscribe(\r\n      data => {         \r\n        console.log(data);\r\n        // this.AppointmentData = data;\r\n        // this.dataSourceAppointmentData = data;\r\n        this.dataSourceAppointmentData =new MatTableDataSource<Appointment>(data);\r\n        this.dataSourceAppointmentData.paginator = this.paginator;\r\n        this.dataSourceAppointmentData.sort = this.sort;\r\n      },\r\n      (error: any) => console.log(\"Error in saving regiter data\")\r\n      );\r\n      this.dataSourceAppointment = new MatTableDataSource<Appointment>(this.AppointmentData);\r\n      console.log(\"Data Source: \"+this.AppointmentData);\r\n      \r\n  }\r\n  ngOnInit(): void {\r\n    this.Getjson();\r\n    this.dataSourceAppointment.paginator = this.paginator;\r\n    this.initRole();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.Getjson();\r\n    this.dataSourceAppointment.paginator = this.paginator;\r\n  }\r\n  initRole(){\r\n    this.authService.getUserRole(this.authService.email)\r\n      .pipe(finalize(() => {\r\n      }))  \r\n      .subscribe(\r\n      result => {         \r\n         if(result) {                    \r\n            this.res = result;    \r\n            this.role = this.res.role;\r\n         }\r\n      },\r\n      error => {\r\n      });\r\n  } \r\n  open(content,selectedaId?:number,selectedpId?:number)\r\n  { // Ng Pop Up Model    \r\n    this.modalService.open(content,{ size:'xl',centered:true,scrollable:true});    \r\n    this.aIdToUpdate=selectedaId;  \r\n    this.pIdToUpdate=selectedpId;   \r\n  }\r\n  openAction(content,selectedaId?:number,selectedpId?:number,selecteddrname?:string,selectedpatientname?:string,\r\n    selecteddate?:string,selectedfromtime?:string,selectedtotime?:string,selecteddrid?:string)\r\n    {\r\n      debugger;\r\n      this.modalService.open(content,{ size:'xl',centered:true,scrollable:true});    \r\n      this.aIdToUpdate=selectedaId;  \r\n      this.pIdToUpdate=selectedpId;\r\n      this.drnameToUpdate=selecteddrname;\r\n      this.patientnameToUpdate=selectedpatientname;\r\n      this.dateToUpdate=selecteddate;\r\n      this.fromtimeToUpdate=selectedfromtime;\r\n      this.totimeToUpdate=selectedtotime;\r\n      this.dridToUpdate=selecteddrid;    \r\n    }   \r\n    receiveMessage($event) {      \r\n      this.modalService.dismissAll();\r\n      this.Getjson();\r\n    } \r\n}\r\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FullCalendarModule } from '@fullcalendar/angular';\r\n\r\nimport { AppRoutingModule } from './app.routing';\r\nimport { ComponentsModule } from './components/components.module';\r\nimport { SharedMaterialModule } from './shared-modules/shared-material.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { TableListComponent } from './table-list/table-list.component';\r\nimport { TypographyComponent } from './typography/typography.component';\r\nimport { IconsComponent } from './icons/icons.component';\r\nimport { MapsComponent } from './maps/maps.component';\r\nimport { NotificationsComponent } from './notifications/notifications.component';\r\nimport { UpgradeComponent } from './upgrade/upgrade.component';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { AdminLayoutComponent } from './layouts/admin-layout/admin-layout.component';\r\nimport { CalendarComponent } from './calendar/calendar.component';\r\nimport { DoctorComponent } from './admin/doctor/doctor.component';\r\nimport { RegisterComponent } from './admin/register/register.component';\r\nimport { NgxSpinnerModule,NgxSpinnerService  } from 'ngx-spinner';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountModule } from './account/account.module';\r\nimport { AuthCallbackComponent } from './auth-callback/auth-callback.component';\r\nimport { ChangepasswordComponent } from './changepassword/changepassword.component';\r\nimport { ViewDataComponent } from './patient/view-data/view-data.component';\r\nimport { BookAppointmentComponent } from './scheduling/book-appointment/book-appointment.component';\r\nimport { ScheduleComponent } from './scheduling/schedule/schedule.component'; \r\nimport {SelectAutocompleteModule} from 'mat-select-autocomplete';\r\nimport { PatientVisitDoctorComponent } from './patient-visit/patient-visit-doctor/patient-visit-doctor.component';\r\nimport { PatientVisitNurseComponent } from './patient-visit/patient-visit-nurse/patient-visit-nurse.component';\r\nimport { AppointmentActionComponent } from './scheduling/appointment-action/appointment-action.component';\r\nimport { ViewAppointmentsComponent } from './scheduling/view-appointments/view-appointments.component';\r\nimport { VisithistorydataComponent } from './patient/visithistorydata/visithistorydata.component';\r\nimport { ShowVisitHistoryComponent } from './patient/show-visit-history/show-visit-history.component';\r\n@NgModule({\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    ComponentsModule,\r\n    RouterModule,\r\n    AppRoutingModule,\r\n    FullCalendarModule,\r\n    NgxSpinnerModule,\r\n    SharedMaterialModule,\r\n    BrowserModule,\r\n    CommonModule,\r\n    AccountModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'YOUR_GOOGLE_MAPS_API_KEY'\r\n    }),\r\n    NgbModule,\r\n    ToastrModule.forRoot({\r\n      positionClass :'toast-bottom-right'\r\n    }),\r\n    SelectAutocompleteModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    AdminLayoutComponent,\r\n    AuthCallbackComponent,\r\n    ChangepasswordComponent,\r\n    ViewDataComponent,\r\n    BookAppointmentComponent,\r\n    ScheduleComponent,\r\n    PatientVisitDoctorComponent,\r\n    PatientVisitNurseComponent,\r\n    AppointmentActionComponent,\r\n    ViewAppointmentsComponent,\r\n    VisithistorydataComponent,\r\n    ShowVisitHistoryComponent\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \".center {\\r\\n    display: block;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    /* width: 50%; */\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NoZWR1bGluZy9zY2hlZHVsZS9zY2hlZHVsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0VBQ2xCIiwiZmlsZSI6InNyYy9hcHAvc2NoZWR1bGluZy9zY2hlZHVsZS9zY2hlZHVsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNlbnRlciB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgLyogd2lkdGg6IDUwJTsgKi9cclxuICB9Il19 */\";","import { Component, Input, OnInit,Output,EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, RequiredValidator} from '@angular/forms';\r\nimport { observable, Observable } from 'rxjs';\r\nimport { PatientVisit } from '../../Models/patientvisit';\r\nimport { PatientService} from '../../services/patient.service';\r\nimport { PatientAllergy } from '../../Models/patientallergy1';\r\nimport { PatientDiagnosis } from '../../Models/patientdiagnosis';\r\nimport { PatientProcedure } from '../../Models/patientprocedure';\r\nimport { PatientMedication } from '../../Models/patientmedication';\r\nimport { ToasterPosition } from '../../../app/core/ToasterPosition';\r\nimport { ToasterService } from '../../core/ToasterService';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-patient-visit-nurse',\r\n  templateUrl: './patient-visit-nurse.component.html',\r\n  styleUrls: ['./patient-visit-nurse.component.css']\r\n})\r\nexport class PatientVisitNurseComponent implements OnInit {\r\n  public ob :Observable<string>;\r\n  public obpv:Observable<PatientVisit[]>;\r\n  public oballergy:Observable<PatientAllergy[]>;\r\n  public obdiagnosis:Observable<PatientDiagnosis[]>;\r\n  public obprocedure:Observable<PatientProcedure[]>;\r\n  public obmedication:Observable<PatientMedication[]>;\r\n  success:boolean;\r\n  public patientvisitnurse;\r\n  public patienvisitallergy;\r\n  msg:string=\"\";\r\n  public allergytype: string;\r\n  public chkFatal: string;\r\n  public AllergyRows: Array<{allergytype: string, chkFatal: boolean}> = [];\r\n  public DiagnosisRows: Array<{diagnosistype: string, diagnosisdescription: string}> = [];\r\n  public ProcedureRows: Array<{proceduretype: string, proceduredescription: string}> = [];\r\n  public MedicationRows: Array<{medicationtype: string, medicationdescription: string}> = [];\r\n\r\n  @Input()  aId:number;\r\n  @Input()  pId:number;\r\n  @Output(\"parentFun\") parentFun: EventEmitter<any> = new EventEmitter();\r\n\r\n  public patientvisitdata: PatientVisit[]=[];\r\n  public patientAllergyData: PatientAllergy[]=[];\r\n  public patientDiagnosisData: PatientDiagnosis[]=[];\r\n  public patientProcedureData: PatientProcedure[]=[];\r\n  public patientMedicationData: PatientMedication[]=[];\r\n  public allergyMaster:any;\r\n\r\n  fg: FormGroup = new FormGroup({\r\n    height: new FormControl('',Validators.required),\r\n    weight: new FormControl('',Validators.required),\r\n    bloodpressuresystolic: new FormControl('',Validators.required),\r\n    bloodpressurediastolic: new FormControl('',Validators.required),\r\n    bodytemperature: new FormControl('',Validators.required),\r\n    respirationrate : new FormControl('',Validators.required)//,\r\n    // ApptID: new FormControl('',Validators.required),\r\n    // PtID: new FormControl('',Validators.required)   \r\n  });\r\n  constructor(private practitionersvc: PatientService,private toaster: ToasterService,private spinner:NgxSpinnerService ) { }\r\n\r\n  AddAllergy() {           \r\n    //this.AllergyRows.push( {allergytype: this.allergytype, chkFatal: this.chkFatal==null?'false':'true' } );\r\n    this.patienvisitallergy = new PatientAllergy(parseInt(this.allergytype.toString()),\r\n    this.chkFatal==null?false:true,parseInt(this.pId.toString()));\r\n    this.ob = this.practitionersvc.SavePatientVisitAllergyData(this.patienvisitallergy)\r\n    \r\n    this.ob.subscribe(      \r\n      data => { \r\n        console.log(data);      \r\n        console.log(\"Output Is: \"+data[\"allergy\"]); \r\n        this.msg = data[\"firstname\"]+ \", has Registered Successfully\" },\r\n      (error: any) => console.log(\"Error in saving patientvisitallergy data\")\r\n      );\r\n    this.allergytype = null;\r\n    this.chkFatal = null;\r\n    this.loadAllergyData(this.pId);\r\n  }\r\n\r\n  SavePatientVisitNurse():void\r\n  {\r\n    let operation:string=\"\";\r\n    console.log(this.fg.value.height);\r\n    this.patientvisitnurse=new PatientVisit(\r\n      parseInt(this.pId.toString()),parseInt(this.aId.toString()),parseInt(this.fg.value.height),\r\n      parseInt(this.fg.value.weight),parseInt(this.fg.value.bloodpressuresystolic),\r\n      parseInt(this.fg.value.bloodpressurediastolic),parseInt(this.fg.value.bodytemperature)\r\n      ,parseInt(this.fg.value.respirationrate)); \r\n      debugger;     \r\n      if(this.patientvisitdata[\"id\"] > 0)\r\n      {          \r\n          operation=\"PATCH\";  \r\n          this.patientvisitnurse.appointmentid=this.patientvisitdata[\"appointmentId\"]; \r\n          console.log(this.patientvisitnurse);       \r\n      }\r\n      else\r\n      {\r\n        operation=\"POST\";\r\n      }\r\n    if(this.fg.invalid==false)\r\n    { \r\n      this.ob = this.practitionersvc.SavePatientVisitData(this.patientvisitnurse,operation)\r\n\r\n      this.ob.subscribe(      \r\n        data => { \r\n          console.log(data); \r\n          if(data !=null)\r\n          {\r\n          this.success = true;\r\n          this.sendMessage();\r\n          this.toaster.success(\"Success\",data[\"response\"],ToasterPosition.topFull,this.functioncallbackFunction)   \r\n          }     \r\n          console.log(\"Output Is: \"+data[\"height\"]); \r\n          this.msg = data[\"firstname\"]+ \", has Registered Successfully\" },\r\n        (error: any) => console.log(\"Error in saving patientvisitnurse data\")\r\n        );\r\n    }\r\n  }\r\n  loadAppointmentData(aId:number)\r\n  {    \r\n   this.obpv=this.practitionersvc.GetPatientVisitDataByID(this.aId);\r\n   this.obpv.subscribe(\r\n     (pv:PatientVisit[])=>{this.patientvisitdata=pv;\r\n      console.log(this.patientvisitdata)       \r\n       console.log(this.patientvisitdata[\"height\"])\r\n     this.fg.patchValue({\r\n       \"height\": this.patientvisitdata[\"height\"],\r\n       \"weight\": this.patientvisitdata[\"weight\"],\r\n       \"bloodpressuresystolic\": this.patientvisitdata[\"bloodPressureSystolic\"],\r\n       \"bloodpressurediastolic\":this.patientvisitdata[\"bloodPressureDiastolic\"],\r\n       \"bodytemperature\":this.patientvisitdata[\"bodyTemperature\"],\r\n       \"respirationrate\":this.patientvisitdata[\"respirationRate\"]       \r\n     })\r\n   },\r\n   (error:any)=>console.log('fails to load nurse data')\r\n   );\r\n  }\r\n  loadAllergyData(pId:number)\r\n  {    \r\n    this.AllergyRows=[];\r\n   this.oballergy=this.practitionersvc.GetPatientAllergyDataByPatientID(this.pId);\r\n   this.oballergy.subscribe(\r\n     (pv:PatientAllergy[])=>{this.patientAllergyData=pv;             \r\n       for (let i = 0; i < this.patientAllergyData.length; i++) {\r\n        this.AllergyRows.push( {allergytype: this.patientAllergyData[i].allergyName, \r\n          chkFatal: this.patientAllergyData[i].fatalAllergy } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadDiagnosisData(aId:number)\r\n  {   \r\n   this.obdiagnosis=this.practitionersvc.GetPatientDiagnosisDataByAppointmentID(this.aId);\r\n   this.obdiagnosis.subscribe(\r\n     (pv:PatientDiagnosis[])=>{this.patientDiagnosisData=pv;             \r\n       for (let i = 0; i < this.patientDiagnosisData.length; i++) {\r\n        this.DiagnosisRows.push( {diagnosistype: this.patientDiagnosisData[i].diagnosisCode, \r\n          diagnosisdescription: this.patientDiagnosisData[i].diagnosisDescription } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadProcedureData(aId:number)\r\n  {   \r\n    \r\n   this.obprocedure=this.practitionersvc.GetPatientProcedureDataByAppointmentID(this.aId);\r\n   this.obprocedure.subscribe(\r\n     (pv:PatientProcedure[])=>{this.patientProcedureData=pv;      \r\n       console.log(this.patientProcedureData[0])\r\n       for (let i = 0; i < this.patientProcedureData.length; i++) {\r\n        this.ProcedureRows.push( {proceduretype: this.patientProcedureData[i].procedureCode, \r\n          proceduredescription: this.patientProcedureData[i].procedureDescription } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadMedicationData(aId:number)\r\n  {   \r\n    \r\n    this.obmedication=this.practitionersvc.GetPatientMedicationDataByAppointmentID(this.aId);\r\n    this.obmedication.subscribe(\r\n      (pv:PatientMedication[])=>{this.patientMedicationData=pv;      \r\n        console.log(this.patientMedicationData[0])\r\n        for (let i = 0; i < this.patientMedicationData.length; i++) {\r\n         this.MedicationRows.push( {medicationtype: this.patientMedicationData[i].medicineStrength,          \r\n         medicationdescription: this.patientMedicationData[i].description} );\r\n       }\r\n        \r\n    },\r\n    (error:any)=>console.log('fails to load allergy data')\r\n    );\r\n   }\r\n  ngOnInit(): void {\r\n    this.loadAppointmentData(this.aId);\r\n    this.loadAllergyData(this.pId);\r\n    this.loadDiagnosisData(this.aId);\r\n    this.loadProcedureData(this.aId);\r\n    this.loadMedicationData(this.aId);\r\n    // this.fg.patchValue({      \r\n    //   \"ApptID\":\"A0\"+this.aId,\r\n    //   \"PtID\":\"P0\"+this.pId\r\n    // })\r\n    this.loadAllergyMaster();\r\n  }\r\n  functioncallbackFunction(){\r\n    this.success=true;\r\n  }\r\n  loadAllergyMaster()\r\n  {\r\n    this.oballergy=this.practitionersvc.GetAllergyMasterVisit();\r\n    this.oballergy.subscribe(\r\n      (data:any)=>{        \r\n      this.allergyMaster=data;      \r\n      }      \r\n    )\r\n    console.log(this.allergyMaster);\r\n  }\r\n  sendMessage() {\r\n    //this.messageEvent.emit(this.message);\r\n    this.parentFun.emit();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, } from '@angular/common';\r\nimport { BrowserModule  } from '@angular/platform-browser';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AdminLayoutComponent } from './layouts/admin-layout/admin-layout.component';\r\n//import { AccountRoutingModule } from './account/account-routes.module'\r\nimport { LoginComponent } from './account/login/login.component';\r\nimport { AuthCallbackComponent } from './auth-callback/auth-callback.component';\r\nimport { ChangepasswordComponent } from './changepassword/changepassword.component';\r\nconst routes: Routes =[\r\n  {\r\n    path: '',\r\n    redirectTo: 'dashboard',\r\n    pathMatch: 'full',\r\n  }, {\r\n    path: '',\r\n    component: AdminLayoutComponent,\r\n    children: [{\r\n      path: '',\r\n      loadChildren: './layouts/admin-layout/admin-layout.module#AdminLayoutModule'\r\n    }]\r\n  },\r\n  {\r\n    path: \"auth-callback\",\r\n    component: AuthCallbackComponent,\r\n  },\r\n  // {\r\n  //   path: \"changepassword\",\r\n  //   component: ChangepasswordComponent,\r\n  // }\r\n  //{ path:'sharedwrapper', loadChildren:()=> import('./layout/AdminLayoutModule').then(m=>m.AdminLayoutModule)}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    RouterModule.forRoot(routes,{\r\n    //useHash: true, \r\n    relativeLinkResolution: 'legacy'\r\n})\r\n  ],\r\n  exports: [\r\n  ],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { finalize } from 'rxjs/operators'\r\nimport { AuthService } from '../../core/auth.service';\r\nimport { UserRegistration }    from '../../models/user.registration';\r\n \r\nimport { ToasterService } from './../../core/ToasterService';\r\nimport { ToasterPosition } from './../../core/ToasterPosition';\r\nimport { Roles } from '../../core/dropdownmaster.service'; \r\n@Component({\r\n  selector: 'app-registers',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  success: boolean;\r\n  error: string;\r\n  userRegistration: UserRegistration = { name: '', email: '', password: '',role:''};\r\n  submitted: boolean = false;\r\n  roles:any;\r\n  constructor(private authService: AuthService,private toastr: ToasterService,private spinner: NgxSpinnerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.roles = Roles;\r\n  }\r\n  keys() : Array<string> {\r\n    var keys = Object.keys(this.roles);\r\n    //console.log(keys);\r\n    return keys;\r\n    //return keys.slice(keys.length / 2);\r\n  }\r\n  onSubmit1(){\r\n    this.success=true;\r\n    this.toastr.success('Success', 'Registered successfully',ToasterPosition.topFull,this.functioncallbackFunction);\r\n  }\r\n  onSubmit() { \r\n\r\n    this.spinner.show();\r\n\r\n    this.authService.register(this.userRegistration)\r\n      .pipe(finalize(() => {\r\n        this.spinner.hide();\r\n      }))  \r\n      .subscribe(\r\n      result => {         \r\n         if(result) {\r\n           console.log(\"Succeess\");\r\n           this.success = true;\r\n           this.toastr.success('Success', 'Registered successfully',ToasterPosition.topFull,this.functioncallbackFunction);\r\n         }\r\n      },\r\n      error => {\r\n        //if(error.status==='undefined')\r\n        this.toastr.error('Error',\"Unexpected error occured. Please contact administrator.\",ToasterPosition.topFull);\r\n        //else\r\n          //this.toastr.error('Error',error,ToasterPosition.topFull,this.functioncallbackFunction\r\n          this.error = error;       \r\n      });\r\n  }\r\n  functioncallbackFunction(){\r\n    //this.toastr.warning(\"warning\",\"Testing\",ToasterPosition.topFull);\r\n    this.success=true;\r\n  }\r\n\r\n}\r\n","var map = {\n\t\"./layouts/admin-layout/admin-layout.module\": [\n\t\t\"IqXj\",\n\t\t\"layouts-admin-layout-admin-layout-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"crnd\";\nmodule.exports = webpackAsyncContext;","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"divclass\\\">\\r\\n            <div>\\r\\n                <table mat-table [dataSource]=\\\"dataSourceAppointmentData\\\" class=\\\"table table-striped table-responsive-md\\\">    \\r\\n                    <ng-container matColumnDef=\\\"ID\\\">                      \\r\\n                      <th mat-header-cell *matHeaderCellDef [ngClass]=\\\"{'fontSizeBold': true}\\\"> Appt ID.</th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                    </ng-container>    \\r\\n                    <ng-container matColumnDef=\\\"Description\\\">                      \\r\\n                      <th mat-header-cell *matHeaderCellDef [ngClass]=\\\"{'fontSizeBold': true}\\\"> Description</th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n                    </ng-container> \\r\\n                    <ng-container matColumnDef=\\\"DrID\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef [ngClass]=\\\"{'fontSizeBold': true}\\\"> DrID </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.drDisplayId}} </td>\\r\\n                    </ng-container>  \\r\\n                    <ng-container matColumnDef=\\\"DrName\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef [ngClass]=\\\"{'fontSizeBold': true}\\\"> Dr. Name </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.drname}} </td>\\r\\n                    </ng-container>  \\r\\n                    <ng-container matColumnDef=\\\"PatientID\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef [ngClass]=\\\"{'fontSizeBold': true}\\\"> PatientID </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.patientDisplayId}} </td>\\r\\n                    </ng-container> \\r\\n                    <ng-container matColumnDef=\\\"PatientName\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef [ngClass]=\\\"{'fontSizeBold': true}\\\"> Patient Name </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.patientname}} </td>\\r\\n                    </ng-container>  \\r\\n                    <ng-container matColumnDef=\\\"Date\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef [ngClass]=\\\"{'fontSizeBold': true}\\\"> Date </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date}} </td>\\r\\n                    </ng-container> \\r\\n                    <ng-container matColumnDef=\\\"Fromtime\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef [ngClass]=\\\"{'fontSizeBold': true}\\\"> From Time </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fromtime}} </td>\\r\\n                    </ng-container>      \\r\\n                    <ng-container matColumnDef=\\\"Totime\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef [ngClass]=\\\"{'fontSizeBold': true}\\\"> To Time </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.totime}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"View_Edit_Delete\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef [ngClass]=\\\"{'fontSizeBold': true}\\\"> Actions </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                          <!-- <button class=\\\"btn\\\" (click)=\\\"Viewopen(Viewcontent,element.id )\\\" [ngClass]=\\\"{'bgColor': true}\\\" style=\\\"color: #0047AB;\\\" title=\\\"Approve\\\"><mat-icon>check_circle</mat-icon></button>\\r\\n                          <button class=\\\"btn\\\" (click)=\\\"Editopen(Editcontent,element.id )\\\" [ngClass]=\\\"{'bgColor': true}\\\" style=\\\"color: #0047AB;\\\" title=\\\"Reject\\\"><mat-icon>clear</mat-icon></button> -->\\r\\n              \\r\\n                          <button class=\\\"btn btn-outline-primary\\\" *ngIf=\\\"this.role=='doctor'\\\" (click)=\\\"openAction(AppointmentAction,element.id,element.patientid,element.drname,element.patientname,element.date,element.fromtime,element.totime,element.drid)\\\">Action</button> \\r\\n                          <button class=\\\"btn btn-outline-primary\\\" *ngIf=\\\"this.role=='doctor' && element.isApproved==true\\\" (click)=\\\"open(doctorcontent,element.id,element.patientid)\\\">Patient Visit</button> \\r\\n                          <button class=\\\"btn btn-outline-primary\\\" *ngIf=\\\"this.role=='nurse' && element.isApproved==true\\\" (click)=\\\"open(nursecontent,element.id,element.patientid)\\\">Patient Visit</button>           \\r\\n                          \\r\\n                      </td>\\r\\n                    </ng-container>                   \\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                  </table>\\r\\n                  <mat-paginator [length]=\\\"100\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" style=\\\"color: #0047AB; font-size: small;\\\">\\r\\n                  </mat-paginator>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modalTagReg\\\">\\r\\n            <ng-template #doctorcontent let-c=\\\"close\\\" let-d=\\\"dismiss\\\" >    \\r\\n              <!-- <div class=\\\"modal-body\\\" [ngClass]=\\\"{'ModelPopUpClass': true}\\\"> -->\\r\\n                <div class=\\\"modal-body\\\" >\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n                  <span aria-hidden=\\\"true\\\">&times; &nbsp;</span>\\r\\n                </button>\\r\\n              </div> \\r\\n                <app-patient-visit-doctor (parentFun)=\\\"receiveMessage()\\\" [aId]=\\\"aIdToUpdate\\\" [pId]=\\\"pIdToUpdate\\\" ></app-patient-visit-doctor>               \\r\\n            </ng-template>\\r\\n            <ng-template #nursecontent let-c=\\\"close\\\" let-d=\\\"dismiss\\\" >    \\r\\n              <!-- <div class=\\\"modal-body\\\" [ngClass]=\\\"{'ModelPopUpClass': true}\\\"> -->\\r\\n                <div class=\\\"modal-body\\\" >\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n                  <span aria-hidden=\\\"true\\\">&times; &nbsp;</span>\\r\\n                </button>\\r\\n              </div> \\r\\n                <app-patient-visit-nurse (parentFun)=\\\"receiveMessage()\\\" [pId]=\\\"pIdToUpdate\\\" [aId]=\\\"aIdToUpdate\\\"></app-patient-visit-nurse>\\r\\n               \\r\\n            </ng-template>\\r\\n            <ng-template #AppointmentAction let-c=\\\"close\\\" let-d=\\\"dismiss\\\" >    \\r\\n              <!-- <div class=\\\"modal-body\\\" [ngClass]=\\\"{'ModelPopUpClass': true}\\\"> -->\\r\\n                <div class=\\\"modal-body\\\" >\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n                  <span aria-hidden=\\\"true\\\">&times; &nbsp;</span>\\r\\n                </button>\\r\\n              </div> \\r\\n                <app-appointment-action (parentFun)=\\\"receiveMessage()\\\" [aId]=\\\"aIdToUpdate\\\" [pId]=\\\"pIdToUpdate\\\" [drname]=\\\"drnameToUpdate\\\" \\r\\n                [patientname]=\\\"patientnameToUpdate\\\" [date]=\\\"dateToUpdate\\\" [fromtime]=\\\"fromtimeToUpdate\\\"\\r\\n                [totime]=\\\"totimeToUpdate\\\" [drid]=\\\"dridToUpdate\\\">\\r\\n              \\r\\n              </app-appointment-action>\\r\\n               \\r\\n            </ng-template>\\r\\n          </div>\\r\\n    </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../core/auth.service';\r\nimport { NgxSpinnerModule,NgxSpinnerService } from 'ngx-spinner';\r\n@Component({\r\n  selector: 'app-userlogin',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService,private spinner:NgxSpinnerService) { }    \r\n  \r\n    title = \"Login\";\r\n    \r\n    public Login():void {     \r\n      this.spinner.show();\r\n      this.authService.login();\r\n    }   \r\n\r\n    ngOnInit() {\r\n      this.spinner.show();\r\n      this.Login();\r\n    }\r\n  \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToasterPosition } from './ToasterPosition';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport { timeout } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ToasterService{\r\n    constructor(private toastr: ToastrService) {}\r\n    timeout:number= 3000;\r\n  public error(title: string, message: string, positionClass: ToasterPosition,timein:number=this.timeout) {\r\n    this.toastr.error(message, title, {positionClass,timeOut:timein} );\r\n  }\r\n  public success(title: string, message: string, positionClass: ToasterPosition,mycallback:any=this.Callback,timein:number = this.timeout) {\r\n    this.toastr.success(message, title,{ positionClass,timeOut:timein,closeButton:true, } );\r\n    mycallback();\r\n  }\r\n  public warning(title: string, message: string, positionClass: ToasterPosition,timein:number = this.timeout) {\r\n    this.toastr.warning(message, title,{ positionClass,timeOut:timein } );\r\n  }\r\n  public info(title: string, message: string, positionClass: ToasterPosition,timein:number=this.timeout) {\r\n    this.toastr.info(message, title,{ positionClass,timeOut:timein } );\r\n  }\r\n  public showresponse(title: string='', message: string, positionClass: ToasterPosition) {\r\n    switch(title){\r\n      case \"\":{\r\n\r\n      }\r\n      case \"\":{\r\n        \r\n      }\r\n      case \"\":{\r\n        \r\n      }\r\n      case \"\":{\r\n        \r\n      }\r\n      case \"\":{\r\n        \r\n      }\r\n    } \r\n    this.toastr.info(message, title,{ positionClass } );\r\n  }\r\n  public mycallback(){\r\n    console.log(\"call\");\r\n  }\r\n  public Callback(){\r\n    console.log(\"call\");\r\n  }\r\n  \r\n\r\n}","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-danger\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Book Appointment</h4>\\r\\n                        <p class=\\\"card-category\\\"></p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <form class=\\\"form-group\\\"  [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"SaveAppointmentData()\\\">\\r\\n                            <!-- <h2>Book Appointment</h2> -->\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xl-6\\\">\\r\\n                                        <label for=\\\"drname\\\">Doctor: </label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control bold-text\\\" name=\\\"drname\\\" formControlName=\\\"doctorname\\\" placeholder=\\\"\\\" readonly>\\r\\n                                        \\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xl-6\\\">\\r\\n                                        <label for=\\\"ptname\\\">Patient:</label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control bold-text\\\" name=\\\"ptname\\\" formControlName=\\\"patientname\\\" readonly>\\r\\n                                       \\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xl-6\\\">\\r\\n                                        <label for=\\\"speciality\\\">Speciality: </label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control bold-text\\\" name=\\\"speciality\\\" formControlName=\\\"spetiality\\\" placeholder=\\\"\\\" readonly>\\r\\n                                    \\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xl-6\\\">\\r\\n                                        <label for=\\\"shdate\\\">Date: <span class=\\\"asterisk\\\"> *</span></label>                    \\r\\n                                        <input type=\\\"date\\\" [min]=\\\"getToday()\\\" class=\\\"form-control\\\" name=\\\"shdate\\\" formControlName=\\\"appointmentdate\\\">\\r\\n                                        <span class=\\\"asterisk\\\" *ngIf=\\\"userForm.get('appointmentdate').touched && userForm.get('appointmentdate').errors?.required\\\">\\r\\n                                            Date is required!\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-xl-6\\\">\\r\\n                                <label for=\\\"from\\\">From: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                <input type=\\\"time\\\" class=\\\"form-control\\\" name=\\\"from\\\" formControlName=\\\"fromtime\\\">\\r\\n                                <span class=\\\"asterisk\\\" *ngIf=\\\"userForm.get('fromtime').touched && userForm.get('fromtime').errors?.required\\\">\\r\\n                                    From time is required!\\r\\n                                </span>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xl-6\\\">\\r\\n                                <label for=\\\"to\\\">To: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                <input type=\\\"time\\\" class=\\\"form-control\\\" name=\\\"to\\\" formControlName=\\\"totime\\\">\\r\\n                                <span class=\\\"asterisk\\\" *ngIf=\\\"userForm.get('totime').touched && userForm.get('totime').errors?.required\\\">\\r\\n                                    To Time is required!\\r\\n                                </span>\\r\\n                            </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group row col-xl-12\\\">\\r\\n                                <label for=\\\"desc\\\">Short Description: </label>\\r\\n                                <textarea class=\\\"form-control\\\" name=\\\"desc\\\" formControlName=\\\"description\\\"></textarea>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">            \\r\\n                                <button id=\\\"btnSubmit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!userForm.valid\\\">Book Appointment</button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";","export default \"<form class=\\\"text-center border border-light p-5\\\">\\r\\n\\r\\n    <!-- <p class=\\\"h4 mb-4\\\">Sign in</p>\\r\\n    <input type=\\\"email\\\" id=\\\"defaultLoginFormEmail\\\" class=\\\"form-control mb-4\\\" placeholder=\\\"E-mail\\\">\\r\\n    <input type=\\\"password\\\" id=\\\"defaultLoginFormPassword\\\" class=\\\"form-control mb-4\\\" placeholder=\\\"Password\\\">\\r\\n    <div class=\\\"d-flex justify-content-around\\\">\\r\\n      <div>\\r\\n        <a href=\\\"\\\">Forgot password?</a>\\r\\n      </div>\\r\\n    </div> -->\\r\\n    <h3>OPENID Authentication</h3>\\r\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"Login()\\\">\\r\\n      Login\\r\\n    </button>\\r\\n  \\r\\n    <!-- <p>Not a member?\\r\\n      <a href=\\\"\\\">Register</a>\\r\\n    </p> -->\\r\\n     \\r\\n  </form>\\r\\n  <ngx-spinner></ngx-spinner>\";","export class PatientMedication{\r\n  constructor(              \r\n      public medicationid:number=0,\r\n      //public dosage:string=\"\",\r\n      public description:string=\"\",\r\n      //public patientid:string=\"\",\r\n      public appointmentid:number=0,\r\n      public medicineStrength:string=\"\"\r\n   )\r\n  {}\r\n\r\n// get Medication() { return this.medication };\r\n// set Medication(data: string) { this.medication = data };\r\n\r\n// get Dosage() { return this.dosage };\r\n// set Dosage(data: string) { this.dosage = data };\r\n\r\n// get Medicationdescription() { return this.medicationdescription };\r\n// set Medicationdescription(data: string) { this.medicationdescription = data };\r\n\r\n// get Patientid() { return this.patientid };\r\n// set Patientid(data: string) { this.patientid = data };\r\n\r\n// get Appointmentid() { return this.appointmentid };\r\n// set Appointmentid(data: string) { this.appointmentid = data };\r\n}","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { ROUTES } from '../sidebar/sidebar.component';\r\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../core/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { title } from 'process';\r\nimport {Notification} from '../../models/Notification';\r\nimport {NotificationsService} from '../../services/notifications.service';\r\nimport {DatePipe} from '@angular/common';\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n  providers:[DatePipe]\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n    private listTitles: any[];\r\n    location: Location;\r\n      mobile_menu_visible: any = 0;\r\n    private toggleButton: any;\r\n    private sidebarVisible: boolean;\r\n\r\n\r\n      //#region Notification\r\n      public badgeValue:string=\"0\";\r\n      public ob :Observable<Notification[]>;\r\n      public notificationData:Notification[]=[];\r\n      //#endregion\r\n\r\n    name:string;\r\n    constructor(location: Location,  private element: ElementRef, private router: Router, private auth:AuthService\r\n        ,private notificationsvc:NotificationsService,private datepipe: DatePipe) {\r\n      this.location = location;\r\n          this.sidebarVisible = false;\r\n    }\r\n\r\n    ngOnInit(){\r\n        this.name = this.auth.name;\r\n      //this.listTitles = ROUTES.filter(listTitle => listTitle);\r\n      const navbar: HTMLElement = this.element.nativeElement;\r\n      this.toggleButton = navbar.getElementsByClassName('navbar-toggler')[0];\r\n      this.router.events.subscribe((event) => {\r\n        this.sidebarClose();\r\n         var $layer: any = document.getElementsByClassName('close-layer')[0];\r\n         if ($layer) {\r\n           $layer.remove();\r\n           this.mobile_menu_visible = 0;\r\n         }\r\n     });\r\n     this.loadNotifications();\r\n    }\r\n\r\n    sidebarOpen() {\r\n        const toggleButton = this.toggleButton;\r\n        const body = document.getElementsByTagName('body')[0];\r\n        setTimeout(function(){\r\n            toggleButton.classList.add('toggled');\r\n        }, 500);\r\n\r\n        body.classList.add('nav-open');\r\n\r\n        this.sidebarVisible = true;\r\n    };\r\n    sidebarClose() {\r\n        const body = document.getElementsByTagName('body')[0];\r\n        this.toggleButton.classList.remove('toggled');\r\n        this.sidebarVisible = false;\r\n        body.classList.remove('nav-open');\r\n    };\r\n    sidebarToggle() {\r\n        // const toggleButton = this.toggleButton;\r\n        // const body = document.getElementsByTagName('body')[0];\r\n        var $toggle = document.getElementsByClassName('navbar-toggler')[0];\r\n\r\n        if (this.sidebarVisible === false) {\r\n            this.sidebarOpen();\r\n        } else {\r\n            this.sidebarClose();\r\n        }\r\n        const body = document.getElementsByTagName('body')[0];\r\n\r\n        if (this.mobile_menu_visible == 1) {\r\n            // $('html').removeClass('nav-open');\r\n            body.classList.remove('nav-open');\r\n            if ($layer) {\r\n                $layer.remove();\r\n            }\r\n            setTimeout(function() {\r\n                $toggle.classList.remove('toggled');\r\n            }, 400);\r\n\r\n            this.mobile_menu_visible = 0;\r\n        } else {\r\n            setTimeout(function() {\r\n                $toggle.classList.add('toggled');\r\n            }, 430);\r\n\r\n            var $layer = document.createElement('div');\r\n            $layer.setAttribute('class', 'close-layer');\r\n\r\n\r\n            if (body.querySelectorAll('.main-panel')) {\r\n                document.getElementsByClassName('main-panel')[0].appendChild($layer);\r\n            }else if (body.classList.contains('off-canvas-sidebar')) {\r\n                document.getElementsByClassName('wrapper-full-page')[0].appendChild($layer);\r\n            }\r\n\r\n            setTimeout(function() {\r\n                $layer.classList.add('visible');\r\n            }, 100);\r\n\r\n            $layer.onclick = function() { //asign a function\r\n              body.classList.remove('nav-open');\r\n              this.mobile_menu_visible = 0;\r\n              $layer.classList.remove('visible');\r\n              setTimeout(function() {\r\n                  $layer.remove();\r\n                  $toggle.classList.remove('toggled');\r\n              }, 400);\r\n            }.bind(this);\r\n\r\n            body.classList.add('nav-open');\r\n            this.mobile_menu_visible = 1;\r\n\r\n        }\r\n    };\r\n\r\n    getTitle(){\r\n        this.listTitles = ROUTES.filter(listTitle => listTitle);\r\n      var titlee = this.location.prepareExternalUrl(this.location.path());\r\n      if(titlee.charAt(0) === '#'){\r\n          titlee = titlee.slice( 1 );\r\n      }\r\n        //console.log(titlee);\r\n      for(var item = 0; item < this.listTitles.length; item++){\r\n          if(this.listTitles[item].path === titlee){\r\n              return this.listTitles[item].title;\r\n          }\r\n      }\r\n      if(titlee=='/changepassword'){\r\n          return 'Change Password';\r\n      }\r\n      return 'Dashboard';\r\n    }\r\n    logout(){\r\n        this.auth.signout();\r\n    }\r\n    isAuth():boolean{\r\n        if(this.auth.isAuthenticated){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //#region Notification\r\n  loadNotifications()\r\n  {\r\n    //debugger;\r\n    this.ob = this.notificationsvc.GetNotificationsByID(this.auth.email);\r\n    this.ob.subscribe(\r\n      data => {         \r\n        console.log(data);\r\n        this.notificationData = data.slice(0,2);\r\n        this.badgeValue=this.notificationData.length.toString();\r\n      },\r\n      (error: any) => console.log(\"Error in fetching notification data\")\r\n      );\r\n  }\r\n\r\n  setIsSeenNotification(notificationId:number)\r\n  {\r\n    \r\n   console.log(\"ts.setIsSeenNotification() hits\"); \r\n  // let obj:any={};\r\n  // obj.id=notificationId,\r\n  // obj.isSeen=true;\r\n  \r\n   this.ob =this.notificationsvc.SetIsSeenNotification(notificationId);\r\n \r\n   this.ob.subscribe(\r\n     dataa => { \r\n       console.log(dataa); \r\n       this.loadNotifications();\r\n      },\r\n     (error: any) => console.log(\"Error Occured\")\r\n   );\r\n  }\r\n\r\n  getNotificationTimeDiff(createdTime:string):string\r\n  {\r\n    \r\n    var dateOneObj = new Date(createdTime).getTime();\r\n    var dateTwoObj = new Date().getTime();\r\n    // var milliseconds = Math.abs(dateOneObj-dateTwoObj)\r\n    // var hours = milliseconds / 36e5;\r\n    // return hours.toString()+\" Hours ago\";\r\n\r\n    var diff =(dateOneObj-dateTwoObj) / 1000;\r\n    var minutes=Math. abs(Math. round(diff/60)).toString();\r\n    \r\n    var hours=Math. abs(Math. round(diff/3600)).toString();\r\n    \r\n    if(parseInt(minutes) < 60)\r\n    {\r\n      return minutes.toString()+\" Minutes ago\"\r\n    }\r\n    else if(parseInt(hours)<24)\r\n    {\r\n      return hours.toString()+\" Hours ago\"\r\n    }\r\n    else\r\n    {\r\n    return this.datepipe.transform(createdTime,\"MMMM d, y\");\r\n    }\r\n  }\r\n  //#endregion\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-danger\\\">\\r\\n                <h4 class=\\\"card-title\\\">Change Password</h4>\\r\\n                <p class=\\\"card-category\\\">Fill in the details</p>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n\\r\\n                <div class=\\\"row justify-content-center\\\"> \\r\\n                    <div class=\\\"col-md-4 text-center\\\">\\r\\n                        <form *ngIf=\\\"!success\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                            <!-- <br></br> -->\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <mat-form-field class=\\\"example-full-width form-group\\\">\\r\\n                                <input matInput placeholder=\\\"Old Password\\\" required type=\\\"password\\\" id=\\\"oldPassword\\\" name=\\\"oldPassword\\\" [(ngModel)]=\\\"usermodel.oldPassword\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        \\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <!-- <label for=\\\"newPassword\\\" class=\\\"sr-only\\\">New Password</label>\\r\\n                                <input type=\\\"password\\\" id=\\\"newPassword\\\" name=\\\"newPassword\\\" [(ngModel)]=\\\"usermodel.newPassword\\\" class=\\\"form-control\\\" placeholder=\\\"New Password\\\" required aria-describedby=\\\"passwordHelp\\\"> -->\\r\\n                                <mat-form-field class=\\\"example-full-width form-group\\\">\\r\\n                                    <input matInput placeholder=\\\"New Password\\\" required  type=\\\"password\\\" id=\\\"newPassword\\\" name=\\\"newPassword\\\" [(ngModel)]=\\\"usermodel.newPassword\\\">\\r\\n                                </mat-form-field>\\r\\n                                <!-- <small id=\\\"passwordHelp\\\" class=\\\"form-text text-muted\\\">Min. 6 characters with at least one non alphanumeric character</small> -->\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                            <!-- <label for=\\\"newPassword\\\" class=\\\"sr-only\\\">Confirm Password</label>\\r\\n                            <input type=\\\"password\\\" id=\\\"confirmPassword\\\" name=\\\"confirmPassword\\\" [(ngModel)]=\\\"usermodel.confirmPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\" aria-describedby=\\\"passwordHelp\\\" required>      -->\\r\\n                            <mat-form-field class=\\\"example-full-width form-group\\\">\\r\\n                                <input matInput placeholder=\\\"Confirm Password\\\" required  type=\\\"password\\\" id=\\\"confirmpassword\\\" name=\\\"confirmpassword\\\" [(ngModel)]=\\\"usermodel.confirmpassword\\\">\\r\\n                            </mat-form-field>\\r\\n                            <small id=\\\"passwordHelp\\\" class=\\\"form-text text-muted\\\">Min. 6 characters with at least one non alphanumeric character</small>\\r\\n                            </div> \\r\\n                        <input type=\\\"text\\\" hidden id=\\\"email\\\" name=\\\"email\\\" [(ngmodel)] = \\\"usermodel.email\\\" value='{{userId}}' class=\\\"form-control\\\" placeholder=\\\"email\\\" [(ngModel)]=\\\"usermodel.email\\\">  \\r\\n                        <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!f.form.valid\\\">Go</button> \\r\\n\\r\\n                        <ngx-spinner></ngx-spinner>   \\r\\n        <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3\\\" role=\\\"alert\\\">\\r\\n            <strong>Oops!</strong> {{error}}\\r\\n        </div>     \\r\\n      </form>     \\r\\n      <!-- <form class=\\\"form-group\\\" [formGroup]=\\\"fg\\\" (ngSubmit)=\\\"SavePractitionerData()\\\">\\r\\n\\r\\n      </form> -->\\r\\n      <div *ngIf=\\\"success\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\r\\n          <h4 class=\\\"alert-heading\\\">Success!</h4>\\r\\n          <p id='relogin' (click)=\\\"relogin\\\" >Your passsword reset successfully, <a routerLink=\\\"/login\\\" href=\\\"/login\\\"><b>Please login</b></a> to continue.</p>        \\r\\n      </div>  \\r\\n                    </div> \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n  <!-- <ngx-spinner></ngx-spinner>   -->\\r\\n  \\r\\n  \";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-danger\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Patient Visit Data</h4>\\r\\n                        <p class=\\\"card-category\\\"></p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <form class=\\\"form-group\\\" [formGroup]=\\\"fg\\\">\\r\\n                            <mat-tab-group dynamicHeight>\\r\\n                                <mat-tab label=\\\"Appointment Details\\\">\\r\\n                                    <br>                                \\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"ApptID\\\">AppointmentID: </label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ApptID\\\" formControlName=\\\"ApptID\\\" disabled>                        \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"DrName\\\">Doctor Name: </label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"DrName\\\" formControlName=\\\"DrName\\\" disabled>                        \\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                    </fieldset>\\r\\n                                </mat-tab>\\r\\n                                <mat-tab label=\\\"Vital Signs\\\">\\r\\n                                    <br>                                \\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"height\\\">Height (in cms): </label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"height\\\" formControlName=\\\"height\\\" disabled>                        \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"weight\\\">Weight (in kgs): </label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"weight\\\" formControlName=\\\"weight\\\" disabled>                        \\r\\n                                                </div>\\r\\n                                            </div>            \\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"bloodpressuresystolic\\\">Blood Pressure Systolic (in mmHg): </label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bloodpressuresystolic\\\" formControlName=\\\"bloodpressuresystolic\\\" disabled>                        \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"bloodpressurediastolic\\\">Blood Pressure Diastolic (in mmHg): </label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bloodpressurediastolic\\\" formControlName=\\\"bloodpressurediastolic\\\" disabled>                        \\r\\n                                                </div>\\r\\n                                            </div>            \\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"temperature\\\">Body Temperature (in celsius): </label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bodytemperature\\\" formControlName=\\\"bodytemperature\\\" disabled>                        \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"respirationrate\\\">Respiration Rate (in BPM): </label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"respirationrate\\\" formControlName=\\\"respirationrate\\\" disabled>                        \\r\\n                                                </div>\\r\\n                                            </div>                        \\r\\n                                        </div>\\r\\n\\r\\n                                    </fieldset>\\r\\n                                </mat-tab>\\r\\n                                <mat-tab label=\\\"Allergies\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <table class=\\\"table table-hover table-striped table-bordered\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th class=\\\"th-font\\\">Allergy</th><th class=\\\"th-font\\\">Fatal Allergy?</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let row of AllergyRows\\\">                  \\r\\n                                                        <td>{{row.allergytype}}</td>\\r\\n                                                        <td>{{row.chkFatal}}</td>\\r\\n                                                      </tr>\\r\\n                                                </tbody>                                \\t\\t\\t\\t\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </fieldset>\\r\\n                                </mat-tab>\\r\\n                                <mat-tab label=\\\"Diagnosis\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <table class=\\\"table table-hover table-striped table-bordered\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th class=\\\"th-font\\\">Diagnosis</th><th class=\\\"th-font\\\">Diagnosis Description</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let row of DiagnosisRows\\\">                  \\r\\n                                                        <td>{{row.diagnosiscode}}</td>\\r\\n                                                        <td>{{row.diagnosisdescription}}</td>\\r\\n                                                      </tr>                    \\r\\n                                                </tbody>                                \\t\\t\\t\\t\\r\\n                                            </table>          \\r\\n                                        </div>\\r\\n                                    </fieldset>\\r\\n                                </mat-tab>\\r\\n                                <mat-tab label=\\\"Procedure\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <table class=\\\"table table-hover table-striped table-bordered\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th class=\\\"th-font\\\">Procedure</th><th class=\\\"th-font\\\">Procedure Description</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let row of ProcedureRows\\\">                  \\r\\n                                                        <td>{{row.proceduretype}}</td>\\r\\n                                                        <td>{{row.proceduredescription}}</td>\\r\\n                                                      </tr>                    \\r\\n                                                </tbody>                                \\t\\t\\t\\t\\r\\n                                            </table>               \\r\\n                                        </div>\\r\\n                                    </fieldset>\\r\\n                                </mat-tab>\\r\\n                                <mat-tab label=\\\"Medication\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <table class=\\\"table table-hover table-striped table-bordered\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th class=\\\"th-font\\\">Medication</th><th class=\\\"th-font\\\">Medication Description</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let row of MedicationRows\\\">                  \\r\\n                                                        <td>{{row.medicationtype}}</td>                        \\r\\n                                                        <td>{{row.medicationdescription}}</td>\\r\\n                                                      </tr>                    \\r\\n                                                </tbody>                                \\t\\t\\t\\t\\r\\n                                            </table>        \\r\\n                                        </div>\\r\\n                                    </fieldset>\\r\\n\\r\\n                                </mat-tab>\\r\\n                                \\r\\n                            </mat-tab-group>\\r\\n                            <div class=\\\"form-group\\\">            \\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"DownloadPatientData()\\\">Export</button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n    FooterComponent,\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ],\r\n  exports: [\r\n    FooterComponent,\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ]\r\n})\r\nexport class ComponentsModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { PatientRegisterComponent } from './patient-register/patient-register.component';\r\nimport { AccountRoutingModule } from './account-routes.module';\r\nimport { ToasterService } from '../core/ToasterService';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { FormsModule } from '@angular/forms';\r\n//import { HomeModule } from '../home/home.module';\r\n//import { HeaderComponent } from '../home/header/header.component'; \r\nimport { SharedMaterialModule } from '../shared-modules/shared-material.module';\r\n//import { SharedWrapperModule } from '../shared-wrapper/shared-wrapper.module';\r\nimport { ToasterPosition } from '../core/ToasterPosition';\r\nimport { FormGroup,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n@NgModule({\r\n  declarations: [RegisterComponent, PatientRegisterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AccountRoutingModule,\r\n    BrowserAnimationsModule, // required animations module\r\n    ToastrModule.forRoot(), // ToastrModule added  \r\n    SharedMaterialModule,\r\n    ReactiveFormsModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  providers:[ ToasterService ]\r\n})\r\nexport class AccountModule { }\r\n","import { Component, OnInit,Output } from '@angular/core';\r\nimport { PatientService } from '../../services/patient.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n//import { Patients } from '../../models/patient';\r\nimport { Observable } from 'rxjs';\r\nimport { FormGroup, FormControl, Validators, RequiredValidator} from '@angular/forms';\r\nimport { MatchPasswd } from '../../CustomValidator/PasswdMatch.validator';\r\nimport { Router } from \"@angular/router\";\r\nimport { ToasterService } from '../../core/ToasterService';\r\nimport { ToasterPosition } from '../../core/ToasterPosition';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Title } from '../../core/dropdownmaster.service';\r\nimport { Genders } from '../../core/dropdownmaster.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Positioning } from '@ng-bootstrap/ng-bootstrap/util/positioning';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { Patients } from 'app/models/Patient';\r\n@Component({\r\n  selector: 'app-patient-register',\r\n  templateUrl: './patient-register.component.html',\r\n  styleUrls: ['./patient-register.component.css'],\r\n  providers: [ToasterService]\r\n})\r\nexport class PatientRegisterComponent implements OnInit {\r\n\r\n  public ob: Observable<string>;\r\n  \r\n  public patient;\r\n  msg:string=\"\";\r\n  success: boolean;\r\n  genders:any;\r\n  titles:any;\r\n  res: any;\r\n  \r\n\r\n  fg: FormGroup = new FormGroup({\r\n    firstname: new FormControl('',Validators.required),\r\n    lastname: new FormControl('',Validators.required),\r\n    dob: new FormControl('',Validators.required),\r\n    contact: new FormControl('',[Validators.required,Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]),\r\n    email: new FormControl(null,[Validators.required,Validators.email]),\r\n    password: new FormControl('',Validators.required),\r\n    confirmpassword: new FormControl('',[Validators.required, MatchPasswd('password')]),\r\n    title: new FormControl('',[Validators.required]),\r\n    gender: new FormControl('',[Validators.required])\r\n  });\r\n  constructor(private patientsvc: PatientService,private router: Router,private toast:ToasterService,private spinner:NgxSpinnerService) { }\r\n\r\n// SavePatientData(eventsource: any): void\r\nSavePatientData1():void{\r\n  this.fg.reset();\r\n}\r\nSavePatientData(): void\r\n{\r\n  this.spinner.show();\r\n  console.log(\"ts.SavePatientData() hits\");\r\n  console.log(this.fg.value);\r\n\r\nthis.patient=new Patients(this.fg.value.firstname,this.fg.value.lastname,this.fg.value.dob,this.fg.value.contact\r\n                    ,this.fg.value.email,this.fg.value.password,(this.fg.value.firstname+\" \"+this.fg.value.lastname),\"Active\",\"No\",this.fg.value.title,this.fg.value.gender);\r\n\r\nconsole.log(this.patient);\r\n\r\nif(this.fg.invalid==false)\r\n{ \r\n  this.ob = this.patientsvc.SavePatientData(this.patient);\r\n  this.ob.pipe(finalize(() => {\r\n    this.spinner.hide();\r\n  })).subscribe(\r\n    dataa => { \r\n      this.res = dataa;\r\n      console.log(this.res);\r\n      if(this.res.code==\"1\"){ \r\n        this.success=true;\r\n        this.showMessage();\r\n        this.toast.success(\"Success\",\"User registered successfully\",ToasterPosition.topFull);\r\n      }else{\r\n        this.toast.error(\"Error\",this.res.response,ToasterPosition.topFull);\r\n      }\r\n    },\r\n    (error: any) => this.toast.error(\"Error\",error,ToasterPosition.topFull)\r\n  );\r\n  }\r\n }\r\n  getToday(): string {\r\n    return new Date().toISOString().split('T')[0];\r\n  }\r\n  navigatePage():void{\r\n    this.router.navigate([\"/userlogin\"]);\r\n  }\r\n  showMessage():void{\r\n    this.spinner.hide();\r\n    this.toast.success(\"Success\",\"Patient registered successfully\",ToasterPosition.topFull,5000);\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    this.titles= Object.entries(Title) ;\r\n    this.genders = Object.entries(Genders);\r\n  }\r\n  \r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FormGroup,FormControl,Validators} from '@angular/forms';\r\nimport {PatientService } from '../../services/patient.service';\r\nimport { Patients } from '../../models/patient';\r\nimport {ToasterService} from '../../core/ToasterService';\r\nimport { ToasterPosition } from '../../core/ToasterPosition';\r\nimport { SelectAutocompleteComponent } from 'mat-select-autocomplete';\r\nimport { AuthService } from '../../core/auth.service';\r\nimport { PatientAllergy } from 'app/Models/PatientAllergy';\r\nimport { PatientDemographicData } from 'app/Models/PatientDemographicData';\r\nimport { DatePipe } from '@angular/common'\r\n\r\n@Component({\r\n  selector: 'app-view-data',\r\n  templateUrl: './view-data.component.html',\r\n  styleUrls: ['./view-data.component.css'],\r\n  providers:[DatePipe]\r\n})\r\nexport class ViewDataComponent implements OnInit {\r\n\r\n  public ob :Observable<PatientAllergy[]>;\r\n  public patientAllergyData;\r\n  public ob1 :Observable<PatientDemographicData[]>;\r\n  public patientDemographicData;\r\n  public ob2 :Observable<Patients[]>;\r\n  public dataSourceAllergyData: PatientAllergy[]= [];\r\n  public demographicData: PatientDemographicData[]= [];\r\n\r\n  public isFatal:boolean=false;\r\n  public isUseSameAddress:boolean=false;\r\n  public isPortalAccess:boolean=false;\r\n  public allergyMaster:any;\r\n  public res: any;\r\n  // public rbNomineePortalAccess:string=\"false\"; \r\n  success: boolean;\r\n\r\n  userForm: FormGroup = new FormGroup({\r\n    patientfirstname: new FormControl(''),\r\n    patientlastname: new FormControl(''),\r\n    patientdob: new FormControl(''),\r\n    patientcontact: new FormControl(''),\r\n    patientemail: new FormControl(null),\r\n    // race: new FormControl('',Validators.required),\r\n    // ethnicity: new FormControl('',Validators.required),\r\n    // languagesKnown: new FormControl('',Validators.required),\r\n    address: new FormControl(null),\r\n    nomineeFirstName: new FormControl(''),\r\n    nomineeLastName : new FormControl(''),   \r\n    nomineeEmail : new FormControl('',Validators.email),   \r\n    nomineeRelationship : new FormControl(''),   \r\n    nomineeContact : new FormControl('',Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")),   \r\n    nomineeAddress : new FormControl(''),\r\n    portalaccess : new FormControl(false),\r\n    sameasabove:new FormControl(false)\r\n  });\r\n\r\n  Race: string[] = [\r\n    'White', 'Black', 'American Indian', 'Asian', 'Native Hawaiian'];\r\n\r\n    Ethnicity: string[] = [\r\n      \"German\", \"Italian\",\"French\", \"Irish\", \"English\", \"African\", \"Jamaican\",\"Nigerian\",\"Chinese\",\"Korean\",\"Japanese\",\"Indian\",\"Samoan\",\"Chamorro\" ];  \r\n\r\n      @ViewChild('cmbrace')\r\n      public cmbrace: any;\r\n      public selectedRace:any;\r\n\r\n      @ViewChild('cmbethnicity')\r\n      public cmbethnicity: any;\r\n      public selectedEthnicity:any;\r\n\r\n  displayedColumns = [\r\n    'id',\r\n    'allergy',\r\n    'isfatal'\r\n   ];\r\n \r\n    //#region Language Known Input\r\n@ViewChild(SelectAutocompleteComponent) multiSelect: SelectAutocompleteComponent;\r\n@ViewChild('autoComplete')  public langSelect:any;\r\n  options = [\r\n    {\r\n      display: 'English',\r\n      value: 'English'\r\n    }, {\r\n      display: 'French',\r\n      value: 'French'\r\n    }, {\r\n      display: 'Hindi',\r\n      value: 'Hindi'\r\n    }, {\r\n      display: 'German',\r\n      value: 'German'\r\n    }, {\r\n      display: 'Spanish',\r\n      value: 'Spanish'\r\n    }, {\r\n      display: 'Marathi',\r\n      value: 'Marathi'\r\n    }\r\n  ];\r\n  selectedOptions = [];\r\n\r\n  selected = this.selectedOptions;\r\n  showError = false;\r\n  errorMessage = '';\r\n  //#endregion\r\n\r\n  constructor(private patientsvc:PatientService,private toaster:ToasterService,private authService: AuthService\r\n    ,private datePipe:DatePipe) { }\r\n\r\n  public SavePatientAllergy(allergy:string):void{\r\n    debugger;\r\n    console.log('Add allergy done');\r\n    if(typeof allergy!='undefined')\r\n    {\r\n      this.patientAllergyData=new PatientAllergy(0,allergy,this.isFatal,1);     \r\n      this.ob=this.patientsvc.SaveAllergyData(this.authService.email,this.patientAllergyData);\r\n      this.ob.subscribe(\r\n        dataa => { \r\n          console.log(dataa);   \r\n        this.GetPatientAllergyData();    \r\n      },\r\n        (error: any) => console.log(\"Error in saving patient Allergy data\")\r\n      )\r\n        }\r\n        else{\r\n          alert('Allergy type cannot be empty');\r\n        }        \r\n  }\r\n\r\n  public GetPatientAllergyData():void\r\n  {\r\n    this.ob = this.patientsvc.GetPatientAllergyDataByID(this.authService.email);\r\n    this.ob.subscribe(\r\n      data => { \r\n        console.log(\"Output\");\r\n        console.log(data);\r\n        this.dataSourceAllergyData = data;\r\n      },\r\n      (error: any) => console.log(\"Error in saving regiter data\")\r\n      );\r\n  }\r\n\r\n  \r\n  public SavePatientDemographicData():void{\r\n    debugger;\r\n    let operation:string=\"\";\r\n    console.log('save demographic done');\r\n     this.patientDemographicData=new PatientDemographicData((this.demographicData[\"id\"] > 0) ? this.demographicData[\"id\"] : 0,this.cmbrace.value,this.cmbethnicity.value,\r\n     this.langSelect.displayString,this.userForm.value.address,this.userForm.value.nomineeFirstName\r\n      ,this.userForm.value.nomineeLastName,this.userForm.value.nomineeEmail,this.userForm.value.nomineeRelationship,\r\n      this.userForm.value.nomineeContact,(this.userForm.value.sameasabove == true)? this.userForm.value.address : this.userForm.value.nomineeAddress,this.userForm.value.portalaccess,1)\r\n     \r\n      if(this.demographicData[\"id\"] > 0)\r\n      {\r\n          operation=\"PATCH\";\r\n      }\r\n      else\r\n      {\r\n        operation=\"POST\";\r\n      }\r\n      this.ob=this.patientsvc.SaveDemographicData(this.authService.email,this.patientDemographicData,operation)\r\n      this.ob.subscribe(\r\n        dataa => { \r\n          this.res = dataa;\r\n          console.log(this.res);\r\n          if(this.res.code==\"1\"){ \r\n            this.success=true;\r\n            this.toaster.success(\"Success\",this.res.response,ToasterPosition.topFull);\r\n          }else{\r\n            this.toaster.error(\"Error\",this.res.response,ToasterPosition.topFull);\r\n          }\r\n          this.ngOnInit();\r\n           },\r\n        (error: any) => {\r\n          this.toaster.error('Error',error,ToasterPosition.topFull);\r\n        console.log(\"Error in saving patient Allergy data\")}\r\n      )\r\n  }\r\n\r\n  loadPatientData()\r\n  {\r\n    this.ob2=this.patientsvc.GetPatientDataByID(this.authService.email);\r\n    this.ob2.subscribe(\r\n      (data:any)=>{\r\n        debugger;\r\n        if(data[\"firstname\"] != \"\")\r\n        {\r\n          this.userForm.patchValue({\r\n            \"patientfirstname\": data[\"firstname\"],\r\n            \"patientlastname\": data[\"lastname\"],\r\n            \"patientdob\": this.datePipe.transform(data[\"dob\"],\"MMMM d, y\"),\r\n            \"patientcontact\": data[\"contact\"],\r\n            \"patientemail\": data[\"email\"]\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  loadDemographicData()\r\n  {\r\n   this.ob1=this.patientsvc.GetPatientDemographicDataByID(this.authService.email);\r\n   this.ob1.subscribe(\r\n   (dr:PatientDemographicData[])=>{this.demographicData=dr;console.log(this.demographicData);\r\n    debugger;\r\n    if(this.demographicData[\"id\"] > 0)\r\n    {\r\n      //Convert Language string into array\r\n      this.selectedOptions=this.demographicData[\"languagesKnown\"].split(',');\r\n      this.selectedRace=this.demographicData[\"race\"];\r\n      this.selectedEthnicity=this.demographicData[\"ethnicity\"];\r\n      \r\n   this.userForm.patchValue({\r\n    // \"race\": this.demographicData[\"race\"],\r\n    // \"ethnicity\": this.demographicData[\"ethnicity\"],\r\n    // \"languagesKnown\": this.demographicData[0].languagesKnown,\r\n    \"address\": this.demographicData[\"address\"],\r\n    \"nomineeFirstName\": this.demographicData[\"nomineeFirstName\"],\r\n    \"nomineeLastName\" : this.demographicData[\"nomineeLastName\"],   \r\n    \"nomineeEmail\" : this.demographicData[\"nomineeEmail\"],   \r\n    \"nomineeRelationship\" : this.demographicData[\"nomineeRelationship\"],   \r\n    \"nomineeContact\" : this.demographicData[\"nomineeContact\"],   \r\n    \"nomineeAddress\" : this.demographicData[\"nomineeAddress\"],\r\n    \"portalaccess\" : this.demographicData[\"isNeedportalAccess\"]\r\n   })\r\n  }\r\n },\r\n (error:any)=>console.log('fails to load doctors data')\r\n );\r\n  }\r\n\r\n  loadAllergyMaster()\r\n  {\r\n    this.ob2=this.patientsvc.GetAllergyMaster();\r\n    this.ob2.subscribe(\r\n      (data:any)=>{\r\n        debugger;\r\n      this.allergyMaster=data;\r\n      }\r\n    )\r\n  }\r\n\r\n  IsFatalCheckEvent(event){\r\n    debugger;    \r\n    this.isFatal=event.target.checked;\r\n    console.log(this.isFatal);\r\n    }\r\n    \r\n    // IsUseSameAddressEvent(event){\r\n    //   debugger;    \r\n    //   this.isUseSameAddress=event.target.checked;\r\n    //   console.log(this.isUseSameAddress);\r\n    //   }\r\n\r\n      // IsPortalAccessEvent(event){\r\n      //   debugger;    \r\n      //   this.isPortalAccess=event.target.checked;\r\n      //   console.log(this.isPortalAccess);\r\n      //   }\r\n\r\n      functioncallbackFunction(){\r\n        this.success=true;\r\n      }\r\n\r\n      //#region Language Known Input\r\n      onToggleDropdown() {\r\n        this.multiSelect.toggleDropdown();\r\n      }\r\n    \r\n      getSelectedOptions(selected) {\r\n        this.selected = selected;\r\n      }\r\n    \r\n      onResetSelection() {\r\n        this.selectedOptions = [];\r\n      }\r\n      //#endregion\r\n\r\n      // DownloadPatientData()\r\n      // {\r\n      //   debugger;\r\n      //   // this.ob = this.patientsvc.GetPatientAllergyDataByID(this.authService.email);\r\n      //   // this.ob.subscribe(\r\n      //   //   data => { \r\n      //   //     let fileName=\"Report_\"+new Date().toLocaleString();\r\n      //   //     this.downloadFile(data, fileName);\r\n      //   //   },\r\n      //   //   (error: any) => console.log(\"Error in fetching data\")\r\n      //   //   );\r\n\r\n\r\n\r\n      //    this.ob = this.patientsvc.GetCSVFile(this.authService.email);\r\n      //   this.ob.subscribe(\r\n      //     (response: any) =>{\r\n      //       debugger;\r\n      //         let dataType = response.type;\r\n      //         let binaryData = [];\r\n      //         binaryData.push(response);\r\n      //         let downloadLink = document.createElement('a');\r\n      //         downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {type: dataType}));\r\n      //         let fileName=\"Report_\"+new Date().toLocaleString()+\".csv\";\r\n      //             downloadLink.setAttribute('download', fileName);\r\n      //         document.body.appendChild(downloadLink);\r\n      //         downloadLink.click();\r\n      //     }\r\n      // )\r\n      // }\r\n\r\n    //   downLoadFile(data: any, type: string) {\r\n    //     debugger;\r\n    //     let blob = new Blob([data], { type: type});\r\n    //     let url = window.URL.createObjectURL(blob);\r\n    //     let pwa = window.open(url);\r\n    //     if (!pwa || pwa.closed || typeof pwa.closed == 'undefined') {\r\n    //         alert( 'Please disable your Pop-up blocker and try again.');\r\n    //     }\r\n    // }\r\n\r\n  //   downloadFile(data, filename='data') {\r\n  //     debugger;\r\n  //     let csvData = this.ConvertToCSV(data, ['id','allergy', 'isfatal', 'patientid']);\r\n  //     console.log(csvData)\r\n  //     let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\r\n  //     let dwldLink = document.createElement(\"a\");\r\n  //     let url = URL.createObjectURL(blob);\r\n  //     let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\r\n  //     if (isSafariBrowser) {  //if Safari open in new window to save file with random filename.\r\n  //         dwldLink.setAttribute(\"target\", \"_blank\");\r\n  //     }\r\n  //     dwldLink.setAttribute(\"href\", url);\r\n  //     dwldLink.setAttribute(\"download\", filename + \".csv\");\r\n  //     dwldLink.style.visibility = \"hidden\";\r\n  //     document.body.appendChild(dwldLink);\r\n  //     dwldLink.click();\r\n  //     document.body.removeChild(dwldLink);\r\n  // }\r\n\r\n  // ConvertToCSV(objArray, headerList) {\r\n  //      let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n  //      let str = '';\r\n  //      let row = 'S.No,';\r\n\r\n  //      for (let index in headerList) {\r\n  //          row += headerList[index] + ',';\r\n  //      }\r\n  //      row = row.slice(0, -1);\r\n  //      str += row + '\\r\\n';\r\n  //      for (let i = 0; i < array.length; i++) {\r\n  //          let line = (i+1)+'';\r\n  //          for (let index in headerList) {\r\n  //             let head = headerList[index];\r\n\r\n  //              line += ',' + array[i][head];\r\n  //          }\r\n  //          str += line + '\\r\\n';\r\n  //      }\r\n  //      return str;\r\n  //  }\r\n\r\n    ngOnInit(): void {\r\n      this.loadPatientData();\r\n      this.loadDemographicData();\r\n      this.loadAllergyMaster();\r\n      this.GetPatientAllergyData();\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Register } from '../models/registerModel';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { observable, Observable } from 'rxjs';\r\nimport { Nurse } from '../models/nurseModel';\r\nimport { Doctor } from '../models/doctorModel';\r\n//import { Patient } from '../models/patientModel';\r\nimport { Patients} from '../models/Patient';\r\nimport { Url } from 'url';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ConfigService } from '../core/config.service';\r\nimport { Appointment } from '../models/Appointment';\r\nimport { BaseService } from '../core/base.service';\r\nimport { finalize } from 'rxjs/operators'\r\nimport { doctorGrid } from 'app/models/doctorGrid';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService extends BaseService {\r\n  headers: any;\r\n  genders:any;\r\n  titles:any;\r\n  constructor(private httpSVC:HttpClient,private config: ConfigService)  { \r\n    super();\r\n  }\r\n  public SaveUserRegiterDatas(reg:Register,operation:string):Observable<any>\r\n  {\r\n    console.log(\"service.SavePractitionerData() hits\");\r\n      const headers = { 'content-type': 'application/json'}\r\n      if(operation===\"POST\")\r\n      {\r\n        return this.httpSVC.post<Register>( this.config.authApiURI+ \"/doctor\",reg,{headers:headers}).pipe(catchError(this.handleError));\r\n      }\r\n      else\r\n      {\r\n          return this.httpSVC.post<Register>( this.config.authApiURI+ \"/doctorupdate\",reg).pipe(catchError(this.handleError));\r\n      }\r\n  }\r\n  public GetDoctorJsonDatas(token:string):Observable<any>\r\n  {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n    console.log(httpOptions);\r\n    return this.httpSVC.get<doctorGrid>(this.config.adminApiUri + \"/Doctors\",httpOptions).pipe(catchError(this.handleError));\r\n  }\r\n  public GetNurseJsonDatas(token:string):Observable<any>\r\n  {   \r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n      return this.httpSVC.get<Nurse>(this.config.adminApiUri + \"/Nurses\",httpOptions).pipe(catchError(this.handleError));\r\n  }\r\n  public GetPatientJsonDatas(token:string):Observable<any>\r\n  {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n      return this.httpSVC.get<Patients>(this.config.adminApiUri+ \"/Patients\",httpOptions).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  public GetDoctorJsonDatasByID(DrID: number,token:string):Observable<any>\r\n  {   \r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n      return this.httpSVC.get<doctorGrid>(this.config.adminApiUri+ \"/Doctor/\"+DrID,httpOptions).pipe(catchError(this.handleError));\r\n  }\r\n  public GetNurseJsonDatasByID(NurseID: number,token:string):Observable<any>\r\n  {   \r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n      return this.httpSVC.get<Nurse>(this.config.adminApiUri+ \"/Nurse/\"+NurseID,httpOptions).pipe(catchError(this.handleError));\r\n  }\r\n  public GetPatientJsonDatasByID(PatientID: number,token:string):Observable<any>\r\n  {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n    return this.httpSVC.get<Patients>(this.config.adminApiUri+ \"/Patient/\"+PatientID,httpOptions).pipe(catchError(this.handleError));\r\n  }\r\n  public DeleteDoctorJsonDatasByID(DrID: number):Observable<any>\r\n  {\r\n    const headers = new HttpHeaders().set('Content-Type', 'application/json').set('Accept', 'application/json');\r\n    const httpOptions = {\r\n      headers: this.headers\r\n    };\r\n    return this.httpSVC.delete<Doctor>(this.config.tempResourseAPI+ \"/Doctors/\"+DrID, this.headers).pipe(catchError(this.handleError));\r\n  }\r\n  public DeleteNurseJsonDatasByID(NurseID: number):Observable<any>\r\n  {\r\n      return this.httpSVC.delete<Nurse>(this.config.tempResourseAPI+ \"/Nurses/\"+NurseID);\r\n  }\r\n  public DeletePatientJsonDatasByID(PatientID: number):Observable<any>\r\n  {\r\n      return this.httpSVC.delete<Patients>(this.config.tempResourseAPI+ \"/Patient/\"+PatientID);\r\n  }\r\n\r\n  public GetAppointmentJsonData():Observable<any>\r\n  {\r\n      return this.httpSVC.get<Appointment>(this.config.scheduleManagementAPI+ \"/Schedule/getallappointments\");\r\n  }\r\n  public SoftDeleteNurseData(p:any):Observable<any>\r\n  {\r\n    return this.httpSVC.post<any>(this.config.authApiURI + \"/updatenursestatus?Id=\"+p.Id+\"&IsActive=\"+p.IsActive,p ).pipe(catchError(this.handleError));      \r\n  }\r\n  public SoftDeleteDoctorData(p:any):Observable<any>\r\n  {\r\n      return this.httpSVC.post<any>(this.config.authApiURI + \"/updatedocstatus?Id=\"+p.Id+\"&IsActive=\"+p.IsActive,p ).pipe(catchError(this.handleError));      \r\n  }\r\n  public SoftDeletePatienData(p:any):Observable<any>\r\n  {\r\n      return this.httpSVC.post<any>(this.config.authApiURI + \"/updatepatientstatus?Id=\"+p.Id+\"&IsActive=\"+p.IsActive,p ).pipe(catchError(this.handleError));      \r\n  }\r\n  public GetUserProfile(token:string):Observable<any>\r\n  {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n    return this.httpSVC.get<any>(this.config.adminApiUri + \"/userInfo\",httpOptions).pipe(catchError(this.handleError));      \r\n  }\r\n\r\n  public DownloadGridData(entityName:string):Observable<any>\r\n  {\r\n   let header = new HttpHeaders({\r\n     'Content-Type': 'text/csv'\r\n    });\r\n      return this.httpSVC.get(this.config.adminApiUri+\"/getexcelreport?entityName=\"+entityName,{responseType:'blob',headers:header});      \r\n  }\r\n  public UnlockUser(p:any):Observable<any>\r\n  {\r\n      return this.httpSVC.post<any>(this.config.authApiURI + \"/unlockuser?userid=\"+p.Id+\"&IsActive=\"+p.IsActive,p ).pipe(catchError(this.handleError));      \r\n  }\r\n  public GetAdminDashBoardData():Observable<any>\r\n  {\r\n   let header = new HttpHeaders({\r\n     'Content-Type': 'application/json'\r\n    });\r\n      return this.httpSVC.get(this.config.adminApiUri+\"/getadmindashboarddata\",{headers:header});      \r\n  }\r\n}\r\n\r\n\r\n ","export default \".example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n\\r\\n  .tbar {\\r\\n    position: relative;\\r\\n    z-index: 2;\\r\\n}\\r\\n\\r\\n  .mat-toolbar.mat-primary {\\r\\n  background: #202721; \\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n  /*  body {\\r\\n            color: #fff;\\r\\n            background: #63738a;\\r\\n            font-family: 'Roboto', sans-serif;\\r\\n        }\\r\\n\\r\\n        .form-control {\\r\\n            height: 40px;\\r\\n            box-shadow: none;\\r\\n            color: #969fa4;\\r\\n        }*/\\r\\n\\r\\n  /* @import '~bootstrap/dist/css/bootstrap.min.css'; */\\r\\n\\r\\n  /* .form-control:focus {\\r\\n          border-color: #5cb85c;\\r\\n      } */\\r\\n\\r\\n  .form-control, .btn {\\r\\n          border-radius: 3px;\\r\\n      }\\r\\n\\r\\n  .signup-form {\\r\\n          width: 800px;\\r\\n          margin: 0 auto;\\r\\n          padding: 30px 0;\\r\\n      }\\r\\n\\r\\n  .signup-form h2 {\\r\\n              color: #636363;\\r\\n              margin: 0 0 15px;\\r\\n              position: relative;\\r\\n              text-align: center;\\r\\n          }\\r\\n\\r\\n  .signup-form h2:before, .signup-form h2:after {\\r\\n                  content: \\\"\\\";\\r\\n                  height: 2px;\\r\\n                  width: 30%;\\r\\n                  background: #d4d4d4;\\r\\n                  position: absolute;\\r\\n                  top: 50%;\\r\\n                  z-index: 2;\\r\\n              }\\r\\n\\r\\n  .signup-form h2:before {\\r\\n                  left: 0;\\r\\n              }\\r\\n\\r\\n  .signup-form h2:after {\\r\\n                  right: 0;\\r\\n              }\\r\\n\\r\\n  .signup-form .hint-text {\\r\\n              color: #999;\\r\\n              margin-bottom: 30px;\\r\\n              text-align: center;\\r\\n          }\\r\\n\\r\\n  .signup-form form {\\r\\n              color: #999;\\r\\n              border-radius: 3px;\\r\\n              margin-bottom: 15px;\\r\\n              background: #f2f3f7;\\r\\n              box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\r\\n              padding: 30px;\\r\\n          }\\r\\n\\r\\n  .signup-form .form-group {\\r\\n              margin-bottom: 20px;\\r\\n          }\\r\\n\\r\\n  .signup-form input[type=\\\"checkbox\\\"] {\\r\\n              margin-top: 3px;\\r\\n          }\\r\\n\\r\\n  .signup-form .btn {\\r\\n              font-size: 16px;\\r\\n              min-width: 140px;\\r\\n              outline: none !important;\\r\\n          }\\r\\n\\r\\n  .signup-form .row div:first-child {\\r\\n              padding-right: 10px;\\r\\n          }\\r\\n\\r\\n  .signup-form .row div:last-child {\\r\\n              padding-left: 10px;\\r\\n          }\\r\\n\\r\\n  .signup-form a {\\r\\n              color: #fff;\\r\\n              text-decoration: underline;\\r\\n          }\\r\\n\\r\\n  .signup-form a:hover {\\r\\n                  text-decoration: none;\\r\\n              }\\r\\n\\r\\n  .signup-form form a {\\r\\n              color: #0047ab;\\r\\n              /* font-weight: bold; */\\r\\n              text-decoration: none;\\r\\n          }\\r\\n\\r\\n  .signup-form form a:hover {\\r\\n                  text-decoration: underline;\\r\\n              }\\r\\n\\r\\n  #btnSubmit {\\r\\n          background-color: #0047ab;\\r\\n          color: white;\\r\\n      }\\r\\n\\r\\n  .asterisk{\\r\\n          color: red;\\r\\n          font-style: italic;\\r\\n          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\\r\\n      }\\r\\n\\r\\n  html, body { height: 100%; }\\r\\n\\r\\n  body { margin: 0; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\r\\n\\r\\n  main > .container {\\r\\n          padding: 0; \\r\\n          max-width: 100%;\\r\\n          width:100% ;\\r\\n      }\\r\\n\\r\\n  .ng-valid[required], .ng-valid.required  {\\r\\n        border-left: 5px solid #42A948; /* green */\\r\\n      }\\r\\n\\r\\n  .ng-invalid:not(form)  {\\r\\n         border-left: 5px solid #a94442; /* red */\\r\\n      }\\r\\n\\r\\n  html, body { height: 100%; }\\r\\n\\r\\n  body { margin: 0; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWNjb3VudC9wYXRpZW50LXJlZ2lzdGVyL3BhdGllbnQtcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7RUFDaEI7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsVUFBVTtBQUNkOztFQUNBO0VBQ0UsbUJBQW1CO0VBQ25CLFdBQVc7QUFDYjs7RUFFQTs7Ozs7Ozs7OztVQVVVOztFQUVGLHFEQUFxRDs7RUFFckQ7O1NBRUM7O0VBRUg7VUFDSSxrQkFBa0I7TUFDdEI7O0VBRUE7VUFDSSxZQUFZO1VBQ1osY0FBYztVQUNkLGVBQWU7TUFDbkI7O0VBRUk7Y0FDSSxjQUFjO2NBQ2QsZ0JBQWdCO2NBQ2hCLGtCQUFrQjtjQUNsQixrQkFBa0I7VUFDdEI7O0VBRUk7a0JBQ0ksV0FBVztrQkFDWCxXQUFXO2tCQUNYLFVBQVU7a0JBQ1YsbUJBQW1CO2tCQUNuQixrQkFBa0I7a0JBQ2xCLFFBQVE7a0JBQ1IsVUFBVTtjQUNkOztFQUVBO2tCQUNJLE9BQU87Y0FDWDs7RUFFQTtrQkFDSSxRQUFRO2NBQ1o7O0VBRUo7Y0FDSSxXQUFXO2NBQ1gsbUJBQW1CO2NBQ25CLGtCQUFrQjtVQUN0Qjs7RUFFQTtjQUNJLFdBQVc7Y0FDWCxrQkFBa0I7Y0FDbEIsbUJBQW1CO2NBQ25CLG1CQUFtQjtjQUNuQiwwQ0FBMEM7Y0FDMUMsYUFBYTtVQUNqQjs7RUFFQTtjQUNJLG1CQUFtQjtVQUN2Qjs7RUFFQTtjQUNJLGVBQWU7VUFDbkI7O0VBRUE7Y0FDSSxlQUFlO2NBQ2YsZ0JBQWdCO2NBQ2hCLHdCQUF3QjtVQUM1Qjs7RUFFQTtjQUNJLG1CQUFtQjtVQUN2Qjs7RUFFQTtjQUNJLGtCQUFrQjtVQUN0Qjs7RUFFQTtjQUNJLFdBQVc7Y0FDWCwwQkFBMEI7VUFDOUI7O0VBRUk7a0JBQ0kscUJBQXFCO2NBQ3pCOztFQUVKO2NBQ0ksY0FBYztjQUNkLHVCQUF1QjtjQUN2QixxQkFBcUI7VUFDekI7O0VBRUk7a0JBQ0ksMEJBQTBCO2NBQzlCOztFQUVSO1VBQ0kseUJBQXlCO1VBQ3pCLFlBQVk7TUFDaEI7O0VBRUE7VUFDSSxVQUFVO1VBQ1Ysa0JBQWtCO1VBQ2xCO01BQ0o7O0VBRUEsYUFBYSxZQUFZLEVBQUU7O0VBQzNCLE9BQU8sU0FBUyxFQUFFLGlEQUFpRCxFQUFFOztFQUVyRTtVQUNJLFVBQVU7VUFDVixlQUFlO1VBQ2YsV0FBVztNQUNmOztFQUVBO1FBQ0UsOEJBQThCLEVBQUUsVUFBVTtNQUM1Qzs7RUFFQTtTQUNHLDhCQUE4QixFQUFFLFFBQVE7TUFDM0M7O0VBQ0EsYUFBYSxZQUFZLEVBQUU7O0VBQzNCLE9BQU8sU0FBUyxFQUFFLGlEQUFpRCxFQUFFIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudC9wYXRpZW50LXJlZ2lzdGVyL3BhdGllbnQtcmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLXNwYWNlciB7XHJcbiAgICBmbGV4OiAxIDEgYXV0bztcclxuICB9XHJcblxyXG4gIC50YmFyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHotaW5kZXg6IDI7XHJcbn1cclxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcclxuICBiYWNrZ3JvdW5kOiAjMjAyNzIxOyBcclxuICBjb2xvcjogI2ZmZjtcclxufVxyXG5cclxuLyogIGJvZHkge1xyXG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogIzYzNzM4YTtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmZvcm0tY29udHJvbCB7XHJcbiAgICAgICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcclxuICAgICAgICAgICAgY29sb3I6ICM5NjlmYTQ7XHJcbiAgICAgICAgfSovXHJcblxyXG4gICAgICAgIC8qIEBpbXBvcnQgJ35ib290c3RyYXAvZGlzdC9jc3MvYm9vdHN0cmFwLm1pbi5jc3MnOyAqL1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8qIC5mb3JtLWNvbnRyb2w6Zm9jdXMge1xyXG4gICAgICAgICAgYm9yZGVyLWNvbG9yOiAjNWNiODVjO1xyXG4gICAgICB9ICovXHJcbiAgICAgIFxyXG4gICAgICAuZm9ybS1jb250cm9sLCAuYnRuIHtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgLnNpZ251cC1mb3JtIHtcclxuICAgICAgICAgIHdpZHRoOiA4MDBweDtcclxuICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgICAgcGFkZGluZzogMzBweCAwO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAgICAgLnNpZ251cC1mb3JtIGgyIHtcclxuICAgICAgICAgICAgICBjb2xvcjogIzYzNjM2MztcclxuICAgICAgICAgICAgICBtYXJnaW46IDAgMCAxNXB4O1xyXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAgICAgICAgIC5zaWdudXAtZm9ybSBoMjpiZWZvcmUsIC5zaWdudXAtZm9ybSBoMjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgIGhlaWdodDogMnB4O1xyXG4gICAgICAgICAgICAgICAgICB3aWR0aDogMzAlO1xyXG4gICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZDRkNGQ0O1xyXG4gICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgICAgICAgICB6LWluZGV4OiAyO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICAgICAgICAgLnNpZ251cC1mb3JtIGgyOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICBcclxuICAgICAgICAgICAgICAuc2lnbnVwLWZvcm0gaDI6YWZ0ZXIge1xyXG4gICAgICAgICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAgICAgLnNpZ251cC1mb3JtIC5oaW50LXRleHQge1xyXG4gICAgICAgICAgICAgIGNvbG9yOiAjOTk5O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgfVxyXG4gICAgICBcclxuICAgICAgICAgIC5zaWdudXAtZm9ybSBmb3JtIHtcclxuICAgICAgICAgICAgICBjb2xvcjogIzk5OTtcclxuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjJmM2Y3O1xyXG4gICAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICAgICAgICAgICAgICBwYWRkaW5nOiAzMHB4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICBcclxuICAgICAgICAgIC5zaWdudXAtZm9ybSAuZm9ybS1ncm91cCB7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICAgICAuc2lnbnVwLWZvcm0gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIHtcclxuICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAzcHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAgICAgLnNpZ251cC1mb3JtIC5idG4ge1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgICBtaW4td2lkdGg6IDE0MHB4O1xyXG4gICAgICAgICAgICAgIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDtcclxuICAgICAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICAgICAuc2lnbnVwLWZvcm0gLnJvdyBkaXY6Zmlyc3QtY2hpbGQge1xyXG4gICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAgICAgLnNpZ251cC1mb3JtIC5yb3cgZGl2Omxhc3QtY2hpbGQge1xyXG4gICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgICAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICAgICAuc2lnbnVwLWZvcm0gYSB7XHJcbiAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAgICAgICAgIC5zaWdudXAtZm9ybSBhOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICAgICAuc2lnbnVwLWZvcm0gZm9ybSBhIHtcclxuICAgICAgICAgICAgICBjb2xvcjogIzAwNDdhYjtcclxuICAgICAgICAgICAgICAvKiBmb250LXdlaWdodDogYm9sZDsgKi9cclxuICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAgICAgICAgIC5zaWdudXAtZm9ybSBmb3JtIGE6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAjYnRuU3VibWl0IHtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDQ3YWI7XHJcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5hc3Rlcmlza3tcclxuICAgICAgICAgIGNvbG9yOiByZWQ7XHJcbiAgICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICAgICAgICBmb250LWZhbWlseTogJ1NlZ29lIFVJJywgVGFob21hLCBHZW5ldmEsIFZlcmRhbmEsIHNhbnMtc2VyaWZcclxuICAgICAgfVxyXG5cclxuICAgICAgaHRtbCwgYm9keSB7IGhlaWdodDogMTAwJTsgfVxyXG4gICAgICBib2R5IHsgbWFyZ2luOiAwOyBmb250LWZhbWlseTogUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7IH1cclxuICAgICAgXHJcbiAgICAgIG1haW4gPiAuY29udGFpbmVyIHtcclxuICAgICAgICAgIHBhZGRpbmc6IDA7IFxyXG4gICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgd2lkdGg6MTAwJSA7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIC5uZy12YWxpZFtyZXF1aXJlZF0sIC5uZy12YWxpZC5yZXF1aXJlZCAge1xyXG4gICAgICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgIzQyQTk0ODsgLyogZ3JlZW4gKi9cclxuICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAubmctaW52YWxpZDpub3QoZm9ybSkgIHtcclxuICAgICAgICAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjYTk0NDQyOyAvKiByZWQgKi9cclxuICAgICAgfVxyXG4gICAgICBodG1sLCBib2R5IHsgaGVpZ2h0OiAxMDAlOyB9XHJcbiAgICAgIGJvZHkgeyBtYXJnaW46IDA7IGZvbnQtZmFtaWx5OiBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjsgfSJdfQ== */\";","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Doctors} from '../Models/Doctor'\r\nimport { ConfigService } from '../core/config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorServiceService {\r\n\r\n  constructor(private httpsvc:HttpClient,private config:ConfigService) { }\r\n\r\n  public GetAllDoctors():Observable<any>\r\n  {\r\n    console.log('service.GetAllDoctors called');\r\n    return this.httpsvc.get<any>(this.config.scheduleManagementAPI+\"/Schedule/getalldoctors\");\r\n  }\r\n\r\n  public GetFilteredDoctors(filterStr:string):Observable<any>\r\n  {\r\n    console.log('service.GetAllDoctors called');\r\n    return this.httpsvc.get<any>(this.config.scheduleManagementAPI+\"/Schedule/getfiltereddoctors?\"+filterStr);\r\n  }\r\n\r\n  public GetDoctorDataById(id:number,userName:string):Observable<any>\r\n  {\r\n    debugger;\r\n    console.log('service.GetAllDoctors called');\r\n    return this.httpsvc.get<any>(this.config.scheduleManagementAPI+\"/Schedule/getappointment?doctorId=\"+id+\"&patientUserName=\"+userName);    \r\n  }\r\n}\r\n","export default \"<div *ngIf=\\\"error\\\" class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-8 text-center\\\">\\r\\n          <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\r\\n            Oops, there was an error, please try to <a routerLink=\\\"/login\\\">login again</a>.\\r\\n            <br/>\\r\\n            Or <a routerLink=\\\"/patientregister\\\">register</a> to create a new account.  \\r\\n          </div>\\r\\n    </div>\\r\\n</div>\";","import { Component, Input, OnInit,Output,EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, RequiredValidator} from '@angular/forms';\r\nimport { observable, Observable } from 'rxjs';\r\nimport { PatientVisit } from '../../Models/patientvisit';\r\nimport { PatientService} from '../../services/patient.service';\r\nimport { PatientAllergy } from '../../Models/patientallergy1';\r\nimport { PatientDiagnosis } from '../../Models/patientdiagnosis';\r\nimport { PatientProcedure } from '../../Models/patientprocedure';\r\nimport { PatientMedication } from '../../Models/patientmedication';\r\nimport { NgxSpinnerService } from 'ngx-spinner'\r\nimport { ToasterPosition } from '../../../../src/app/core/ToasterPosition';\r\nimport {ToasterService} from '../../core/ToasterService';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-patient-visit-doctor',\r\n  templateUrl: './patient-visit-doctor.component.html',\r\n  styleUrls: ['./patient-visit-doctor.component.css']\r\n})\r\nexport class PatientVisitDoctorComponent implements OnInit {\r\n  public ob :Observable<string>;\r\n  public obpv:Observable<PatientVisit[]>;\r\n  public oballergy:Observable<PatientAllergy[]>;\r\n  public obdiagnosis:Observable<PatientDiagnosis[]>;\r\n  public obdiagnosismaster:Observable<PatientDiagnosis[]>;\r\n  public obprocedure:Observable<PatientProcedure[]>;\r\n  public obmedication:Observable<PatientMedication[]>;\r\n  success: boolean;\r\n  public patientvisitdoctor;  \r\n  msg:string=\"\";\r\n  public patienvisitallergy;\r\n  public patienvisitdiagnosis;\r\n  public patienvisitprocedure;\r\n  public patienvisitmedication;\r\n  public allergytype: string;\r\n  public chkFatal: string;\r\n  public diagnosistype: string;\r\n  public diagnosisdescription: string;\r\n  public proceduretype: string;\r\n  public proceduredescription: string;\r\n  public medicationtype: string;\r\n  public medicationdosage: string;\r\n  public description: string;\r\n  public AllergyRows: Array<{allergytype: string, chkFatal: boolean}> = [];\r\n  public DiagnosisRows: Array<{diagnosiscode: string, diagnosisdescription: string}> = [];\r\n  public ProcedureRows: Array<{proceduretype: string, proceduredescription: string}> = [];\r\n  public MedicationRows: Array<{medicationtype: string, medicationdescription: string}> = [];\r\n  public diagnosisMaster:any;\r\n  public procedureMaster:any;\r\n  public allergyMaster:any;\r\n  public medicineMaster:any;\r\n\r\n  @Input()  pId:number;\r\n  @Input()  aId:number;\r\n  @Output(\"parentFun\") parentFun: EventEmitter<any> = new EventEmitter();\r\n\r\n  public patientvisitdata: PatientVisit[]=[];\r\n  public patientAllergyData: PatientAllergy[]=[];\r\n  public patientDiagnosisData: PatientDiagnosis[]=[];\r\n  public patientProcedureData: PatientProcedure[]=[];\r\n  public patientMedicationData: PatientMedication[]=[];\r\n  \r\n  fg: FormGroup = new FormGroup({\r\n    height: new FormControl('',Validators.required),\r\n    weight: new FormControl('',Validators.required),\r\n    bloodpressuresystolic: new FormControl('',Validators.required),\r\n    bloodpressurediastolic: new FormControl('',Validators.required),\r\n    bodytemperature: new FormControl('',Validators.required),\r\n    respirationrate : new FormControl('',Validators.required)//,\r\n    // ApptID: new FormControl('',Validators.required),\r\n    // PtID: new FormControl('',Validators.required)    \r\n  });\r\n\r\n  constructor(private practitionersvc: PatientService,private toaster: ToasterService) { }\r\n  AddAllergy() \r\n  {      \r\n    //this.AllergyRows.push( {allergytype: this.allergytype, chkFatal: this.chkFatal==null?'false':'true' } );\r\n    this.patienvisitallergy = new PatientAllergy(parseInt(this.allergytype.toString()),\r\n    this.chkFatal==null?false:true,parseInt(this.pId.toString()));\r\n    this.ob = this.practitionersvc.SavePatientVisitAllergyData(this.patienvisitallergy)\r\n    \r\n    this.ob.subscribe(      \r\n      data => { \r\n        console.log(data);      \r\n        console.log(\"Output Is: \"+data[\"allergy\"]); \r\n        this.msg = data[\"firstname\"]+ \", has Registered Successfully\"\r\n        this.loadAllergyData(this.pId); },\r\n      (error: any) => console.log(\"Error in saving patientvisitallergy data\")\r\n      );\r\n    this.allergytype = null;\r\n    this.chkFatal = null;\r\n    \r\n  }\r\n  AddDiagnosis()\r\n  {    \r\n    // this.DiagnosisRows.push( {diagnosistype: this.diagnosistype, diagnosisdescription: this.diagnosisdescription} );    \r\n    this.patienvisitdiagnosis = new PatientDiagnosis(parseInt(this.diagnosistype.toString()),\r\n    this.diagnosisdescription,this.pId.toString(),parseInt(this.aId.toString()));\r\n    this.ob = this.practitionersvc.SavePatientVisitDiagnosisData(this.patienvisitdiagnosis)\r\n    \r\n    this.ob.subscribe(      \r\n      data => {         \r\n        this.msg = data[\"firstname\"]+ \", has Registered Successfully\" \r\n        this.loadDiagnosisData(this.aId);\r\n      },\r\n      (error: any) => console.log(\"Error in saving patientvisitdiagnosis data\")\r\n      );  \r\n            \r\n  }\r\n  AddProcedure()\r\n  {\r\n    //this.ProcedureRows.push( {proceduretype: this.proceduretype, proceduredescription: this.proceduredescription} );\r\n    this.patienvisitprocedure = new PatientProcedure(parseInt(this.proceduretype.toString()),\r\n    this.proceduredescription,this.pId.toString(),parseInt(this.aId.toString()));\r\n    this.ob = this.practitionersvc.SavePatientVisitProcedureData(this.patienvisitprocedure)\r\n    \r\n    this.ob.subscribe(      \r\n      data => { \r\n        console.log(data);      \r\n        console.log(\"Output Is: \"+data[\"procedure\"]); \r\n        this.msg = data[\"firstname\"]+ \", has Registered Successfully\" \r\n        this.loadProcedureData(this.aId);},\r\n      (error: any) => console.log(\"Error in saving patientvisitprocedure data\")\r\n      );    \r\n    \r\n  }\r\n  AddMedication()\r\n  {\r\n    //this.MedicationRows.push( {medicationtype: this.medicationtype, medicationdosage: this.medicationdosage,medicationdescription: this.medicationdescription} );\r\n    this.patienvisitmedication = new PatientMedication(parseInt(this.medicationtype.toString()),\r\n    this.description,parseInt(this.aId.toString()));\r\n    this.ob = this.practitionersvc.SavePatientVisitMedicationData(this.patienvisitmedication)\r\n    \r\n    this.ob.subscribe(      \r\n      data => { \r\n        console.log(data);      \r\n        console.log(\"Output Is: \"+data[\"medication\"]); \r\n        this.msg = data[\"firstname\"]+ \", has Registered Successfully\" \r\n        this.loadMedicationData(this.aId);},\r\n      (error: any) => console.log(\"Error in saving patientvisitmedication data\")\r\n      );    \r\n    \r\n  }\r\n  SavePatientVisitDoctor():void\r\n  {\r\n    let operation:string=\"\";\r\n    console.log(this.fg.value.height);\r\n    this.patientvisitdoctor=new PatientVisit(\r\n      parseInt(this.pId.toString()),parseInt(this.aId.toString()),parseInt(this.fg.value.height),\r\n      parseInt(this.fg.value.weight),parseInt(this.fg.value.bloodpressuresystolic),\r\n      parseInt(this.fg.value.bloodpressurediastolic),parseInt(this.fg.value.bodytemperature)\r\n      ,parseInt(this.fg.value.respirationrate)); \r\n      debugger;     \r\n      if(this.patientvisitdata[\"id\"] > 0)\r\n      {          \r\n          operation=\"PATCH\";  \r\n          this.patientvisitdoctor.appointmentid=this.patientvisitdata[\"appointmentId\"]; \r\n          console.log(this.patientvisitdoctor);       \r\n      }\r\n      else\r\n      {\r\n        operation=\"POST\";\r\n      }\r\n    if(this.fg.invalid==false)\r\n    { \r\n      this.ob = this.practitionersvc.SavePatientVisitData(this.patientvisitdoctor,operation)\r\n\r\n      this.ob.subscribe(      \r\n        data => { \r\n          console.log(data); \r\n          if(data !=null)\r\n          {\r\n          this.success = true;\r\n          this.sendMessage();\r\n          this.toaster.success(\"Success\",data[\"response\"],ToasterPosition.topFull,this.functioncallbackFunction)   \r\n          }     \r\n          console.log(\"Output Is: \"+data[\"height\"]); \r\n          this.msg = data[\"firstname\"]+ \", has Registered Successfully\" },\r\n        (error: any) => console.log(\"Error in saving patientvisitnurse data\")\r\n        );\r\n    }\r\n  }\r\n  loadAppointmentData(aId:number)\r\n  {    \r\n   this.obpv=this.practitionersvc.GetPatientVisitDataByID(this.aId);\r\n   this.obpv.subscribe(\r\n     (pv:PatientVisit[])=>{this.patientvisitdata=pv;\r\n      console.log(this.patientvisitdata)       \r\n       console.log(this.patientvisitdata[\"height\"])\r\n     this.fg.patchValue({\r\n       \"height\": this.patientvisitdata[\"height\"],\r\n       \"weight\": this.patientvisitdata[\"weight\"],\r\n       \"bloodpressuresystolic\": this.patientvisitdata[\"bloodPressureSystolic\"],\r\n       \"bloodpressurediastolic\":this.patientvisitdata[\"bloodPressureDiastolic\"],\r\n       \"bodytemperature\":this.patientvisitdata[\"bodyTemperature\"],\r\n       \"respirationrate\":this.patientvisitdata[\"respirationRate\"]       \r\n     })\r\n   },\r\n   (error:any)=>console.log('fails to load nurse data')\r\n   );\r\n  }\r\n  loadAllergyData(pId:number)\r\n  {    \r\n  this.AllergyRows = [];\r\n   this.oballergy=this.practitionersvc.GetPatientAllergyDataByPatientID(this.pId);\r\n   this.oballergy.subscribe(\r\n     (pv:PatientAllergy[])=>{this.patientAllergyData=pv;      \r\n       console.log(this.patientAllergyData)\r\n       for (let i = 0; i < this.patientAllergyData.length; i++) {\r\n        this.AllergyRows.push( {allergytype: this.patientAllergyData[i].allergyName, \r\n          chkFatal: this.patientAllergyData[i].fatalAllergy } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadDiagnosisData(aId:number)\r\n  {      \r\n   this.DiagnosisRows=[];\r\n   this.obdiagnosis=this.practitionersvc.GetPatientDiagnosisDataByAppointmentID(this.aId);\r\n   this.obdiagnosis.subscribe(\r\n     (pv:PatientDiagnosis[])=>{this.patientDiagnosisData=pv;      \r\n       console.log(this.patientDiagnosisData)\r\n       for (let i = 0; i < this.patientDiagnosisData.length; i++) {\r\n        this.DiagnosisRows.push( {diagnosiscode: this.patientDiagnosisData[i].diagnosisCode, \r\n          diagnosisdescription: this.patientDiagnosisData[i].diagnosisDescription } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadProcedureData(aId:number)\r\n  {   \r\n    this.ProcedureRows=[];\r\n   this.obprocedure=this.practitionersvc.GetPatientProcedureDataByAppointmentID(this.aId);\r\n   this.obprocedure.subscribe(\r\n     (pv:PatientProcedure[])=>{this.patientProcedureData=pv;      \r\n       console.log(this.patientProcedureData[0])\r\n       for (let i = 0; i < this.patientProcedureData.length; i++) {\r\n        this.ProcedureRows.push( {proceduretype: this.patientProcedureData[i].procedureCode, \r\n          proceduredescription: this.patientProcedureData[i].procedureDescription } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadMedicationData(aId:number)\r\n  {   \r\n    this.MedicationRows=[];\r\n   this.obmedication=this.practitionersvc.GetPatientMedicationDataByAppointmentID(this.aId);\r\n   this.obmedication.subscribe(\r\n     (pv:PatientMedication[])=>{this.patientMedicationData=pv;      \r\n       console.log(this.patientMedicationData[0])\r\n       for (let i = 0; i < this.patientMedicationData.length; i++) {\r\n        this.MedicationRows.push( {medicationtype: this.patientMedicationData[i].medicineStrength,          \r\n        medicationdescription: this.patientMedicationData[i].description} );\r\n      }       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n\r\n  ngOnInit(): void {    \r\n    this.loadAppointmentData(this.aId);\r\n    this.loadAllergyData(this.pId);\r\n    this.loadDiagnosisData(this.aId);\r\n    this.loadProcedureData(this.aId);\r\n    this.loadMedicationData(this.aId);\r\n    // this.fg.patchValue({      \r\n    //   \"ApptID\":\"A0\"+this.aId,\r\n    //   \"PtID\":\"P0\"+this.pId\r\n    // })\r\n    this.loadDiagnosisMaster();\r\n    this.loadProcedureMaster();\r\n    this.loadAllergyMaster();\r\n    this.loadMedicineMaster();\r\n  }\r\n  functioncallbackFunction(){\r\n    this.success=true;\r\n  }\r\n  loadDiagnosisMaster()\r\n  {\r\n    this.obdiagnosismaster=this.practitionersvc.GetDiagnosisMaster();\r\n    this.obdiagnosismaster.subscribe(\r\n      (data:any)=>{        \r\n      this.diagnosisMaster=data;      \r\n      }\r\n    )\r\n  }\r\n  loadProcedureMaster()\r\n  {\r\n    this.obprocedure=this.practitionersvc.GetProcedureMaster();\r\n    this.obprocedure.subscribe(\r\n      (data:any)=>{        \r\n      this.procedureMaster=data;      \r\n      }\r\n    )\r\n  }\r\n  loadAllergyMaster()\r\n  {\r\n    this.oballergy=this.practitionersvc.GetAllergyMasterVisit();\r\n    this.oballergy.subscribe(\r\n      (data:any)=>{        \r\n      this.allergyMaster=data;      \r\n      }      \r\n    )\r\n    console.log(this.allergyMaster);\r\n  }\r\n  loadMedicineMaster()\r\n  {\r\n    this.obmedication=this.practitionersvc.GetMedicineMaster();\r\n    this.obmedication.subscribe(\r\n      (data:any)=>{        \r\n      this.medicineMaster=data;      \r\n      }      \r\n    )\r\n    console.log(this.medicineMaster);\r\n  }\r\n  sendMessage() {\r\n    //this.messageEvent.emit(this.message);\r\n    this.parentFun.emit();\r\n  }\r\n  DownloadPatientData()\r\n      {\r\n        debugger;\r\n\r\n         this.ob = this.practitionersvc.GetExcelReport(this.aId,this.pId);\r\n        this.ob.subscribe(\r\n          (response: any) =>{\r\n            debugger;\r\n              let dataType = response.type;\r\n              let binaryData = [];\r\n              binaryData.push(response);\r\n              let downloadLink = document.createElement('a');\r\n              downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {type: dataType}));\r\n              let fileName=\"Report_\"+new Date().toLocaleString()+\".xlsx\";\r\n                  downloadLink.setAttribute('download', fileName);\r\n              document.body.appendChild(downloadLink);\r\n              downloadLink.click();\r\n          }\r\n      )\r\n      }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FormGroup,FormControl,Validators} from '@angular/forms';\r\nimport { Doctors } from '../../models/Doctor';\r\nimport { Appointment } from '../../models/Appointment';\r\nimport { throttleTime } from 'rxjs/operators';\r\nimport { DoctorServiceService } from '../../services/doctor-service.service';\r\nimport {AppointmentService} from '../../services/appointment.service';\r\nimport {ToasterService} from '../../core/ToasterService';\r\n import { ToasterPosition } from '../../core/ToasterPosition';\r\nimport { AuthService } from '../../core/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-book-appointment',\r\n  templateUrl: './book-appointment.component.html',\r\n  styleUrls: ['./book-appointment.component.css']\r\n})\r\nexport class BookAppointmentComponent implements OnInit {\r\n\r\n  @Input()  drId:number;\r\n  @Output(\"parentFun\") parentFun: EventEmitter<any> = new EventEmitter();\r\n\r\npublic ob:Observable<Doctors[]>;\r\npublic doctorsdata: any;\r\npublic ob1:Observable<Appointment[]>;\r\npublic appointmentData;\r\npublic msg:string=\"\";\r\nsuccess: boolean;\r\npublic res: any;\r\n\r\nuserForm: FormGroup = new FormGroup({\r\n  doctorname: new FormControl(''),\r\n  patientname: new FormControl(''),\r\n  appointmentdate: new FormControl('',Validators.required),\r\n  fromtime: new FormControl(null,Validators.required),\r\n  totime: new FormControl('',Validators.required),\r\n  spetiality : new FormControl(''),\r\n  description: new FormControl('')   \r\n});\r\n\r\n  constructor(private doctorsvc:DoctorServiceService\r\n    ,private appointmentsvc:AppointmentService,private toaster:ToasterService,private authService: AuthService) {\r\n   }\r\n\r\n  submit():void{\r\nconsole.log('click done');\r\nconsole.log(this.userForm);\r\n  }\r\n\r\n  getToday(): string {\r\n    return new Date().toISOString().split('T')[0];\r\n  }\r\n\r\n  SaveAppointmentData():void{\r\n    debugger;\r\n    console.log('click done');\r\n    console.log(this.userForm);\r\n    this.appointmentData=new Appointment(0,this.userForm.value.doctorname,this.userForm.value.patientname\r\n      ,this.userForm.value.appointmentdate,this.userForm.value.fromtime,this.userForm.value.totime\r\n      ,this.drId.toString(),this.doctorsdata[\"patientid\"],false,\"\",this.userForm.value.description);\r\n\r\n      if(this.userForm.invalid==false)\r\n      {\r\n      this.ob1=this.appointmentsvc.SaveAppointment(this.appointmentData);\r\n      this.ob1.subscribe(\r\n        dataa => { \r\n          this.res = dataa;\r\n          console.log(this.res);\r\n          if(this.res.code==\"1\"){ \r\n            this.success=true;\r\n            this.parentFun.emit();\r\n            this.toaster.success(\"Success\",this.res.response,ToasterPosition.topFull);\r\n          }else{\r\n            this.toaster.error(\"Error\",this.res.response,ToasterPosition.topFull);\r\n          }  },\r\n        (error: any) =>  {\r\n          this.parentFun.emit();\r\n          this.toaster.error('Error',error,ToasterPosition.topFull);\r\n         console.log(\"Error in saving Appointment data\")}\r\n      )\r\n      }\r\n  }\r\n\r\n loadData(drId:number)\r\n {\r\n  this.ob=this.doctorsvc.GetDoctorDataById(this.drId,this.authService.email);\r\n  this.ob.subscribe(\r\n  (dr:any)=>{this.doctorsdata=dr;console.log(this.doctorsdata)\r\n  this.userForm.patchValue({\r\n    \"doctorname\": \"Dr. \" +this.doctorsdata[\"drname\"],\r\n    \"patientname\": \"Patient1\",\r\n    \"spetiality\": this.doctorsdata[\"speciality\"]\r\n  })\r\n},\r\n(error:any)=>console.log('fails to load doctors data')\r\n);\r\n }\r\n\r\n functioncallbackFunction(){\r\n  this.success=true;\r\n}\r\n\r\n  ngOnInit(): void {\r\n    debugger;\r\n    console.log(this.drId);\r\n    this.loadData(this.drId); \r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvYWRtaW4tbGF5b3V0L2FkbWluLWxheW91dC5jb21wb25lbnQuc2NzcyJ9 */\";","export class PatientDiagnosis{\r\n  constructor(              \r\n      public DiagnosisId:number=0,\r\n      public diagnosisDescription:string=\"\",\r\n      public patientid:string=\"\",\r\n      public AppointmentId:number=0,\r\n      public diagnosisCode:string =\"\"\r\n   )\r\n  {}\r\n\r\n// get Diagnosis() { return this.diagnosis };\r\n// set Diagnosis(data: string) { this.diagnosis = data };\r\n\r\n// get Diagnosisdescription() { return this.diagnosisDescription };\r\n// set Diagnosisdescription(data: string) { this.diagnosisDescription = data };\r\n\r\n// get Patientid() { return this.patientid };\r\n// set Patientid(data: string) { this.patientid = data };\r\n\r\n// get Appointmentid() { return this.appointmentid };\r\n// set Appointmentid(data: string) { this.appointmentid = data };\r\n}","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xl-3\\\">\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                        <mat-label>City</mat-label>\\r\\n                        <mat-select #cmbcity>\\r\\n                          <mat-option>None</mat-option>\\r\\n                          <mat-option *ngFor=\\\"let City of City\\\" [value]=\\\"City\\\">{{City}}</mat-option>\\r\\n                        </mat-select>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                <div class=\\\"col-xl-3\\\">\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                        <mat-label>Speciality</mat-label>\\r\\n                        <mat-select #cmbspeciality>\\r\\n                          <mat-option>None</mat-option>\\r\\n                          <mat-option *ngFor=\\\"let speciality of speciality\\\" [value]=\\\"speciality\\\">{{speciality}}</mat-option>\\r\\n                        </mat-select>\\r\\n                      </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-xl-3\\\">\\r\\n                    <label for=\\\"role\\\">Gender: </label><br />\\r\\n                    <mat-radio-group aria-label=\\\"Select an option\\\" (change)=\\\"onChange($event)\\\">\\r\\n                      <mat-radio-button value=\\\"M\\\">Male</mat-radio-button>\\r\\n                      <mat-radio-button value=\\\"F\\\" style=\\\"margin-left: 10px;\\\">Female</mat-radio-button>\\r\\n                    </mat-radio-group>\\r\\n                </div>\\r\\n                <div class=\\\"col-xl-3\\\">\\r\\n                  <button class=\\\"btn btn-success\\\" style=\\\"float: center;\\\" (click)=\\\"GetFilterData()\\\">Search</button>\\r\\n               </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- <div class=\\\"divcard col-sm-12\\\">\\r\\n            <div style=\\\"padding-bottom: 15px;\\\" *ngFor=\\\"let dr of doctorsdata\\\">\\r\\n            <div class=\\\"card drcard\\\" >\\r\\n              <div class=\\\"card-body\\\">\\r\\n          <table class=\\\"col-sm-12\\\" style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td class=\\\"cardcol1\\\"><h3>Name: Dr. {{dr.firstName}} {{dr.lastName}}</h3></td>\\r\\n              <td class=\\\"cardcol2\\\"><h3>City: {{dr.city}}</h3></td>\\r\\n              <td class=\\\"cardcol3\\\"></td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td class=\\\"cardcol1\\\"><h3>Contact: {{dr.phoneNo}}</h3></td>\\r\\n              <td class=\\\"cardcol2\\\"><h3>Speciality: {{dr.speciality}}</h3></td>\\r\\n              <td class=\\\"cardcol3\\\"></td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td class=\\\"cardcol1\\\"><h3>Email: {{dr.emailId}}</h3></td>\\r\\n              <td class=\\\"cardcol2\\\"><h3>Gender: {{dr.gender}}</h3></td>\\r\\n              <td class=\\\"cardcol3\\\"><button class=\\\"btn btn-success\\\" style=\\\"float: right;\\\" (click)=\\\"open(content,dr.id)\\\">Book Appointment</button></td>\\r\\n            </tr>\\r\\n          </table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          </div> -->\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n          <div class=\\\"card col-md-3 mx-auto my-5\\\" style=\\\"width: 18rem\\\" *ngFor=\\\"let dr of doctorsdata\\\">\\r\\n          <div *ngIf=\\\"dr.gender=='M'; else elseBlock\\\">\\r\\n            <img style=\\\"height: 150px\\\"\\r\\n              src=\\\"../../../assets/img/MaleDrIcon.png\\\"\\r\\n              class=\\\"card-img-top\\\"\\r\\n              alt=\\\"...\\\"\\r\\n            /></div>\\r\\n            <ng-template #elseBlock>\\r\\n            <img style=\\\"height: 150px\\\" \\r\\n            src=\\\"../../../assets/img/FemaleDrIcon.png\\\"\\r\\n            class=\\\"card-img-top\\\"\\r\\n            alt=\\\"...\\\"\\r\\n          /></ng-template>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <h5 class=\\\"card-title\\\" style=\\\"font-weight: bold;\\\">Dr. {{dr.firstName}} {{dr.lastName}}</h5>\\r\\n            </div>\\r\\n            <ul class=\\\"list-group list-group-flush\\\" style=\\\"padding: 0%;\\\">\\r\\n              <li class=\\\"list-group-item\\\"><span style=\\\"font-weight: bold;\\\">Contact:</span> {{dr.phoneNo}}</li>\\r\\n              <li class=\\\"list-group-item\\\"><span style=\\\"font-weight: bold;\\\">Email:</span> {{dr.emailId}}</li>\\r\\n              <li class=\\\"list-group-item\\\"><span style=\\\"font-weight: bold;\\\">City:</span> {{dr.city}}</li>\\r\\n              <li class=\\\"list-group-item\\\"><span style=\\\"font-weight: bold;\\\">Speciality:</span> {{dr.speciality}}</li>\\r\\n              <li class=\\\"list-group-item\\\"><span style=\\\"font-weight: bold;\\\">Gender:</span> {{dr.gender}}</li>\\r\\n            </ul>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <button class=\\\"btn btn-success\\\" (click)=\\\"open(content,dr.id)\\\">Book Appointment</button>\\r\\n            </div>\\r\\n          </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        \\r\\n        </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <!-- <div class=\\\"appointment-model\\\" [ngClass]=\\\"{'ModelPopUpClass': true}\\\"> -->\\r\\n      <!-- <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Create new doctor account</h4> -->\\r\\n      <div>\\r\\n      <button type=\\\"button\\\" class=\\\"close btn-close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times; &nbsp;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <!-- </div> -->\\r\\n    <!-- <div class=\\\"modal-body\\\" [ngClass]=\\\"{'ModelPopUpClass': true}\\\" style=\\\"width: 800px;\\\"> -->\\r\\n      <app-book-appointment (parentFun)=\\\"receiveMessage()\\\" [drId]=\\\"drIdForAppointment\\\"></app-book-appointment>\\r\\n     <!-- </div>  -->\\r\\n  </ng-template>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-danger\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Patient Visit Data</h4>\\r\\n                        <p class=\\\"card-category\\\"></p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <form class=\\\"form-group\\\" [formGroup]=\\\"fg\\\" (ngSubmit)=\\\"SavePatientVisitDoctor()\\\">\\r\\n                            <mat-tab-group dynamicHeight>\\r\\n                                <!-- <mat-tab label=\\\"Patient Details\\\">\\r\\n                                    <br>                                \\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"ApptID\\\">AppointmentID: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ApptID\\\" formControlName=\\\"ApptID\\\" disabled>                        \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"PtID\\\">PatientID: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"PtID\\\" formControlName=\\\"PtID\\\" disabled>                        \\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                    </fieldset>\\r\\n                                </mat-tab> -->\\r\\n                                <mat-tab label=\\\"Vital Signs\\\">\\r\\n                                    <br>                                \\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"height\\\">Height (in cms): <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"height\\\" formControlName=\\\"height\\\">                        \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"weight\\\">Weight (in kgs): <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"weight\\\" formControlName=\\\"weight\\\">                        \\r\\n                                                </div>\\r\\n                                            </div>            \\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"bloodpressuresystolic\\\">Blood Pressure Systolic (in mmHg): <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bloodpressuresystolic\\\" formControlName=\\\"bloodpressuresystolic\\\">                        \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"bloodpressurediastolic\\\">Blood Pressure Diastolic (in mmHg): <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bloodpressurediastolic\\\" formControlName=\\\"bloodpressurediastolic\\\">                        \\r\\n                                                </div>\\r\\n                                            </div>            \\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"temperature\\\">Body Temperature (in celsius): <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bodytemperature\\\" formControlName=\\\"bodytemperature\\\">                        \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"respirationrate\\\">Respiration Rate (in BPM): <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"respirationrate\\\" formControlName=\\\"respirationrate\\\">                        \\r\\n                                                </div>\\r\\n                                            </div>                        \\r\\n                                        </div>\\r\\n\\r\\n                                    </fieldset>\\r\\n                                </mat-tab>\\r\\n                                <mat-tab label=\\\"Allergies\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"Allergytype\\\">Allergy Type: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <select class=\\\"custom-select\\\" [(ngModel)]=\\\"allergytype\\\" [ngModelOptions]=\\\"{standalone: true}\\\" aria-label=\\\"Default select example\\\">\\r\\n                                                        <option selected>Select Allergy Type</option>\\r\\n                                                        <option *ngFor=\\\"let allergy of allergyMaster\\\" [value]=\\\"allergy.id\\\">{{allergy.allergyName}}</option>\\r\\n                                                      </select>                                                      \\r\\n                                                      <!-- <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"name\\\" /> -->\\r\\n                                                </div>                \\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"fatalallergy\\\">Fatal Allergy? <span class=\\\"asterisk\\\"> *</span></label><br>\\r\\n                                                    <input type=\\\"checkbox\\\" id=\\\"chkFatal\\\" name=\\\"chkFatal\\\" [(ngModel)]=\\\"chkFatal\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"True\\\">                    \\r\\n                                                    <!-- <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" [(ngModel)]=\\\"year\\\" [ngModelOptions]=\\\"{standalone: true}\\\" name=\\\"optradio\\\" checked>True</label>\\r\\n                                                    <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" [(ngModel)]=\\\"year\\\" [ngModelOptions]=\\\"{standalone: true}\\\" name=\\\"optradio\\\">False</label>                     -->\\r\\n                                                    <!-- <input type=\\\"text\\\" [(ngModel)]=\\\"year\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"year\\\" /> -->\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <button id=\\\"btnSubmitAllergy\\\" type=\\\"button\\\" (click)=\\\"AddAllergy()\\\" class=\\\"btn\\\">Add Allergy</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <table class=\\\"table table-hover table-striped table-bordered\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th>Allergy</th><th>Fatal Allergy?</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let row of AllergyRows\\\">                  \\r\\n                                                        <td>{{row.allergytype}}</td>\\r\\n                                                        <td>{{row.chkFatal}}</td>\\r\\n                                                      </tr>\\r\\n                                                </tbody>                                \\t\\t\\t\\t\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n\\r\\n                                    </fieldset>\\r\\n                                </mat-tab>\\r\\n                                <mat-tab label=\\\"Diagnosis\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"Title\\\">Diagnosis: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <select class=\\\"custom-select\\\" [(ngModel)]=\\\"diagnosistype\\\" [ngModelOptions]=\\\"{standalone: true}\\\" aria-label=\\\"Default select example\\\">\\r\\n                                                        <option selected>Select Diagnosis</option>\\r\\n                                                        <option *ngFor=\\\"let diagnosis of diagnosisMaster\\\" [value]=\\\"diagnosis.id\\\">{{diagnosis.diagnosisCode}}</option>\\r\\n                                                      </select>\\r\\n                                                </div>                \\r\\n                                                <!-- <div class=\\\"col-xs-8\\\">\\r\\n                                                    <label for=\\\"DiagnosisDescription\\\">Diagnosis Description: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"diagnosisdescription\\\" [ngModelOptions]=\\\"{standalone: true}\\\"/>\\r\\n                                                    <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('lastname').touched && fg.get('lastname').errors?.required\\\">\\r\\n                                                        LastName is required!\\r\\n                                                    </span>\\r\\n                                                </div> -->\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <button id=\\\"btnSubmit\\\" type=\\\"button\\\" (click)=\\\"AddDiagnosis()\\\" class=\\\"btn\\\">Add Diagnosis</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <table class=\\\"table table-hover table-striped table-bordered\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th>Diagnosis</th><th>Diagnosis Description</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let row of DiagnosisRows\\\">                  \\r\\n                                                        <td>{{row.diagnosiscode}}</td>\\r\\n                                                        <td>{{row.diagnosisdescription}}</td>\\r\\n                                                      </tr>                    \\r\\n                                                </tbody>                                \\t\\t\\t\\t\\r\\n                                            </table>          \\r\\n                                        </div>\\r\\n                                    </fieldset>\\r\\n                                </mat-tab>\\r\\n                                <mat-tab label=\\\"Procedure\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-6\\\">\\r\\n                                                    <label for=\\\"Title\\\">Procedure: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <select class=\\\"custom-select\\\" [(ngModel)]=\\\"proceduretype\\\" [ngModelOptions]=\\\"{standalone: true}\\\" aria-label=\\\"Default select example\\\">\\r\\n                                                        <option selected>Select Procedure</option>\\r\\n                                                        <option *ngFor=\\\"let procedure of procedureMaster\\\" [value]=\\\"procedure.id\\\">{{procedure.procedureCode}}</option>\\r\\n                                                      </select>\\r\\n                                                </div>                \\r\\n                                                <!-- <div class=\\\"col-xs-8\\\">\\r\\n                                                    <label for=\\\"lastname\\\">Procedure Description: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"proceduredescription\\\" [ngModelOptions]=\\\"{standalone: true}\\\"/>\\r\\n                                                    <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('lastname').touched && fg.get('lastname').errors?.required\\\">\\r\\n                                                        LastName is required!\\r\\n                                                    </span>\\r\\n                                                </div> -->\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <button id=\\\"btnSubmit\\\" type=\\\"button\\\" (click)=\\\"AddProcedure()\\\" class=\\\"btn\\\">Add Procedure</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <table class=\\\"table table-hover table-striped table-bordered\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th>Procedure</th><th>Procedure Description</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let row of ProcedureRows\\\">                  \\r\\n                                                        <td>{{row.proceduretype}}</td>\\r\\n                                                        <td>{{row.proceduredescription}}</td>\\r\\n                                                      </tr>                    \\r\\n                                                </tbody>                                \\t\\t\\t\\t\\r\\n                                            </table>               \\r\\n                                        </div>\\r\\n                                    </fieldset>\\r\\n                                </mat-tab>\\r\\n                                <mat-tab label=\\\"Medication\\\">\\r\\n                                    <br>\\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-sm-5\\\">\\r\\n                                                    <label for=\\\"Title\\\">Medication: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <select class=\\\"custom-select\\\" [(ngModel)]=\\\"medicationtype\\\" [ngModelOptions]=\\\"{standalone: true}\\\" aria-label=\\\"Default select example\\\">\\r\\n                                                        <option selected>Select Medication</option>\\r\\n                                                        <option *ngFor=\\\"let medicine of medicineMaster\\\" [value]=\\\"medicine.id\\\">{{medicine.medicineStrength}}</option>\\r\\n                                                      </select>\\r\\n                                                </div>                                                 \\r\\n                                                <div class=\\\"col-sm-7\\\">\\r\\n                                                    <label for=\\\"lastname\\\">Medication Description: <span class=\\\"asterisk\\\"> *</span></label>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"description\\\" [ngModelOptions]=\\\"{standalone: true}\\\"/>\\r\\n                                                    <!-- <span class=\\\"asterisk\\\" *ngIf=\\\"fg.get('lastname').touched && fg.get('lastname').errors?.required\\\">\\r\\n                                                        LastName is required!\\r\\n                                                    </span> -->\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <button id=\\\"btnSubmit\\\" type=\\\"button\\\" (click)=\\\"AddMedication()\\\" class=\\\"btn\\\">Add Medication</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">            \\r\\n                                            <table class=\\\"table table-hover table-striped table-bordered\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th>Medication</th><th>Medication Description</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let row of MedicationRows\\\">                  \\r\\n                                                        <td>{{row.medicationtype}}</td>                        \\r\\n                                                        <td>{{row.medicationdescription}}</td>\\r\\n                                                      </tr>                    \\r\\n                                                </tbody>                                \\t\\t\\t\\t\\r\\n                                            </table>        \\r\\n                                        </div>\\r\\n                                    </fieldset>\\r\\n\\r\\n                                </mat-tab>\\r\\n                                \\r\\n                            </mat-tab-group>\\r\\n                            <div class=\\\"form-group\\\">            \\r\\n                                <button id=\\\"btnFormSubmit\\\" type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"DownloadPatientData()\\\">Export</button>\\r\\n                            </div>                            \\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVkdWxpbmcvYXBwb2ludG1lbnQtYWN0aW9uL2FwcG9pbnRtZW50LWFjdGlvbi5jb21wb25lbnQuY3NzIn0= */\";","export class PatientDemographicData{\r\n    constructor(      \r\n        public id: number=0,\r\n        public race:string=\"\",\r\n        public ethnicity:string=\"\",\r\n        public languagesKnown:string=\"\",\r\n        public address:string=\"\",\r\n        public nomineeFirstName:string=\"\",\r\n        public nomineeLastName:string=\"\",\r\n        public nomineeEmail:string=\"\",\r\n        public nomineeRelationship:string=\"\",\r\n        public nomineeContact:string=\"\",\r\n        public nomineeAddress:string=\"\",\r\n        public isNeedportalAccess:boolean=false,\r\n        public patientid:number=0\r\n             )\r\n    {\r\n        \r\n    }\r\n\r\n  //   get Id() { return this.id };\r\n  //   set Id(data: number) { this.id = data };\r\n\r\n  // get Race() { return this.race };\r\n  // set Race(data: string) { this.race = data };\r\n\r\n  // get Ethnicity() { return this.ethnicity };\r\n  // set Ethnicity(data: string) { this.ethnicity = data };\r\n\r\n  // get LanguagesKnown() { return this.languagesKnown };\r\n  // set LanguagesKnown(data: string) { this.languagesKnown = data };\r\n\r\n  // get Address() { return this.address };\r\n  // set Address(data: string) { this.address = data };\r\n\r\n  // get NomineeFirstName() { return this.nomineeFirstName };\r\n  // set NomineeFirstName(data: string) { this.nomineeFirstName = data };\r\n\r\n  // get NomineeLastName() { return this.nomineeLastName };\r\n  // set NomineeLastName(data: string) { this.nomineeLastName = data };\r\n\r\n  // get NomineeEmail() { return this.nomineeEmail };\r\n  // set NomineeEmail(data: string) { this.nomineeEmail = data };\r\n\r\n  // get NomineeRelationship() { return this.nomineeRelationship };\r\n  // set NomineeRelationship(data: string) { this.nomineeRelationship = data };\r\n\r\n  // get NomineeContact() { return this.nomineeContact };\r\n  // set NomineeContact(data: string) { this.nomineeContact = data };\r\n\r\n  // get NomineeAddress() { return this.nomineeAddress };\r\n  // set NomineeAddress(data: string) { this.nomineeAddress = data };\r\n\r\n  // get IsNeedportalAccess() { return this.isNeedportalAccess };\r\n  // set IsNeedportalAccess(data: boolean) { this.isNeedportalAccess = data };\r\n\r\n  // get Patientid() { return this.patientid };\r\n  //   set Patientid(data: number) { this.patientid = data };\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { finalize } from 'rxjs/operators';\r\nimport {AuthService} from '../../core/auth.service';\r\n\r\ndeclare const $: any;\r\ndeclare interface RouteInfo {\r\n    path: string;\r\n    title: string;\r\n    icon: string;\r\n    class: string;\r\n}\r\nexport var ROUTES: RouteInfo[] = [\r\n    // { path: '/dashboard', title: 'Dashboard',  icon: 'dashboard', class: '' },\r\n    // { path: '/user-profile', title: 'User Profile',  icon:'person', class: '' },\r\n    // { path: '/calendar', title: 'Calendar',  icon:'calendar_view_month', class: 'calendar' },\r\n    // { path: '/doctor', title: 'Doctors',  icon:'medical_services', class: 'doctor' },\r\n    // { path: '/nurse', title: 'Nurses',  icon:'medical_services', class: 'nurse' },\r\n    // { path: '/patient', title: 'Patients',  icon:'medical_services', class: 'patient' },\r\n    // //{ path: '/table-list', title: 'Table List',  icon:'content_paste', class: '' },\r\n    // //{ path: '/typography', title: 'Typography',  icon:'library_books', class: '' },\r\n    // //{ path: '/icons', title: 'Icons',  icon:'bubble_chart', class: '' },\r\n    // //{ path: '/maps', title: 'Maps',  icon:'location_on', class: '' },\r\n    // { path: '/notifications', title: 'Notifications',  icon:'notifications', class: '' }\r\n    // //{ path: '/upgrade', title: 'Upgrade to PRO',  icon:'unarchive', class: 'active-pro' },\r\n    \r\n];\r\n\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  menuItems: any[];\r\n  res:any;\r\n  role:string;\r\n\r\n  constructor(private authService:AuthService) { }\r\n\r\n  ngOnInit() {    \r\n    //debugger;\r\n    if(this.authService.isAuthenticated)\r\n    {\r\n    this.initRole();\r\n    }\r\n    // this.menuItems = ROUTES.filter(menuItem => menuItem);\r\n  }\r\n  isMobileMenu() {\r\n      if ($(window).width() > 991) {\r\n          return false;\r\n      }\r\n      return true;\r\n  };\r\n\r\n  initRole(){\r\n    this.authService.getUserRole(this.authService.email)\r\n      .pipe(finalize(() => {\r\n      }))  \r\n      .subscribe(\r\n      result => {         \r\n         if(result) {\r\n           //debugger;\r\n            this.res = result;\r\n            this.authService.userrole = this.res.role;\r\n            this.role=this.res.role;\r\n            this.setMenu();\r\n         }\r\n      },\r\n      error => {\r\n      });\r\n  }\r\n\r\n public setMenu(){\r\n    switch(this.role)\r\n    {\r\n      case \"admin\":\r\n        ROUTES=[\r\n          { path: '/dashboard', title: 'Dashboard',  icon: 'dashboard', class: '' },\r\n          { path: '/user-profile', title: 'User Profile',  icon:'person', class: '' },\r\n          { path: '/doctor', title: 'Doctors',  icon:'medical_services', class: 'doctor' },\r\n          { path: '/nurse', title: 'Nurses',  icon:'medical_services', class: 'nurse' },\r\n          { path: '/patient', title: 'Patients',  icon:'medical_services', class: 'patient' }\r\n        ];\r\n          break;\r\n      case \"patient\":\r\n       ROUTES=[\r\n          { path: '/dashboard', title: 'Dashboard',  icon: 'dashboard', class: '' },\r\n          { path: '/user-profile', title: 'User Profile',  icon:'person', class: '' },\r\n          { path: '/calendar', title: 'Calendar',  icon:'calendar_view_month', class: 'calendar' },,\r\n          { path: '/viewdata', title: 'My Details',  icon:'person', class: '' },\r\n          { path: '/schedule', title: 'Book Appointment',  icon:'note_alt', class: '' },  \r\n          { path: '/visithistorydata', title: 'Visit History',  icon: 'history', class: '' }, \r\n          { path: '/notifications', title: 'Notifications',  icon:'notifications', class: '' }\r\n      ];\r\n      break;\r\n      case \"doctor\":\r\n        ROUTES=[ \r\n          { path: '/dashboard', title: 'Dashboard',  icon: 'dashboard', class: '' },\r\n          { path: '/user-profile', title: 'User Profile',  icon:'person', class: '' },\r\n          { path: '/calendar', title: 'Calendar',  icon:'calendar_view_month', class: 'calendar' },,\r\n          { path: '/viewappointment', title: 'View Appointments',  icon:'medical_services', class: '' },           \r\n          { path: '/notifications', title: 'Notifications',  icon:'notifications', class: '' }\r\n       ];\r\n       break;\r\n       case \"nurse\":\r\n        ROUTES=[   \r\n          { path: '/dashboard', title: 'Dashboard',  icon: 'dashboard', class: '' },\r\n          { path: '/viewappointment', title: 'View Appointments',  icon:'medical_services', class: '' },           \r\n          { path: '/notifications', title: 'Notifications',  icon:'notifications', class: '' }\r\n       ];\r\n       break;\r\n      default:\r\n        ROUTES=[\r\n          { path: '/dashboard', title: 'Dashboard',  icon: 'dashboard', class: '' }\r\n      ];\r\n        break;\r\n    }\r\n    this.menuItems = ROUTES.filter(menuItem => menuItem);  \r\n  }\r\n}\r\n","export default \".th-font\\r\\n{\\r\\n    font-size: 15px;\\r\\n    font-weight :bold;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGF0aWVudC92aXNpdGhpc3RvcnlkYXRhL3Zpc2l0aGlzdG9yeWRhdGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxlQUFlO0lBQ2YsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvcGF0aWVudC92aXNpdGhpc3RvcnlkYXRhL3Zpc2l0aGlzdG9yeWRhdGEuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50aC1mb250XHJcbntcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0IDpib2xkO1xyXG59Il19 */\";","/*!\n\n=========================================================\n* Material Dashboard Angular - v2.4.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-angular2\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-angular2/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":"webpack:///"}