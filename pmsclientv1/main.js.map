{"version":3,"sources":["./src/app/Models/patientvisit.ts","./src/app/login/userlogin/userlogin.component.ts","./src/app/login/userlogin/userlogin.component.html","./src/app/home/index/index.component.ts","./src/app/home/index/index.component.html","./src/app/service/register.service.ts","./src/app/Models/patientallergy1.ts","./src/app/account/account-routes.module.ts","./src/app/service/notifications.service.ts","./src/app/core/auth.service.ts","./src/app/core/config.service.ts","./src/app/core/dropdownmaster.service.ts","./src/app/admin/register/register.component.ts","./src/app/admin/register/register.component.html","./src/app/home/home-routing.module.ts","./src/app/patient/patient.module.ts","./src/environments/environment.ts","./src/app/models/Appointment.ts","./src/app/patient-visit/patient-visit.module.ts","./src/app/admin/doctor-section/doctor-section.component.ts","./src/app/admin/doctor-section/doctor-section.component.html","./src/app/Service/doctor-service.service.ts","./src/app/CustomValidator/PasswdMatch.validator.ts","./src/app/admin/inbox/inbox.component.ts","./src/app/admin/inbox/inbox.component.html","./src/app/Service/patient.service.ts","./src/app/shared-material/shared-material.module.ts","./src/app/Models/Patient.ts","./src/app/scheduling/appointment-action/appointment-action.component.ts","./src/app/scheduling/appointment-action/appointment-action.component.html","./src/app/auth-callback/auth-callback.component.html","./src/app/auth-callback/auth-callback.component.ts","./src/app/core/base.service.ts","./src/app/app.routes.ts","./src/app/Models/patientprocedure.ts","./src/app/core/ToasterPosition.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/home/header/header.component.html","./src/app/home/header/header.component.ts","./src/app/scheduling/scheduling.module.ts","./src/app/shared-wrapper/shared-wrapper.module.ts","./src/app/scheduling/schedule/schedule.component.html","./src/app/scheduling/schedule/schedule.component.ts","./src/app/Service/appointment.service.ts","./src/app/login/login.module.ts","./src/app/scheduling/view-appointments/view-appointments.component.ts","./src/app/scheduling/view-appointments/view-appointments.component.html","./src/app/app.module.ts","./src/app/patient-visit/patient-visit-nurse/patient-visit-nurse.component.ts","./src/app/patient-visit/patient-visit-nurse/patient-visit-nurse.component.html","./src/app/models/PatientAllergy.ts","./src/app/account/register/register.component.ts","./src/app/account/register/register.component.html","./src/app/home/home.module.ts","./src/app/admin/change-password/change-password.component.ts","./src/app/admin/change-password/change-password.component.html","./src/app/core/ToasterService.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/shared-wrapper/loader/loader.component.ts","./src/app/shared-wrapper/loader/loader.component.html","./src/app/models/PatientDemographicData.ts","./src/app/Models/patientmedication.ts","./src/app/account/account.module.ts","./src/app/admin/admin.module.ts","./src/app/account/patient-register/patient-register.component.ts","./src/app/account/patient-register/patient-register.component.html","./src/app/patient/view-data/view-data.component.ts","./src/app/patient/view-data/view-data.component.html","./src/app/relogin/relogin.component.ts","./src/app/relogin/relogin.component.html","./src/app/core/core.module.ts","./src/app/patient-visit/patient-visit-doctor/patient-visit-doctor.component.ts","./src/app/patient-visit/patient-visit-doctor/patient-visit-doctor.component.html","./src/app/scheduling/book-appointment/book-appointment.component.ts","./src/app/scheduling/book-appointment/book-appointment.component.html","./src/app/admin/patient-section/patient-section.component.ts","./src/app/admin/patient-section/patient-section.component.html","./src/app/service/patient.service.ts","./src/app/shared-wrapper/toolbar/toolbar.component.ts","./src/app/shared-wrapper/toolbar/toolbar.component.html","./src/app/models/registerModel.ts","./src/app/Models/patientdiagnosis.ts","./src/app/admin/nurse-section/nurse-section.component.ts","./src/app/admin/nurse-section/nurse-section.component.html","./src/app/shared-wrapper/shared-wrapper/shared-wrapper.component.ts","./src/app/shared-wrapper/shared-wrapper/shared-wrapper.component.html","./src/app/shared-wrapper/shared-wrapper.routes.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class PatientVisit{\r\n    constructor(\r\n        public patientid:string =\"\",\r\n        public appointmentid:string=\"\",\r\n        public height:string=\"\",\r\n        public weight:string=\"\",\r\n        public bloodpressuresystolic:string=\"\",\r\n        public bloodpressurediastolic:string=\"\",\r\n        public bodytemperature:string = \"\",\r\n        public respirationrate:string = \"\",\r\n        public id:string =\"\"        \r\n     )\r\n    {}\r\n\r\n  get PatientID() { return this.patientid };\r\n  set PatientID(address: string) { this.patientid = address };\r\n\r\n  get AppointmentID() { return this.appointmentid };\r\n  set AppointmentID(address: string) { this.appointmentid = address };\r\n\r\n  get Height() { return this.height };\r\n  set Height(address: string) { this.height = address };\r\n\r\n  get Weight() { return this.weight };\r\n  set Weight(address: string) { this.weight = address };\r\n\r\n  get Bloodpressuresystolic() { return this.bloodpressuresystolic };\r\n  set Bloodpressuresystolic(address: string) { this.bloodpressuresystolic = address };\r\n\r\n  get Bloodpressurediastolic() { return this.bloodpressurediastolic };\r\n  set Bloodpressurediastolic(address: string) { this.bloodpressurediastolic = address };\r\n\r\n  get Bodytemperature() { return this.bodytemperature };\r\n  set Bodytemperature(address: string) { this.bodytemperature = address };\r\n\r\n  get Respirationrate() { return this.respirationrate };\r\n  set Respirationrate(address: string) { this.respirationrate = address };\r\n\r\n  get ID() { return this.id };\r\n  set ID(address: string) { this.id = address };\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../core/auth.service';\r\nimport { NgxSpinnerModule,NgxSpinnerService } from 'ngx-spinner';\r\n@Component({\r\n  selector: 'app-userlogin',\r\n  templateUrl: './userlogin.component.html',\r\n  styleUrls: ['./userlogin.component.css']\r\n})\r\nexport class UserloginComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService,private spinner:NgxSpinnerService) { }    \r\n  \r\n    title = \"Login\";\r\n    \r\n    public Login():void {     \r\n      this.spinner.show();\r\n      this.authService.login();\r\n    }   \r\n\r\n    ngOnInit() {\r\n      this.spinner.show();\r\n      this.Login();\r\n    }\r\n  // public Login(): void\r\n  // {      \r\n          //this.router.navigate(['/sharedwrapperhome']);        \r\n  // }\r\n\r\n}\r\n","<!-- Default form login -->\r\n<form class=\"text-center border border-light p-5\">\r\n\r\n    <p class=\"h4 mb-4\">Sign in</p>\r\n  \r\n    <!-- Email -->\r\n    <input type=\"email\" id=\"defaultLoginFormEmail\" class=\"form-control mb-4\" placeholder=\"E-mail\">\r\n  \r\n    <!-- Password -->\r\n    <input type=\"password\" id=\"defaultLoginFormPassword\" class=\"form-control mb-4\" placeholder=\"Password\">\r\n  \r\n    <div class=\"d-flex justify-content-around\">\r\n      <div>\r\n        <!-- Forgot password -->\r\n        <a href=\"\">Forgot password?</a>\r\n      </div>\r\n    </div>\r\n  \r\n    <!-- Sign in button -->\r\n    <button mat-raised-button color=\"accent\" (click)=\"Login()\">\r\n      Login\r\n    </button>\r\n  \r\n    <!-- Register -->\r\n    <p>Not a member?\r\n      <a href=\"\">Register</a>\r\n    </p>\r\n  \r\n     \r\n  </form>\r\n  <!-- Default form login -->\r\n  <ngx-spinner></ngx-spinner>","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../core/auth.service'; \nimport { Router,RouterModule,Navigation } from '@angular/router'\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n  isAuthenticated: boolean;\n  subscription: Subscription;\n  constructor(private authService : AuthService,private route: Router) { }\n\n  ngOnInit(): void {\n    this.subscription = this.authService.authNavStatus$.subscribe(status => this.isAuthenticated = status);\n    if(this.isAuthenticated){\n      //this.route.navigate[\"/sharedwrapper\"];\n      this.route.navigate(['/sharedwrapperhome']);    \n      console.log(\"logged in\");\n    }else{\n      console.log(\"logged out\");\n    }\n  }\n\n}\n","<div class=\"container\">\r\n    <div class=\"jumbotron mt-3 text-center\">\r\n      <img src=\"../../../assets/images/PMSlogo.png\" /><h2> Practice Management System</h2>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Register } from '../models/registerModel';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { observable, Observable } from 'rxjs';\r\nimport { Nurse } from '../models/nurseModel';\r\nimport { Doctor } from '../models/doctorModel';\r\n//import { Patient } from '../models/patientModel';\r\nimport { Patients} from '../models/Patient';\r\nimport { Url } from 'url';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ConfigService } from '../core/config.service';\r\nimport { Appointment } from '../models/Appointment';\r\nimport { BaseService } from '../core/base.service';\r\nimport { finalize } from 'rxjs/operators'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService extends BaseService {\r\n  headers: any;\r\n  genders:any;\r\n  titles:any;\r\n  // constructor()  { }\r\n  constructor(private httpSVC:HttpClient,private config: ConfigService)  { \r\n    super();\r\n  }\r\n  public SaveUserRegiterDatas(reg:Register,operation:string):Observable<any>\r\n  {\r\n    console.log(\"service.SavePractitionerData() hits\");\r\n      const headers = { 'content-type': 'application/json'}\r\n      if(operation===\"POST\")\r\n      {\r\n        //if(reg.role=='Doctor')  \r\n        //return this.httpSVC.post<Register>( this.config.tempResourseAPI+ \"/Doctors\", JSON.stringify(reg),{'headers':headers});\r\n        return this.httpSVC.post<Register>( this.config.authApiURI+ \"/doctor\",reg).pipe(catchError(this.handleError));\r\n        //else if(reg.role=='Nurse')\r\n        //  return this.httpSVC.post<Register>(this.config.tempResourseAPI+\"/Nurses\", JSON.stringify(reg),{'headers':headers});\r\n      }\r\n      else\r\n      {\r\n        if(reg.role=='Doctor')  \r\n          return this.httpSVC.patch<Register>( this.config.tempResourseAPI+ \"/Doctors/\"+reg.id, JSON.stringify(reg),{'headers':headers});\r\n        else if(reg.role=='Nurse')\r\n          return this.httpSVC.patch<Register>(this.config.tempResourseAPI+\"/Nurses/\"+reg.id, JSON.stringify(reg),{'headers':headers});        \r\n      }\r\n      \r\n    \r\n  }\r\n  //http://localhost:3000/Doctor?DrID=102\r\n  public GetDoctorJsonDatas():Observable<any>\r\n  {\r\n      return this.httpSVC.get<Doctor>(this.config.tempResourseAPI+ \"/Doctors\");\r\n  }\r\n  public GetNurseJsonDatas():Observable<any>\r\n  {   \r\n      return this.httpSVC.get<Nurse>(this.config.tempResourseAPI + \"/Nurses\");\r\n  }\r\n  public GetPatientJsonDatas():Observable<any>\r\n  {\r\n      return this.httpSVC.get<Patients>(this.config.tempResourseAPI+ \"/Patient\");\r\n  }\r\n\r\n  // Get data by Id\r\n  public GetDoctorJsonDatasByID(DrID: number):Observable<any>\r\n  {   \r\n      // return this.httpSVC.get<Doctor>(\"http://localhost:3000/Doctors?id=\"+DrID);\r\n      return this.httpSVC.get<Doctor>(this.config.tempResourseAPI+ \"/Doctors?id=\"+DrID);\r\n  }\r\n  public GetNurseJsonDatasByID(NurseID: number):Observable<any>\r\n  {   \r\n      // return this.httpSVC.get<Nurse>(\"http://localhost:3000/Nurses?id=\"+NurseID);\r\n      return this.httpSVC.get<Nurse>(this.config.tempResourseAPI+ \"/Nurses?id=\"+NurseID);\r\n  }\r\n  public GetPatientJsonDatasByID(PatientID: number):Observable<any>\r\n  {\r\n      // return this.httpSVC.get<Patient>(\"http://localhost:3000/Patients?id=\"+PatientID);\r\n      return this.httpSVC.get<Patients>(this.config.tempResourseAPI+ \"/Patient?id=\"+PatientID);\r\n  }\r\n  // private handleError(error: any)\r\n  // {\r\n  //   console.error(error);                                       //Created a function to handle and log errors, in case\r\n  //   return throwError(error);\r\n  // }\r\n\r\n// Delete data by Id\r\n  public DeleteDoctorJsonDatasByID(DrID: number):Observable<any>\r\n  {\r\n    const headers = new HttpHeaders().set('Content-Type', 'application/json').set('Accept', 'application/json');\r\n    const httpOptions = {\r\n      headers: this.headers\r\n    };\r\n    return this.httpSVC.delete<Doctor>(this.config.tempResourseAPI+ \"/Doctors/\"+DrID, this.headers).pipe(catchError(this.handleError));\r\n  }\r\n  public DeleteNurseJsonDatasByID(NurseID: number):Observable<any>\r\n  {\r\n    return this.httpSVC.delete<Nurse>(this.config.tempResourseAPI+ \"/Nurses/\"+NurseID);\r\n  }\r\n  public DeletePatientJsonDatasByID(PatientID: number):Observable<any>\r\n  {\r\n    return this.httpSVC.delete<Patients>(this.config.tempResourseAPI+ \"/Patient/\"+PatientID);\r\n  }\r\n\r\n  // Get Appointment JsonData\r\n  public GetAppointmentJsonData():Observable<any>\r\n  {\r\n      return this.httpSVC.get<Appointment>(this.config.tempResourseAPI+ \"/Appointment\");\r\n  }\r\n  public SoftDeleteNurseData(p:any):Observable<any>\r\n  {\r\n    console.log(\"service.SoftDeleteNurseData() hits\");\r\n    console.log(JSON.stringify(p));\r\n    const headers = { 'content-type': 'application/json'}  \r\n      return this.httpSVC.patch<any>(\"http://localhost:3000/Nurses/\"+p.id, JSON.stringify(p),{'headers':headers});      \r\n  }\r\n  public SoftDeleteDoctorData(p:any):Observable<any>\r\n  {\r\n    console.log(\"service.SoftDeleteNurseData() hits\");\r\n    console.log(JSON.stringify(p));\r\n    const headers = { 'content-type': 'application/json'}  \r\n      return this.httpSVC.patch<any>(\"http://localhost:3000/Doctors/\"+p.id, JSON.stringify(p),{'headers':headers});      \r\n  }\r\n    //Update IsActive in PatientJson for Delete opertion\r\n    public SoftDeletePatienData(p:any):Observable<any>\r\n    {\r\n      console.log(\"service.SoftDeletePatienData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n        return this.httpSVC.patch<any>(\"http://localhost:3000/Patient/\"+p.id, JSON.stringify(p),{'headers':headers});      \r\n    }\r\n}\r\n\r\n\r\n","export class PatientAllergy{\r\n    constructor(              \r\n        public allergy:string=\"\",\r\n        public isfatal:string=\"\",\r\n        public patientid:string=\"\",\r\n        public appointmentid:string=\"\"\r\n     )\r\n    {\r\n        \r\n    }    \r\n\r\n  get Allergy() { return this.allergy };\r\n  set Allergy(data: string) { this.allergy = data };\r\n\r\n  get Isfatal() { return this.isfatal };\r\n  set Isfatal(data: string) { this.isfatal = data };\r\n\r\n  get Patientid() { return this.patientid };\r\n  set Patientid(data: string) { this.patientid = data };\r\n\r\n  get Appointmentid() { return this.appointmentid };\r\n  set Appointmentid(data: string) { this.appointmentid = data };\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes,RouterModule } from '@angular/router';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { PatientRegisterComponent } from './patient-register/patient-register.component';\r\n\r\nconst routes : Routes = [\r\n    { path:'register',component:RegisterComponent },\r\n    { path: 'patientregister', component: PatientRegisterComponent },\r\n    //{ path: 'userlogin',loadChildren:()=> import('../login/login.module').then(m=>m.LoginModule)  }\r\n];\r\n\r\n@NgModule({\r\n    imports:[RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n    providers:[]\r\n})\r\n\r\nexport class AccountRoutingModule{}","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable, observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Notification} from '../models/Notification';\r\nimport { ConfigService } from '../core/config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationsService {\r\n\r\n  constructor(private httpsvc:HttpClient,private config:ConfigService) { }\r\n\r\n  public GetNotificationsByID(userName: string):Observable<any>\r\n  {    \r\n      return this.httpsvc.get<Notification>(this.config.patientManagementAPI+\"/Patient/getnotifications?userName=\"+userName);\r\n  }\r\n\r\n  public SetIsSeenNotification(id:number):Observable<any>\r\n  {\r\n    console.log(\"service.SetIsSeenNotification() hits\");\r\n    // console.log(JSON.stringify(p));\r\n    let header = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n     });\r\n      return this.httpsvc.patch<any>(this.config.patientManagementAPI+\"/Patient/updatenotification?id=\"+id,{'headers':header});      \r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { UserManager, UserManagerSettings, User } from 'oidc-client';\r\nimport { BehaviorSubject } from 'rxjs'; \r\nimport { BaseService } from \"./base.service\";\r\nimport { ConfigService } from './config.service';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService  extends BaseService{\r\n\r\n  // Observable navItem source\r\n  private _authNavStatusSource = new BehaviorSubject<boolean>(false);\r\n  // Observable navItem stream\r\n  authNavStatus$ = this._authNavStatusSource.asObservable();\r\n\r\n  private manager = new UserManager(getClientSettings());\r\n  private user: User | null;\r\n  private username: string;\r\n  public userrole:string;\r\n  \r\n  constructor(private http: HttpClient, private configService: ConfigService) { \r\n    super();     \r\n    \r\n    this.manager.getUser().then(user => { \r\n      this.user = user;      \r\n      this._authNavStatusSource.next(this.isAuthenticated());\r\n    });\r\n  }\r\n  login() { \r\n    return this.manager.signinRedirect();   \r\n  }\r\n\r\n  async completeAuthentication() {\r\n      this.user = await this.manager.signinRedirectCallback();\r\n      this._authNavStatusSource.next(this.isAuthenticated());\r\n      this.username = this.name;\r\n  }  \r\n\r\n  register(userRegistration: any) {   \r\n    console.log(userRegistration); \r\n    return this.http.post(this.configService.authApiURI + '/account', userRegistration).pipe(catchError(this.handleError));\r\n  }\r\n  changePassword(userModel: any,token:string){\r\n    console.log(userModel);\r\n    return this.http.post(this.configService.authApiURI + '/modify', userModel).pipe(catchError(this.handleError));\r\n  }\r\n  getUserRole(name:any){\r\n    return this.http.post(this.configService.authApiURI + '/information', {username:name}).pipe(catchError(this.handleError));\r\n  }\r\n  isAuthenticated(): boolean {\r\n    return this.user != null && !this.user.expired;\r\n  }\r\n\r\n  get authorizationHeaderValue(): string {\r\n    return `${this.user.token_type} ${this.user.access_token}`;\r\n  }\r\n\r\n  get name(): string {\r\n    return this.user != null ? this.user.profile.name : '';\r\n  }\r\n  get email(): string{\r\n    return this.user !=null ? this.user.profile.email:'';\r\n  }\r\n  get role(): string{\r\n    return this.user !=null ? this.userrole:'';\r\n  }\r\n\r\n  async signout() {\r\n    await this.manager.signoutRedirect();\r\n  }\r\n}\r\nexport function getClientSettings(): UserManagerSettings {\r\n  return {\r\n      authority: 'http://mircok8sserver.eastus.cloudapp.azure.com:30000',\r\n      client_id: 'angular_spa',\r\n      redirect_uri: 'http://mircok8sserver.eastus.cloudapp.azure.com:4200/auth-callback',\r\n      post_logout_redirect_uri: 'http://mircok8sserver.eastus.cloudapp.azure.com:4200/',\r\n      response_type:\"id_token token\",\r\n      scope:\"openid profile email api.read\",\r\n      filterProtocolClaims: true,\r\n      loadUserInfo: true,\r\n      automaticSilentRenew: true,\r\n      silent_redirect_uri: 'http://mircok8sserver.eastus.cloudapp.azure.com:4200/silent-refresh.html'\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n  constructor() { }\r\n  get authApiURI() {\r\n    return 'http://mircok8sserver.eastus.cloudapp.azure.com:30000/api';\r\n  }    \r\n \r\n  get resourceApiURI() {\r\n    return 'http://mircok8sserver.eastus.cloudapp.azure.com:61006/api';\r\n  }\r\n  get tempResourseAPI(){\r\n    return 'http://40.87.98.225:3000';\r\n  }\r\n  get patientManagementAPI(){\r\n    return 'http://40.87.98.225:54877/api';\r\n  }\r\n  get scheduleManagementAPI(){\r\n    return 'http://40.87.98.225:56207/api';\r\n  }\r\n}\r\n\r\n","export enum Roles{\r\n    admin=\"Admin\",\r\n    patient=\"Patient\",\r\n    doctor=\"Doctor\",\r\n    nurse = \"Nurse\"\r\n}\r\nexport enum Genders{\r\n    M=\"Male\",\r\n    F=\"Female\",\r\n    O=\"Others\"\r\n}\r\n\r\nexport enum UserType{\r\n    D=\"Doctor\",\r\n    N=\"Nurse\"\r\n}\r\nexport enum Title{\r\n    Mr=\"Mr.\",\r\n    Ms=\"Ms.\",\r\n    Mrs=\"Mrs.\",\r\n    Miss=\"Miss\"\r\n}\r\n","import { Component,Input, OnInit,Output,EventEmitter } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FormGroup} from '@angular/forms';\r\nimport { FormControl} from '@angular/forms';\r\nimport { Validators} from '@angular/forms';\r\nimport { Register } from '../../models/registerModel';\r\nimport { RegisterService } from '../../service/register.service';\r\nimport { DoctorServiceService } from 'src/app/Service/doctor-service.service';\r\nimport { Doctors } from 'src/app/Models/Doctor';\r\nimport { Nurse } from 'src/app/Models/nurseModel';\r\nimport { Doctor } from 'src/app/models/doctorModel';\r\nimport { ToasterPosition } from 'src/app/core/ToasterPosition';\r\nimport {ToasterService} from '../../core/ToasterService';\r\nimport { Title } from '../../core/dropdownmaster.service';\r\nimport { Genders } from '../../core/dropdownmaster.service';\r\nimport { Router } from '@angular/router';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { isNullOrUndefined } from 'util';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  \r\n  public ob :Observable<string>;\r\n  public obnr:Observable<Nurse[]>;\r\n  public obdr:Observable<Doctor[]>;\r\n  public nursedata: Nurse[]=[];\r\n  public doctordata: Doctor[]=[];\r\n  public RegisterUser;\r\n  success: boolean;\r\n  msg:string=\"\";\r\n  fullname:string =\"\";\r\n  titles:any;\r\n  genders:any;\r\n  @Input()  nrId:number;\r\n  @Input()  drId:number;\r\n  @Input()  pRole:string;\r\n  @Input() userrole:string; \r\n  res: any;\r\n  message:any;\r\n  @Output() messageEvent = new EventEmitter<string>();\r\n  @Output(\"parentFun\") parentFun: EventEmitter<any> = new EventEmitter();\r\n  fg: FormGroup = new FormGroup({\r\n    title: new FormControl('',Validators.required),\r\n    firstname: new FormControl('',Validators.required),\r\n    lastname: new FormControl('',Validators.required),\r\n    email: new FormControl(null,[Validators.required,Validators.email]),\r\n    dob: new FormControl('',Validators.required),\r\n    role : new FormControl('',Validators.required),\r\n    contactno : new FormControl('',Validators.required),\r\n    address : new FormControl('',Validators.required),\r\n    speciality : new FormControl(''), \r\n    gender: new FormControl('',[Validators.required])\r\n  });\r\n  constructor(private registersvc: RegisterService,private toaster:ToasterService,private router:Router, private spinner: NgxSpinnerService) { }\r\n  public SavePractitionerData(): void\r\n  {\r\n      let operation:string = \"\";\r\n      //this.fg.value.role = this.userrole;\r\n      console.log()\r\n      this.fullname = this.fg.value.firstname +' '+ this.fg.value.lastname;\r\n      this.RegisterUser = new Register(this.fg.value.title,\r\n                              this.fg.value.firstname,\r\n                              this.fg.value.lastname,\r\n                              this.fg.value.email,\r\n                              this.fg.value.dob,\r\n                              this.fg.value.role,\r\n                              this.fullname,\r\n                              this.fg.value.contactno,\r\n                              this.fg.value.address,\r\n                              this.fg.value.speciality,'Active','No','',\r\n                              this.fg.value.gender);\r\n\r\n      debugger;\r\n      if(this.nursedata.length > 0 || this.doctordata.length > 0)\r\n      {\r\n          operation=\"PATCH\";\r\n          if(this.nursedata.length>0)\r\n            this.RegisterUser.id=this.nursedata[0].id;\r\n          else\r\n            this.RegisterUser.id=this.doctordata[0].id;\r\n      }\r\n      else{\r\n        operation=\"POST\";\r\n      }     \r\n\r\n      if(this.fg.invalid==false)\r\n      { \r\n        this.spinner.show();\r\n        console.log(this.RegisterUser);\r\n        this.ob = this.registersvc.SaveUserRegiterDatas(this.RegisterUser,operation)\r\n        if(operation == \"POST\")\r\n          operation=\"registered\";\r\n        else\r\n          operation=\"updated\"\r\n        this.ob.pipe(finalize(() => {\r\n          this.spinner.hide();\r\n        })).subscribe(\r\n          data => { \r\n            this.success = true;\r\n            this.res = data;\r\n            if(this.res.code==\"1\"){ \r\n            this.success=true;\r\n            this.message = this.res.code;\r\n            this.sendMessage();\r\n            this.toaster.success(\"Success\",\"Registered successfully\",ToasterPosition.topFull);\r\n            }\r\n            else{\r\n              this.toaster.error(\"Error\",this.res.response,ToasterPosition.topFull);\r\n            }\r\n            //this.toaster.success(\"Success\",data[\"role\"]+\" \"+data[\"firstname\"]+\" \"+data[\"lastname\"]+\" has \"+operation+\" successfully.\",ToasterPosition.topFull,this.functioncallbackFunction) \r\n          },\r\n          (error: any) => this.toaster.error(\"Error\",\"Error in saving data: \"+error, ToasterPosition.topFull)\r\n          );\r\n    }\r\n}\r\n\r\ngetToday(): string {\r\n  return new Date().toISOString().split('T')[0];\r\n}\r\nloadNrData(nrId:number)\r\n {\r\n   console.log('LoadData'+this.nrId);\r\n  this.obnr=this.registersvc.GetNurseJsonDatasByID(this.nrId);\r\n  this.obnr.subscribe(\r\n    (dr:Nurse[])=>{this.nursedata=dr;console.log(this.nursedata)\r\n      console.log(this.nursedata[0])\r\n    this.fg.patchValue({\r\n      \"title\": this.nursedata[0].title,\r\n      \"firstname\": this.nursedata[0].firstname,\r\n      \"lastname\": this.nursedata[0].lastname,\r\n      \"email\":this.nursedata[0].EmailID,\r\n      \"contactno\":this.nursedata[0].ContactNo,\r\n      \"address\":this.nursedata[0].Address,\r\n      \"speciality\":this.nursedata[0].Specialties,\r\n      \"dob\":this.nursedata[0].Date_of_Birth\r\n    })\r\n  },\r\n  (error:any)=>console.log('fails to load nurse data')\r\n  );\r\n }\r\n loadDrData(drId:number)\r\n {\r\n   console.log('LoadData'+this.drId);\r\n  this.obdr=this.registersvc.GetDoctorJsonDatasByID(this.drId);\r\n  this.obdr.subscribe(\r\n    (dr:Doctor[])=>{this.doctordata=dr;console.log(this.doctordata)\r\n      console.log(this.doctordata[0])\r\n    this.fg.patchValue({\r\n      \"title\": this.doctordata[0].title,\r\n      \"firstname\": this.doctordata[0].firstname,\r\n      \"lastname\": this.doctordata[0].lastname,\r\n      \"email\":this.doctordata[0].Email,\r\n      \"contactno\":this.doctordata[0].ContactNo,\r\n      \"address\":this.doctordata[0].Address,\r\n      \"speciality\":this.doctordata[0].Specialties,\r\n      \"dob\":this.doctordata[0].Date_of_Birth\r\n    })\r\n  },\r\n  (error:any)=>console.log('fails to load nurse data')\r\n  );\r\n }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.nrId+\"\"+this.drId);\r\n    if(this.drId==undefined && this.nrId==undefined){}\r\n    else if(this.nrId==undefined && this.drId!=undefined)\r\n      this.loadDrData(this.drId);\r\n    else if(this.nrId!=undefined && this.drId==undefined)\r\n      this.loadNrData(this.nrId);\r\n\r\n      if(this.router.url==\"/sharedwrapperhome/doctorsection\"){\r\n        this.fg.patchValue({\r\n          \"role\":\"Doctor\"\r\n        });\r\n      }else{\r\n        this.fg.patchValue({\r\n          \"role\":\"Nurse\"\r\n        });\r\n      }\r\n      this.titles= Object.entries(Title) ;\r\n      this.genders = Object.entries(Genders);\r\n    }\r\n  functioncallbackFunction(){\r\n    this.success=true;\r\n  }\r\n  sendMessage() {\r\n    //this.messageEvent.emit(this.message);\r\n    this.parentFun.emit();\r\n  }\r\n}\r\n","<h1 style=\"text-align: center;\">Practitioner Registration</h1>\r\n<div class=\"signup-form\">\r\n    <form class=\"form-group\" [formGroup]=\"fg\" (ngSubmit)=\"SavePractitionerData()\">\r\n        <h2>Register</h2>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-md-6\">\r\n                <label for=\"firstname\">First Name: <span class=\"asterisk\"> *</span></label>\r\n                <input type=\"text\" class=\"form-control\" name=\"firstname\" formControlName=\"firstname\">\r\n                <span class=\"asterisk\" *ngIf=\"fg.get('firstname').touched && fg.get('firstname').errors?.required\">FirstName is required!</span>\r\n            </div>\r\n            <div class=\"col-xs-6 form-group\" >\r\n                <label for=\"lastname\">Last Name: <span class=\"asterisk\"> *</span></label>\r\n                <input type=\"text\" class=\"form-control\" name=\"lastname\" formControlName=\"lastname\">\r\n                <span class=\"asterisk\" *ngIf=\"fg.get('lastname').touched && fg.get('lastname').errors?.required\">\r\n                    LastName is required!\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-sm-6\">\r\n                <label for=\"title\" class=\"sr-only\">Title<span class=\"asterisk\"> *</span></label>\r\n                <select id=\"title\" name=\"title\" class=\"form-control\" placeholder=\"Select role\" required formControlName=\"title\">\r\n                  <option disabled selected value=\"\">Select Title</option>\r\n                  <option *ngFor=\"let title of titles\" value={{title[0]}}>{{title[1]}}</option>\r\n                </select>\r\n                </div>\r\n                <div class=\"col-sm-6 form-group\">\r\n                    <label for=\"gender\" class=\"sr-only\">Gender<span class=\"asterisk\"> *</span></label>\r\n                    <select id=\"gender\" name=\"gender\" class=\"form-control\" placeholder=\"Select gender\" required formControlName=\"gender\">\r\n                      <option disabled selected value=\"\">Select Gender</option>\r\n                      <option *ngFor=\"let gender of genders\" value={{gender[0]}}>{{gender[1]}}</option>\r\n                    </select>\r\n                </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-md-6\">\r\n            <label for=\"email\">Email: <span class=\"asterisk\"> *</span></label>\r\n            <input type=\"email\" class=\"form-control\" name=\"email\" formControlName=\"email\">\r\n            <span class=\"asterisk\" *ngIf=\"fg.get('email').touched && fg.get('email').errors?.required\">\r\n                Email is required!\r\n            </span>\r\n            <span class=\"asterisk\" *ngIf=\"fg.get('email').touched && fg.get('email').errors?.email\">\r\n                Email is not valid!\r\n            </span>\r\n            </div>\r\n            <div class=\"form-group col-md-6\" *ngIf=\"this.fg.value.role=='Doctor'\">\r\n            <label for=\"speciality\">Speciality: <span class=\"asterisk\"> *</span></label>\r\n            <input type=\"text\" class=\"form-control\" name=\"speciality\" formControlName=\"speciality\">\r\n            <span class=\"asterisk\" *ngIf=\"fg.get('speciality').touched && fg.get('speciality').errors?.required\">\r\n                Speciality is required!\r\n            </span>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-xs-6 form-group\">\r\n                <label for=\"email\">DOB: <span class=\"asterisk\"> *</span></label>                    \r\n                <input type=\"date\" [max]=\"getToday()\" class=\"form-control\" name=\"dob\" formControlName=\"dob\">\r\n                <span class=\"asterisk\" *ngIf=\"fg.get('dob').touched && fg.get('dob').errors?.required\">\r\n                    DOB is required!\r\n                </span> \r\n            </div>\r\n            <div class=\"col-xs-6 form-group\" style=\"display: none;\">\r\n                <label for=\"role\">Role: </label><br />\r\n                <label class=\"radio-inline\"><input type=\"radio\" formControlName=\"role\" name=\"role\" value=\"Doctor\" checked>Doctor</label>\r\n                <label class=\"radio-inline\"><input type=\"radio\" formControlName=\"role\" name=\"role\" value=\"Nurse\">Nurse</label>\r\n            </div>\r\n            <div class=\"form-group col-md-6\">\r\n                <label for=\"contactno\">Contact No: <span class=\"asterisk\"> *</span></label>\r\n                <input type=\"text\" class=\"form-control\" name=\"contactno\" formControlName=\"contactno\">\r\n                <span class=\"asterisk\" *ngIf=\"fg.get('contactno').touched && fg.get('contactno').errors?.required\">\r\n                    contact no is required!\r\n                </span>            \r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-md-12\">\r\n                <label for=\"address\">Address: <span class=\"asterisk\"> *</span></label>\r\n                <input type=\"text\" class=\"form-control\" name=\"address\" formControlName=\"address\">\r\n                <span class=\"asterisk\" *ngIf=\"fg.get('address').touched && fg.get('address').errors?.required\">\r\n                    Address is required!\r\n                </span>            \r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <button id=\"btnSubmit\" class=\"btn\" [disabled]=\"!fg.valid\">Save</button>\r\n        </div>\r\n    </form>\r\n    <div>\r\n        <h1 style=\"color: red;\">{{msg}}</h1>\r\n    </div>\r\n    <!--<div class=\"text-center\">Already have an account? <a href=\"#\">Sign in</a></div>-->\r\n</div> \r\n","import { NgModule } from '@angular/core'\r\nimport { RouterModule,Routes } from '@angular/router';\r\nimport { IndexComponent } from './index/index.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n    { path: 'home', component: IndexComponent }\r\n    \r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n    providers: []\r\n  })\r\n  export class HomeRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ViewDataComponent } from './view-data/view-data.component';\r\nimport {SharedMaterialModule} from '../shared-material/shared-material.module';\r\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms'\r\nimport {SelectAutocompleteModule} from 'mat-select-autocomplete';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ViewDataComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedMaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SelectAutocompleteModule\r\n  ]\r\n})\r\nexport class PatientModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class Appointment{\r\n    constructor(      \r\n        public id: number=0,\r\n        public drname:string=\"\",\r\n        public patientname:string=\"\",\r\n        public date:string=\"\",\r\n        public fromtime:string=\"\",\r\n        public totime:string=\"\",\r\n        public drid:string=\"\",\r\n        public patientid:string=\"\",\r\n        public isApproved:boolean,\r\n        public reason:string=\"\",\r\n        public description:string=\"\",\r\n        public speciality:string=\"\"\r\n             )\r\n    {\r\n        \r\n    }\r\n\r\n  //   get Id() { return this.id };\r\n  //   set Id(data: number) { this.id = data };\r\n\r\n  // get Drname() { return this.drname };\r\n  // set Drname(data: string) { this.drname = data };\r\n\r\n  // get Patientname() { return this.patientname };\r\n  // set Patientname(data: string) { this.patientname = data };\r\n\r\n  // get Date() { return this.date };\r\n  // set Date(data: string) { this.date = data };\r\n\r\n  // get Fromtime() { return this.fromtime };\r\n  // set Fromtime(data: string) { this.fromtime = data };\r\n\r\n  // get Totime() { return this.totime };\r\n  // set Totime(data: string) { this.totime = data };\r\n\r\n  // get Drid() { return this.drid };\r\n  // set Drid(data: string) { this.drid = data };\r\n\r\n  // get Patientid() { return this.patientid };\r\n  // set Patientid(data: string) { this.patientid = data };\r\n\r\n  // get IsApproved() { return this.isApproved };\r\n  // set IsApproved(data: boolean) { this.isApproved = data };\r\n\r\n  // get Reason() { return this.reason };\r\n  // set Reason(data: string) { this.reason = data };\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PatientVisitNurseComponent } from './patient-visit-nurse/patient-visit-nurse.component';\r\nimport { PatientVisitDoctorComponent } from './patient-visit-doctor/patient-visit-doctor.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n\r\n@NgModule({\r\n  declarations: [PatientVisitNurseComponent, PatientVisitDoctorComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  exports:[PatientVisitNurseComponent,PatientVisitDoctorComponent]\r\n})\r\nexport class PatientVisitModule { }\r\n","import { Component, OnInit, CUSTOM_ELEMENTS_SCHEMA, Injectable} from '@angular/core';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport * as data from '../../../assets/jsonData/AllUserdata.json';\r\nimport { RegisterService } from '../../service/register.service';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { Doctor } from '../../models/doctorModel';\r\nimport { Observable } from 'rxjs';\r\nimport { NgModel } from '@angular/forms';\r\nimport { ToasterPosition } from 'src/app/core/ToasterPosition';\r\nimport {ToasterService} from '../../core/ToasterService';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-doctor-section',\r\n  templateUrl: './doctor-section.component.html',\r\n  styleUrls: ['./doctor-section.component.css'],\r\n  providers: [NgbModalConfig, NgbModal]\r\n})\r\nexport class DoctorSectionComponent implements OnInit {\r\n  value = '';\r\n  // closeResult = '';\r\n  private UserData: any;\r\n  private DeleteUserData: any;\r\n  public ob :Observable<Doctor[]>;\r\n  public regiterData;\r\n  msg:any;\r\n  public dataSourceDoctor: any;  \r\n  public DoctorData: Doctor[]= [];\r\n  public dataSourceDoctorData: Doctor[]= [];\r\n  public DrIdToUpdate:number; \r\n  success: boolean;\r\n  message:string;\r\n\r\n  receiveMessage($event) {\r\n    this.message = $event;\r\n    this.modalService.dismissAll();\r\n    this.Getjson();\r\n    \r\n  }\r\n  parentFun(){\r\n    alert(\"Called\");\r\n  }\r\n  displayedColumns = [\r\n                      'DrID',\r\n                      'FullName',\r\n                      'Date_of_Birth',\r\n                      'EmailID',\r\n                      'ContactNo',\r\n                      'Address',\r\n                      'Specialties',\r\n                      'Status',\r\n                      'Blocked_Unblocked',\r\n                      'View_Edit_Delete'\r\n                     ]; \r\n  // Ng Pop Up Model\r\n  constructor(config: NgbModalConfig, private modalService: NgbModal, private registerService: RegisterService,private toaster:ToasterService,private router: Router,private spinner:NgxSpinnerService)\r\n  {\r\n    //modals used by this component\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n  }\r\n // Get all details function\r\n public Getjson(id?:number):void\r\n {     \r\n     this.ob = this.registerService.GetDoctorJsonDatas()\r\n     this.ob.subscribe(\r\n     data => { \r\n     console.log(\"Output\");\r\n     console.log(data);\r\n     this.DoctorData = data;\r\n     this.dataSourceDoctorData = data;\r\n     },\r\n     (error: any) => console.log(\"Error in saving regiter data\")\r\n     );\r\n     this.dataSourceDoctor = new MatTableDataSource(this.DoctorData);\r\n     console.log(\"Data Source: \"+this.DoctorData);      \r\n }\r\n  // View by Id function\r\n  public GetdataById(id: number)\r\n  {\r\n    this.ob = this.registerService.GetDoctorJsonDatasByID(id)\r\n    this.ob.subscribe(\r\n    data => {this.UserData= data;});\r\n    // console.log(\"USerdata : \"+this.UserData.id);\r\n  }\r\n  // Delete by Id function\r\n  public DeletedataById(id: number)\r\n  {\r\n    this.ob = this.registerService.DeleteDoctorJsonDatasByID(id)\r\n    this.ob.subscribe(\r\n    data => {this.DeleteUserData= data;});\r\n    console.log(\"DeleteUserData : \"+this.DeleteUserData.id);\r\n  }\r\n  applyFilter()\r\n  {\r\n    debugger;\r\n    console.log(this.value);\r\n\r\n    if(this.value!='')\r\n    {\r\n    this.dataSourceDoctorData=this.DoctorData.filter(p => p.FullName.includes(this.value));\r\n    }\r\n    else\r\n    {\r\n    this.dataSourceDoctorData=this.DoctorData;\r\n    }\r\n    console.log(this.DoctorData);    \r\n  }\r\n  // Ng Pop Up Model\r\n  open(content)\r\n  { // Ng Pop Up Model \r\n    this.spinner.show();\r\n    this.modalService.open(content,{ size:'xl',centered:true,scrollable:true});\r\n    this.spinner.hide();\r\n  }\r\n\r\n  Viewopen(Viewcontent, id?:number)\r\n  { // Ng Pop Up Model       \r\n    this.modalService.open(Viewcontent,{ size:'md',centered:true,scrollable:false});  \r\n    this.GetdataById(id);\r\n  }\r\n  Deleteopen(Deletecontent, id?:number)\r\n  { // Ng Pop Up Model       \r\n    this.modalService.open(Deletecontent,{ size:'md',centered:true,scrollable:true});\r\n    this.GetdataById(id);\r\n    // this.DeletedataById(id);\r\n  }\r\n  Editopen(Editcontent, selectedDrId?:number)\r\n  {\r\n    console.log(selectedDrId);\r\n    this.modalService.open(Editcontent,{ size:'xl',centered:true,scrollable:true});  \r\n    this.DrIdToUpdate=selectedDrId;  \r\n    // this.GetdataById(id);\r\n  }\r\n  // getToday(): string\r\n  // {\r\n  //    return new Date().toISOString().split('T')[0];\r\n  // }\r\n  ngOnInit(): void\r\n  {\r\n    this.Getjson();\r\n  }\r\n  SoftDeleteDoctorData(doctorId:Number): void\r\n  {\r\n    debugger;\r\n    this.modalService.dismissAll();\r\n    console.log(\"ts.SoftDeleteDoctorData() hits\");    \r\n   let obj:any={};\r\n   obj.id=doctorId,\r\n   obj.Status=\"InActive\";\r\n   \r\n    this.ob =this.registerService.SoftDeleteDoctorData(obj)\r\n  \r\n    this.ob.subscribe(\r\n      dataa => { \r\n        console.log(dataa);   \r\n        if(data !=null)\r\n        {\r\n         this.success = true;\r\n         this.toaster.success(\"Success\",\"Doctor with Id: \"+doctorId+\" Deleted.\",ToasterPosition.topFull,this.functioncallbackFunction)   \r\n        }\r\n       },\r\n      (error: any) => console.log(\"Error in deleting doctor data\")\r\n    );\r\n    }\r\n    functioncallbackFunction(){\r\n      this.success=true;\r\n    }\r\n\r\n}","<div class=\"divclass\">\r\n    <div class=\"form-group\">\r\n      <table class=\"mat-elevation-z8\" [ngClass]=\"{'btnCenter': true}\">\r\n          <th>\r\n            <mat-form-field class=\"example-form-field\">\r\n              <!-- <mat-label>Search Block/UnBlock</mat-label> -->\r\n              <input matInput type=\"text\" [(ngModel)]=\"value\" (keyup)=\"applyFilter()\" placeholder=\"Search here...\">\r\n            </mat-form-field>\r\n          <!-- </th>\r\n          <th> -->\r\n            <button class=\"btn\" style=\"float: right;\" (click)=\"open(content)\" [ngClass]=\"{'bgColorAdd': true}\" ><mat-icon width=\"100%\" height=\"100%\">person_add</mat-icon></button>\r\n            <!-- <button class=\"btn\" style=\"float: right\" (click)=\"open(content)\" [ngClass]=\"{'bgColorAdd': true}\" ><img class=\"img-circle\" src=\"../../../assets/images/Img_adduser.png\" alt=\"\" width=\"100%\" height=\"100%\"></button> -->\r\n          </th>\r\n      </table>\r\n    </div>\r\n    <div class=\"form-group\">\r\n    <table mat-table [dataSource]=\"dataSourceDoctorData\" class=\"mat-elevation-z8\" [ngClass]=\"{'Tableclass': true}\">\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->          \r\n        <!-- DrID Column -->\r\n        <ng-container matColumnDef=\"DrID\">\r\n          <th mat-cell mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Doctor ID. </th>\r\n          <td *matCellDef=\"let element\"> {{element.id}} </td>\r\n        </ng-container>  \r\n        <!-- FullName Column -->\r\n        <ng-container matColumnDef=\"FullName\">\r\n          <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Full Name </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.FullName}} </td>\r\n        </ng-container>  \r\n        <!-- Date_of_Birth Column -->\r\n        <ng-container matColumnDef=\"Date_of_Birth\">\r\n          <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Date of Birth </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.Date_of_Birth}} </td>\r\n        </ng-container>  \r\n        <!-- EmailID Column -->\r\n        <ng-container matColumnDef=\"EmailID\">\r\n          <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> EmailID </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.EmailID}} </td>\r\n        </ng-container> \r\n        <!-- ContactNo Column -->\r\n        <ng-container matColumnDef=\"ContactNo\">\r\n          <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> ContactNo </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.ContactNo}} </td>\r\n        </ng-container>  \r\n        <!-- Address Column -->\r\n        <ng-container matColumnDef=\"Address\">\r\n          <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Address </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.Address}} </td>\r\n        </ng-container>  \r\n        <!-- Specialties Column -->\r\n        <ng-container matColumnDef=\"Specialties\">\r\n          <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Specialties </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.Specialties}} </td>\r\n        </ng-container>\r\n        <!-- Status Column -->\r\n        <ng-container matColumnDef=\"Status\">\r\n          <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Status </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.Status}} </td>\r\n        </ng-container>\r\n        <!-- Blocked_Unblocked Column -->\r\n        <ng-container matColumnDef=\"Blocked_Unblocked\">\r\n          <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Is Locked </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.Blocked_Unblocked}} </td>\r\n        </ng-container>\r\n        <!-- View/Edit/Delete Column -->\r\n        <ng-container matColumnDef=\"View_Edit_Delete\">\r\n          <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Actions </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n              <button class=\"btn\" (click)=\"Viewopen(Viewcontent,element.id )\" [ngClass]=\"{'bgColor': true}\" style=\"color: #0047AB;\" title=\"View\"><mat-icon>visibility</mat-icon></button>\r\n              <button class=\"btn\" (click)=\"Editopen(Editcontent,element.id )\" [ngClass]=\"{'bgColor': true}\" style=\"color: #0047AB;\" title=\"Edit\"><mat-icon>edit</mat-icon></button>\r\n              <button class=\"btn\" (click)=\"Deleteopen(Deletecontent,element.id )\" [ngClass]=\"{'bgColor': true}\" style=\"color: #0047AB;\" title=\"Delete\"><mat-icon>delete</mat-icon></button>\r\n          </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row (click)=\"getRecord()\" *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </div>   \r\n    <mat-paginator [length]=\"100\"\r\n    [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 25, 100]\" style=\"color: #0047AB; font-size: small;\">\r\n    </mat-paginator>\r\n\r\n</div>\r\n\r\n\r\n<div class=\"modalTagReg\">\r\n  <!-- Register PopUp -->\r\n  <ng-template #content let-c=\"close\" let-d=\"dismiss\" >    \r\n    <!-- <div class=\"modal-body\" [ngClass]=\"{'ModelPopUpClass': true}\"> -->\r\n      <div class=\"modal-body\" >\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times; &nbsp;</span>\r\n      </button>\r\n      <app-register (parentFun)=\"receiveMessage()\" [userrole]=\"Doctor\" ></app-register>\r\n     </div> \r\n  </ng-template>\r\n  <!-- Register PopUp -->\r\n\r\n <!-- View By ID PopUp -->\r\n <ng-template #Viewcontent let-modal>\r\n  <div class=\"modal-header\" *ngIf=\"UserData\">\r\n    <!-- <h4 class=\"modal-title\" id=\"modal-basic-title\">Profile update</h4> -->\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\" *ngFor=\"let item of UserData\">\r\n    <h1 style=\"text-align: left;\">User id:  {{item.id}} </h1>\r\n    <!-- <form *ngFor=\"let item of dataSourceDoctorData\" [(ngModel)]=\"dataSourceDoctorData\"> -->\r\n      <form >    \r\n        <div class=\"main main-raised\" >\r\n          <div class=\"profile-content\">\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 ml-auto mr-auto\">\r\n                  <div class=\"profile\">\r\n                    <div class=\"avatar\">\r\n                      <img src=\"../../../assets/images/UserProfileIcon.webp\" alt=\"Circle Image\" class=\"img-raised rounded-circle\" [ngClass]=\"{'person_pin': true}\">\r\n                    </div>\r\n                    <div class=\"avatar\">\r\n                      <table style=\"margin:auto; font-family: arial, sans-serif;border-collapse: collapse; width: 100%;\" [ngClass]=\"{'ViewPoptable': true}\">\r\n                        <tr>\r\n                          <th>Full Name</th>\r\n                          <th><h3 class=\"title\">{{item.FullName}}</h3></th>                          \r\n                        </tr>\r\n                        <tr>\r\n                          <th>Specialties</th>\r\n                          <td><h3>{{item.Specialties}}</h3></td>\r\n                        </tr>\r\n                        </table>\r\n                    </div>                   \r\n                  </div>\r\n                  <div class=\"name\">                      \r\n                    <!-- <hr/> -->\r\n                    <table class=\"table table-hover\" style=\"font-family: arial, sans-serif;border-collapse: collapse; width: 100%;\" [ngClass]=\"{'ViewPoptable': true}\">\r\n                      <tr>\r\n                        <td>Date of Birth</td>\r\n                        <td>{{item.Date_of_Birth}}</td>                          \r\n                      </tr>\r\n                      <tr>\r\n                        <td>Email Id</td>\r\n                        <td>{{item.EmailID}}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Phone No.</td>\r\n                        <td>{{item.ContactNo}}g</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Address</td>\r\n                        <td>{{item.Address}}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Status</td>\r\n                        <td>{{item.Status}}</td>\r\n                      </tr>                        \r\n                    </table>                    \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- <div class=\"description text-center\">\r\n                <p>An artist of considerable range, Chet Faker — the name taken by Melbourne-raised, Brooklyn-based Nick Murphy — writes, performs and records all of his own music, giving it a warm, intimate feel with a solid groove structure. </p>\r\n              </div> -->\r\n              <!-- <div class=\"row\">\r\n                <div class=\"col-md-6 ml-auto mr-auto\">\r\n                  <div class=\"profile-tabs\">\r\n                    <ul class=\"nav nav-pills nav-pills-icons justify-content-center\" role=\"tablist\">\r\n                    <li class=\"nav-item\">\r\n                      <a class=\"nav-link active\" href=\"#studio\" role=\"tab\" data-toggle=\"tab\">\r\n                        <i class=\"material-icons\">camera</i>\r\n                        Studio\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                      <a class=\"nav-link\" href=\"#works\" role=\"tab\" data-toggle=\"tab\">\r\n                        <i class=\"material-icons\">palette</i>\r\n                        Work\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                      <a class=\"nav-link\" href=\"#favorite\" role=\"tab\" data-toggle=\"tab\">\r\n                        <i class=\"material-icons\">favorite</i>\r\n                        Favorite\r\n                      </a>\r\n                    </li>\r\n                    </ul>\r\n                  </div>\r\n              </div>\r\n            </div>\t -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <!-- <button type=\"button\" class=\"btn btn-outline\" (click)=\"modal.close('Save click')\">Save</button> -->\r\n  </div>\r\n</ng-template>\r\n  <!-- View By ID PopUp -->\r\n\r\n  <!-- Edit By ID PopUp -->  \r\n  <ng-template #Editcontent let-c=\"close\" let-d=\"dismiss\" >    \r\n    <!-- <div class=\"modal-body\" [ngClass]=\"{'ModelPopUpClass': true}\"> -->\r\n      <div class=\"modal-body\" >\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times; &nbsp;</span>\r\n      </button>\r\n      <app-register [drId]=\"DrIdToUpdate\"></app-register>\r\n     </div> \r\n  </ng-template>\r\n  <!-- Edit By ID PopUp -->\r\n\r\n   <!-- Delete By ID PopUp -->  \r\n  <ng-template #Deletecontent let-modal>\r\n    <div class=\"modal-header\" *ngIf=\"UserData\">\r\n      <!-- <h4 class=\"modal-title\" id=\"modal-basic-title\">Profile update</h4> -->\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\" *ngFor=\"let item of UserData\">\r\n      <!-- <h1 style=\"text-align: left;\">User id: {{item.id}} is deleted</h1>        -->\r\n      <!-- <hr> -->\r\n      <h2>Are you sure you want to delete the user:</h2> <h3>{{item.FullName}}</h3>\r\n      <!-- <p>If delete click on delete or Cancel</p> -->\r\n    <!-- </div> -->\r\n    <!-- <button class=\"btn\" [ngClass]=\"{'bgColor': true}\" style=\"float: left;\" title=\"Delete\">Delete</button> -->\r\n    <div class=\"modal-footer\">\r\n      <!-- <button class=\"btn\" [ngClass]=\"{'bgColor': true}\" style=\"float: left;\" title=\"Delete\">Delete</button> -->\r\n      <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"SoftDeleteDoctorData(item.id)\" title=\"Delete\">Delete</button>\r\n      <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"modal.close('Save click')\" title=\"Cancel\">Cancel</button>\r\n    </div>\r\n    </div>\r\n  </ng-template>\r\n  <!-- Delete By ID PopUp -->\r\n</div>","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Doctors} from '../Models/Doctor';\r\nimport { ConfigService } from '../core/config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorServiceService {\r\n\r\n  constructor(private httpsvc:HttpClient,private config:ConfigService) { }\r\n\r\n  public GetAllDoctors():Observable<any>\r\n  {\r\n    console.log('service.GetAllDoctors called');\r\n    return this.httpsvc.get<any>(this.config.scheduleManagementAPI+\"/Schedule/getalldoctors\");\r\n  }\r\n\r\n  public GetFilteredDoctors(filterStr:string):Observable<any>\r\n  {\r\n    console.log('service.GetAllDoctors called');\r\n    return this.httpsvc.get<any>(this.config.scheduleManagementAPI+\"/Schedule/getfiltereddoctors?\"+filterStr);\r\n  }\r\n\r\n  public GetDoctorDataById(id:number,userName:string):Observable<any>\r\n  {\r\n    debugger;\r\n    console.log('service.GetAllDoctors called');\r\n    return this.httpsvc.get<any>(this.config.scheduleManagementAPI+\"/Schedule/getappointment?doctorId=\"+id+\"&patientUserName=\"+userName);    \r\n  }\r\n}\r\n","import { FormControl,ValidatorFn } from '@angular/forms';\r\n\r\nexport function MatchPasswd(newpassword: string): ValidatorFn {\r\n    return (control: FormControl) => {\r\n        if (!control || !control.parent) {\r\n            return null;\r\n        }\r\n        return control.parent.get(newpassword).value === control.value ? null : { mismatch: true };\r\n    };\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../core/auth.service';\r\nimport {  finalize } from 'rxjs/operators'; \r\n\r\n\r\n@Component({\r\n  selector: 'app-inbox',\r\n  templateUrl: './inbox.component.html',\r\n  styleUrls: ['./inbox.component.css']\r\n})\r\nexport class InboxComponent implements OnInit {\r\n\r\n  constructor(private authService:AuthService) { }\r\n  res:any;\r\n  todaydate:any;\r\n  day2:Date;\r\n  day3:any;\r\n  day4:any;\r\n  day5:any;\r\n  day6:any;\r\n  day7:any;\r\n  role: string;\r\n  ngOnInit(): void {\r\n    //this.role = this.authService.role;\r\n    //let dateFormat = require('dateformat');\r\n    var dt = new Date();\r\n    this.todaydate = new Date();\r\n    this.day2 = new Date(dt);\r\n    this.day2.setDate(this.day2.getDate()+1)\r\n    \r\n    this.day3 = new Date(this.addDate(dt,2));\r\n    this.day4 = new Date(this.addDate(dt,3));\r\n    this.day5 = new Date(this.addDate(dt,4));\r\n\r\n    this.day6 = new Date(this.addDate(dt,5));\r\n    this.day7 = new Date(this.addDate(dt,6));\r\n    //var res =dateFormat(now, \"dddd, mmmm dS, yyyy\");\r\n    \r\n    this.authService.getUserRole(this.authService.email)\r\n      .pipe(finalize(() => {\r\n      }))  \r\n      .subscribe(\r\n      result => {         \r\n         if(result) {\r\n            this.res = result;\r\n            //alert(this.res.role);\r\n            this.authService.userrole = this.res.role;\r\n            this.role = this.res.role;\r\n            console.log(\"Role: \"+this.role);\r\n         }\r\n      },\r\n      error => {\r\n      });\r\n    \r\n\r\n  }\r\n  addDate(dt:Date,days:number):Date{\r\n    var dn = new Date(dt);\r\n    dn.setDate(dn.getDate()+days);\r\n    return dn;\r\n  }\r\n\r\n}\r\n","<div class=\"\">\r\n<div *ngIf=\"this.role=='doctor'\" class=\"row allevent\">\r\n\r\n    <div class=\"square col\">\r\n    <p>{{todaydate | date}}</p>\r\n    <p class=\"accepted\">Rona Wilson, Fever, 8:30 AM</p>\r\n    <p class=\"accepted\">Elliot Alderson, Headache, 9:30 AM</p>\r\n    <!-- <p class=\"accepted\">Philip Price, Post Surgery, 10:30 AM</p> -->\r\n    </div>\r\n<div class=\"square col\">\r\n    <p>{{ day2 | date}}</p>\r\n    <p class=\"accepted\">Angella Moss, Fever, 8:30 AM</p>\r\n    <p class=\"accepted\">Elliot Alderson, Headache, 9:30 AM</p>\r\n    <!-- <p class=\"accepted\">Philip Price, Post Surgery, 10:30 AM</p> -->\r\n</div>\r\n<div class=\"square col\">\r\n    <p>{{ day3 | date}}</p>\r\n    <!-- <p class=\"accepted\">Angella Moss, Fever, 8:30 AM</p>\r\n    <p class=\"accepted\">Elliot Alderson, Headache, 9:30 AM</p>\r\n    <p class=\"accepted\">Philip Price, Post Surgery, 10:30 AM</p> -->\r\n</div>\r\n<div class=\"square col\">\r\n    <p>{{ day4 | date}}</p>\r\n    <!-- <p class=\"accepted\">Angella Moss, Fever, 8:30 AM</p>\r\n    <p class=\"accepted\">Elliot Alderson, Headache, 9:30 AM</p>\r\n    <p class=\"accepted\">Philip Price, Post Surgery, 10:30 AM</p> -->\r\n</div>\r\n</div>\r\n<div *ngIf=\"this.role=='doctor'\" class=\"row allevent\">\r\n    <div class=\"square col\">\r\n        <p>{{ day5 | date}}</p>\r\n    <!-- <p class=\"accepted\">Angella Moss, Fever, 8:30 AM</p>\r\n    <p class=\"accepted\">Elliot Alderson, Headache, 9:30 AM</p> -->\r\n    <p class=\"accepted\">Angella Moss, Post Surgery, 10:30 AM</p>\r\n    </div>\r\n    <div class=\"square col\">\r\n        <p>{{ day6 | date}}</p>\r\n    <!-- <p class=\"accepted\">Angella Moss, Fever, 8:30 AM</p> -->\r\n    <p class=\"accepted\">Elliot Alderson, Headache, 9:30 AM</p>\r\n    <!-- <p class=\"accepted\">Philip Price, Post Surgery, 10:30 AM</p> -->\r\n    </div>\r\n    <div class=\"square col\">\r\n        <p>{{ day7 | date}}</p>\r\n    <p class=\"accepted\">Rona Wilson, Fever, 8:30 AM</p>\r\n    <!-- <p class=\"accepted\">Elliot Alderson, Headache, 9:30 AM</p> -->\r\n    <!-- <p class=\"accepted\">Philip Price, Post Surgery, 10:30 AM</p> -->\r\n    </div>\r\n    <div class=\"col\"></div>\r\n    </div>\r\n\r\n\r\n    <div *ngIf=\"this.role=='patient'\" class=\"row allevent\">\r\n\r\n        <div class=\"square col\">\r\n        <p>{{todaydate | date}}</p>\r\n        <!-- <p class=\"accepted\">Angella Moss, Fever, 8:30 AM</p>\r\n        <p class=\"accepted\">Elliot Alderson, Headache, 9:30 AM</p>\r\n        <p class=\"accepted\">Philip Price, Post Surgery, 10:30 AM</p> -->\r\n        </div>\r\n    <div class=\"square col\">\r\n        <p>{{ day2 | date}}</p>\r\n        <p class=\"accepted\">Philip Price , Surgery: Appendectomy, 8:30 AM</p>\r\n        \r\n    </div>\r\n    <div class=\"square col\">\r\n        <p>{{ day3 | date}}</p>\r\n        <!-- <p class=\"accepted\">Angella Moss, Fever, 8:30 AM</p>\r\n        <p class=\"accepted\">Elliot Alderson, Headache, 9:30 AM</p>\r\n        <p class=\"accepted\">Philip Price, Post Surgery, 10:30 AM</p> -->\r\n    </div>\r\n    <div class=\"square col\">\r\n        <p>{{ day4 | date}}</p>\r\n \r\n    </div>\r\n    </div>\r\n    <div class=\"row allevent\" *ngIf=\"this.role=='patient'\"> \r\n        <div class=\"square col\">\r\n            <p>{{ day5 | date}}</p>\r\n        <!-- <p class=\"accepted\">Angella Moss, Fever, 8:30 AM</p>\r\n        <p class=\"accepted\">Elliot Alderson, Headache, 9:30 AM</p>\r\n        <p class=\"accepted\">Philip Price, Post Surgery, 10:30 AM</p> -->\r\n        <p class=\"accepted\">Philip Price, Post Surgery, 10:30 AM</p>\r\n\r\n        </div>\r\n        <div class=\"square col\">\r\n            <p>{{ day6 | date}}</p>\r\n        <!-- <p class=\"accepted\">Angella Moss, Fever, 8:30 AM</p>\r\n        <p class=\"accepted\">Elliot Alderson, Headache, 9:30 AM</p>\r\n        <p class=\"accepted\">Philip Price, Post Surgery, 10:30 AM</p> -->\r\n        </div>\r\n        <div class=\"square col\">\r\n            <p>{{ day7 | date}}</p>\r\n        <!-- <p class=\"accepted\">Angella Moss, Fever, 8:30 AM</p>\r\n        <p class=\"accepted\">Elliot Alderson, Headache, 9:30 AM</p>\r\n        <p class=\"accepted\">Philip Price, Post Surgery, 10:30 AM</p> -->\r\n        </div>\r\n        <div class=\"col\"></div>\r\n        </div>\r\n        \r\n</div>","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable, observable, pipe} from 'rxjs';\r\nimport {map, catchError} from 'rxjs/operators';\r\nimport {PatientDemographicData} from '../Models/PatientDemographicData';\r\nimport {PatientAllergy} from '../Models/PatientAllergy';\r\nimport { PatientVisit } from '../Models/patientvisit';\r\nimport {PatientDiagnosis} from '../Models/patientdiagnosis';\r\nimport {PatientProcedure} from '../Models/patientprocedure';\r\nimport {PatientMedication} from '../Models/patientmedication';\r\nimport {Patients} from '../models/Patient';\r\nimport { ConfigService } from '../core/config.service';\r\nimport { BaseService } from '../core/base.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatientService extends BaseService{\r\n\r\n  constructor(private httpsvc:HttpClient, private config:ConfigService) {\r\n    super();\r\n   }\r\n\r\n \r\n  public GetPatientAllergyDataByID(userName: string):Observable<any>\r\n  {\r\n      return this.httpsvc.get<PatientAllergy>(this.config.patientManagementAPI+\"/Patient/getallergy?userName=\"+userName);\r\n  }\r\n\r\n  // public GetPatientDemographicDataByID(PatientID: number):Observable<any>\r\n  // {\r\n  //     return this.httpsvc.get<PatientDemographicData>(\"http://localhost:3000/DemographicData?patientid=\"+PatientID);\r\n  // }\r\n  public GetPatientDemographicDataByID(userName: string):Observable<any>\r\n  {\r\n    debugger;\r\n    const headers={'Access-Control-Allow-Origin':'http://localhost:54877',\r\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,OPTIONS'};\r\n       return this.httpsvc.get<PatientDemographicData>(this.config.patientManagementAPI+\"/Patient/getdemographic?userName=\"+userName);\r\n      // return this.httpsvc.get<PatientDemographicData>(\"https://localhost:44326/api/department\");\r\n  }\r\n\r\n\r\n  public GetPatientDataByID(userName: string):Observable<any>\r\n  {\r\n      return this.httpsvc.get<any>(this.config.patientManagementAPI+\"/Patient/getpatient?userName=\"+userName);\r\n  }\r\n\r\n  public GetAllergyMaster():Observable<any>\r\n  {\r\n      return this.httpsvc.get<any>(this.config.patientManagementAPI+\"/Patient/getallergydata\");\r\n  }\r\n\r\n  public SaveAllergyData(userName:string,pal:PatientAllergy):Observable<any>\r\n  {\r\n    console.log(\"service.SaveAllergyData() hits\");\r\n    //  const headers={'content-type':'application/json'};\r\n    let header = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n     });\r\n    if(userName != \"\")\r\n    {\r\n      return this.httpsvc.post<PatientAllergy>(this.config.patientManagementAPI+\"/Patient/addallergy?userName=\"+userName,JSON.stringify(pal),{headers:header}).pipe(catchError(this.handleError));\r\n    }\r\n  }\r\n\r\n  public SaveDemographicData(userName:string,pdgd:PatientDemographicData,operation:string):Observable<any>\r\n  {\r\n    debugger;\r\n    console.log(\"service.SaveAllergyData() hits\");\r\n    let header = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n     });\r\n    if(pdgd.patientid >= 0)\r\n    {      \r\n      if(operation===\"POST\")\r\n      return this.httpsvc.post<PatientDemographicData>(this.config.patientManagementAPI+\"/Patient/adddemographic?userName=\"+userName,JSON.stringify(pdgd),{'headers':header});\r\n      else\r\n      return this.httpsvc.patch<PatientDemographicData>(this.config.patientManagementAPI+\"/Patient/updatedemographic?userName=\"+userName,JSON.stringify(pdgd),{'headers':header});\r\n    }\r\n  }\r\n  public SavePatientVisitData(p:PatientVisit,operation:string):Observable<any>\r\n    {\r\n      console.log(\"service.SavePatientVisitData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n      if(operation===\"POST\")\r\n      {\r\n        return this.httpsvc.post<PatientVisit>(\"http://localhost:3000/PatientVisit\", JSON.stringify(p),{'headers':headers});      \r\n      }\r\n      else\r\n      {\r\n        debugger;\r\n        return this.httpsvc.patch<PatientVisit>(\"http://localhost:3000/PatientVisit/\"+p.id, JSON.stringify(p),{'headers':headers});      \r\n      }        \r\n    }\r\n    public SavePatientVisitAllergyData(p:PatientAllergy):Observable<any>\r\n    {\r\n      console.log(\"service.SavePatientVisitNurseData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n        return this.httpsvc.post<PatientAllergy>(\"http://localhost:3000/Allergy\", JSON.stringify(p),{'headers':headers});      \r\n    }\r\n    public SavePatientVisitDiagnosisData(p:PatientDiagnosis):Observable<any>\r\n    {\r\n      console.log(\"service.SavePatientVisitNurseData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n        return this.httpsvc.post<PatientDiagnosis>(\"http://localhost:3000/Diagnosis\", JSON.stringify(p),{'headers':headers});      \r\n    }\r\n    public SavePatientVisitProcedureData(p:PatientProcedure):Observable<any>\r\n    {\r\n      console.log(\"service.SavePatientVisitNurseData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n        return this.httpsvc.post<PatientProcedure>(\"http://localhost:3000/Procedure\", JSON.stringify(p),{'headers':headers});      \r\n    }\r\n    public SavePatientVisitMedicationData(p:PatientMedication):Observable<any>\r\n    {\r\n      console.log(\"service.SavePatientVisitNurseData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n        return this.httpsvc.post<PatientMedication>(\"http://localhost:3000/Medication\", JSON.stringify(p),{'headers':headers});      \r\n    }\r\n    public SavePatientData(p:Patients):Observable<any>\r\n    {\r\n      console.log(\"service.SavePatientData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n      if(p.email != \"\")\r\n      {\r\n        //return this.httpsvc.post<Patients>(\"http://localhost:3000/Patient\", JSON.stringify(p),{'headers':headers});\r\n        return this.httpsvc.post<Patients>(this.config.authApiURI+\"/patient\",p).pipe(catchError(this.handleError));\r\n      }\r\n    }\r\n    public GetPatientVisitDataByID(aID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientVisit>(\"http://localhost:3000/PatientVisit?appointmentid=\"+aID);\r\n    }\r\n    public GetPatientAllergyDataByPatientID(pID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientAllergy>(\"http://localhost:3000/Allergy?patientid=\"+pID);\r\n    }\r\n    public GetPatientDiagnosisDataByAppointmentID(aID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientDiagnosis>(\"http://localhost:3000/Diagnosis?appointmentid=\"+aID);\r\n    }\r\n    public GetPatientProcedureDataByAppointmentID(aID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientProcedure>(\"http://localhost:3000/Procedure?appointmentid=\"+aID);\r\n    }\r\n    public GetPatientMedicationDataByAppointmentID(aID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientMedication>(\"http://localhost:3000/Medication?appointmentid=\"+aID);\r\n    }    \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatTableModule} from '@angular/material/table';\r\n// import { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n// import {RegisterComponent} from '../../app/admin/register/register.component';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatPaginatorModule,\r\n    MatBadgeModule\r\n    // FormGroup,\r\n    // FormControl,\r\n    // Validators\r\n    // RegisterComponent\r\n  ],\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatPaginatorModule,\r\n    MatBadgeModule\r\n    // FormGroup,\r\n    // FormControl,\r\n    // Validators\r\n    // RegisterComponent\r\n  ]\r\n})\r\nexport class SharedMaterialModule { }\r\n","export class Patients{\r\n    constructor(\r\n        public firstname:string=\"\",\r\n        public lastname:string=\"\",\r\n        public dob:string=\"\",\r\n        public contact:string=\"\",\r\n        public email:string=\"\",\r\n        public password:string=\"\",        \r\n        public fullName:string =\"\",\r\n        public status:string = \"\" ,\r\n        public blocked_unblocked:string = \"\",\r\n        public title=\"\",\r\n        public gender=\"\",\r\n     )\r\n    {\r\n        \r\n    }\r\n\r\n\r\n  get FirstName() { return this.firstname };\r\n  set FirstName(address: string) { this.firstname = address };\r\n\r\n  get LastName() { return this.lastname };\r\n  set LastName(address: string) { this.lastname = address };\r\n\r\n  get DOB() { return this.dob };\r\n  set DOB(address: string) { this.dob = address };\r\n\r\n  get Contact() { return this.contact };\r\n  set Contact(address: string) { this.contact = address };\r\n\r\n  get Email() { return this.email };\r\n  set Email(address: string) { this.email = address };\r\n\r\n  get Password() { return this.password };\r\n  set Password(supplierName: string) { this.password = supplierName };\r\n\r\n  get FullName() { return this.fullName };\r\n  set FullName(supplierName: string) { this.fullName = supplierName };\r\n\r\n  get Status() { return this.status };\r\n  set Status(supplierName: string) { this.status = supplierName };\r\n\r\n  get Blocked_unblocked() { return this.blocked_unblocked };\r\n  set Blocked_unblocked(supplierName: string) { this.blocked_unblocked = supplierName };\r\n  \r\n  get Title() { return this.title };\r\n  set Title(supplierName: string) { this.title = supplierName };\r\n\r\n  get Gender() { return this.gender };\r\n  set Gender(supplierName: string) { this.gender = supplierName };\r\n\r\n}","import { Component,Input, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FormGroup} from '@angular/forms';\r\nimport { FormControl} from '@angular/forms';\r\nimport { Validators} from '@angular/forms';\r\nimport { Appointment } from '../../models/Appointment';\r\nimport { ToasterPosition } from 'src/app/core/ToasterPosition';\r\nimport {ToasterService} from '../../core/ToasterService';\r\nimport { AppointmentService } from 'src/app/Service/appointment.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-appointment-action',\r\n  templateUrl: './appointment-action.component.html',\r\n  styleUrls: ['./appointment-action.component.css']\r\n})\r\nexport class AppointmentActionComponent implements OnInit {\r\n\r\n  public Appointment;\r\n  public ob :Observable<Appointment[]>;\r\n  public obad :Observable<Appointment[]>;\r\n  success: boolean;\r\n  isApproved: boolean=false;\r\n  \r\n  public appointmentdata: Appointment[]=[];\r\n\r\n  fg: FormGroup = new FormGroup({    \r\n    appointmentaction : new FormControl('',Validators.required),\r\n    appointmentreason : new FormControl('',Validators.required) \r\n  });  \r\n  @Input()  aId:number;\r\n  @Input()  pId:number;  \r\n  @Input() drname:string;\r\n  @Input() patientname:string;\r\n  @Input() date:string;\r\n  @Input() fromtime:string;\r\n  @Input() totime:string;\r\n  @Input() drid:string;  \r\n\r\n  constructor(private appointmentsvc: AppointmentService,private toaster:ToasterService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadAppointmentActionData(this.aId);\r\n  }\r\n    public SaveAppointmentAction(): void\r\n    {     \r\n      debugger;  \r\n        if(this.fg.value.appointmentaction == \"Approved\")\r\n          this.isApproved=true;        \r\n        this.Appointment=new Appointment(this.aId,this.drname,this.patientname,this.date,this.fromtime,\r\n                                this.totime,this.drid,this.pId.toString(),this.isApproved,\r\n                                this.fg.value.appointmentreason);  \r\n                    \r\n        if(this.fg.invalid==false)\r\n        { \r\n          debugger;\r\n          console.log('Before hitting service');        \r\n          this.ob = this.appointmentsvc.SaveAppointmentActionData(this.Appointment)        \r\n          this.ob.subscribe(\r\n            data => { \r\n              console.log(data);      \r\n              console.log(\"Output Is: \"+data[\"firstname\"]); \r\n              this.success = true;\r\n              this.toaster.success(\"Success\",\"Appointment ID: \"+data[\"id\"]+\" is \"+this.fg.value.appointmentaction,ToasterPosition.topFull,this.functioncallbackFunction) \r\n              //this.msg = data[\"firstname\"]+ \", has Registered Successfully\" \r\n            },\r\n            (error: any) => console.log(\"Error in saving practitioner data\")\r\n            );\r\n      }\r\n  }\r\n  functioncallbackFunction(){\r\n    this.success=true;\r\n  }\r\n  public loadAppointmentActionData(aId:number)\r\n  {\r\n    console.log('LoadData'+this.aId);\r\n    debugger;\r\n   this.obad=this.appointmentsvc.GetAppointmentActionDataByAppointmentID(this.aId);\r\n   let appointmentaction:string=\"\";\r\n   this.obad.subscribe(\r\n     (pv:Appointment[])=>{this.appointmentdata=pv;console.log(this.appointmentdata[0]); debugger;\r\n      if(this.appointmentdata[0].isApproved==true)      \r\n        appointmentaction=\"Approved\";\r\n      else\r\n        appointmentaction = \"Rejected\";\r\n     this.fg.patchValue({\r\n       \"appointmentreason\": this.appointmentdata[0].reason,\r\n       \"appointmentaction\": appointmentaction,       \r\n     })\r\n   },\r\n   (error:any)=>console.log('fails to load nurse data')\r\n   );\r\n  }\r\n}\r\n","<div class=\"signup-form\">\r\n    <form class=\"form-group\" [formGroup]=\"fg\" (ngSubmit)=\"SaveAppointmentAction()\">\r\n        <h2>Appointment Action</h2>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"appointmentaction\">Action: </label><br />\r\n                    <label class=\"radio-inline\"><input type=\"radio\" formControlName=\"appointmentaction\" name=\"appointmentaction\" value=\"Approved\" checked>Approve</label>\r\n                    <label class=\"radio-inline\"><input type=\"radio\" formControlName=\"appointmentaction\" name=\"appointmentaction\" value=\"Rejected\">Reject</label>\r\n                </div>\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"appointmentreason\">Reason: <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"appointmentreason\" formControlName=\"appointmentreason\">\r\n                    <!-- <span class=\"asterisk\" *ngIf=\"fg.get('lastname').touched && fg.get('lastname').errors?.required\">\r\n                        LastName is required!\r\n                    </span> -->\r\n                </div>               \r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <button id=\"btnSubmit\" class=\"btn\">Save</button>\r\n        </div>\r\n    </form>\r\n</div>","<div *ngIf=\"error\" class=\"row justify-content-center\">\n    <div class=\"col-md-8 text-center\">\n          <div class=\"alert alert-warning\" role=\"alert\">\n            Oops, there was an error, please try to <a routerLink=\"/login\">login again</a>.\n            <br/>\n            Or <a routerLink=\"/patientregister\">register</a> to create a new account.  \n          </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute,Router } from '@angular/router'\nimport { AuthService } from '../core/auth.service';\n@Component({\n  selector: 'app-auth-callback',\n  templateUrl: './auth-callback.component.html',\n  styleUrls: ['./auth-callback.component.css']\n})\nexport class AuthCallbackComponent implements OnInit {\n\n  constructor(private authService: AuthService,private router: Router,private route:ActivatedRoute) { }\n  error :boolean;\n  async ngOnInit() {\n  // check for error\n  if (this.route.snapshot.fragment.indexOf('error') >= 0) {\n    this.error=true; \n    return;    \n  }\n \n await this.authService.completeAuthentication();      \n //this.router.navigate(['/home']); \n  console.log(\"sharedwrapper\");   \n   this.router.navigate(['/sharedwrapperhome']);    \n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseService {\n\n  constructor() { }\n  protected handleError(error: any) {\n\n    var applicationError = error.headers.get('Application-Error');\n\n    // either application-error in header or model error in body\n    if (applicationError) {\n      return throwError(applicationError);\n    }\n    \n    var modelStateErrors: string = '';\n\n      // for now just concatenate the error descriptions, alternative we could simply pass the entire error response upstream\n      for (var key in error.error) {\n        if (error.error[key]) modelStateErrors += error.error[key].description + '\\n'; \n      }\n      \n    modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\n    return throwError(modelStateErrors || 'Server error');\n    }\n  }\n","import {RouterModule} from '@angular/router'\r\nimport { UserloginComponent } from './login/userlogin/userlogin.component';\r\nimport {SharedWrapperComponent} from './shared-wrapper/shared-wrapper/shared-wrapper.component'\r\nimport { IndexComponent } from './home/index/index.component';\r\nimport { AuthCallbackComponent } from './auth-callback/auth-callback.component';\r\nimport { RegisterComponent } from './account/register/register.component';\r\nimport { ReloginComponent } from './relogin/relogin.component';\r\nimport { ChangePasswordComponent } from  './admin/change-password/change-password.component';\r\nconst appRoutes=[\r\n{ path: '', redirectTo: '/home', pathMatch: 'full'},\r\n{ path:'userlogin', component:UserloginComponent },\r\n{ path:'home', component:IndexComponent },\r\n{ path: 'auth-callback', component: AuthCallbackComponent},\r\n{ path:'sharedwrapperhome', component:SharedWrapperComponent },\r\n{ path: 'changepassword', component:ChangePasswordComponent },\r\n\r\n//shared-wrapper module\r\n{ path:'sharedwrapper', loadChildren:()=> import('./shared-wrapper/shared-wrapper.module').then(m=>m.SharedWrapperModule)},\r\n//shared-wrapper module\r\n{ path:'register',component:RegisterComponent },\r\n{ path: 'relogin/:msg', component:ReloginComponent },\r\n\r\n];\r\n\r\nexport default RouterModule.forRoot(appRoutes);","export class PatientProcedure{\r\n    constructor(              \r\n        public procedure:string=\"\",\r\n        public proceduredescription:string=\"\",\r\n        public patientid:string=\"\",\r\n        public appointmentid:string=\"\"\r\n     )\r\n    {}\r\n\r\n  get Procedure() { return this.procedure };\r\n  set Procedure(data: string) { this.procedure = data };\r\n\r\n  get Proceduredescription() { return this.proceduredescription };\r\n  set Proceduredescription(data: string) { this.proceduredescription = data };\r\n\r\n  get Patientid() { return this.patientid };\r\n  set Patientid(data: string) { this.patientid = data };\r\n  \r\n  get Appointmentid() { return this.appointmentid };\r\n  set Appointmentid(data: string) { this.appointmentid = data };\r\n}","export enum ToasterPosition {\r\n    topRight = 'toast-top-right',\r\n    topLeft = 'toast-top-left',\r\n    bottomRight = 'toast-bottom-right',\r\n    bottomLeft= 'toast-bottom-left',\r\n    topFull = 'toast-top-full-width',\r\n    // Other positions you would like\r\n  }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PMS';\n}\n","<div>\r\n<app-header></app-header>\r\n<ngx-spinner></ngx-spinner>\r\n\r\n  <router-outlet></router-outlet>\r\n  <!-- <main role=\"main\">\r\n    <div class=\"container\"> \r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    </main> -->\r\n    </div>\r\n    ","<mat-toolbar color=\"primary\" class=\"mat-elevation-z6\">\r\n    <span> PMS</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <button class=\"btn\" style=\"color: white;\" routerLink='/userlogin'><mat-icon style=\"vertical-align: middle;\">login</mat-icon> Login </button>\r\n    <!-- <button class=\"btn\" style=\"color: white;\" routerLink='/userlogin'>Login</button> -->\r\n    <nav *ngIf=\"isAuthenticated\" class=\"my-2 my-md-0 mr-md-3\">\r\n      <a class=\"p-2 text-light\" routerLink=\"/topsecret\">Authorized Section</a>  \r\n      <a class=\"p-2 text-light\" (click)=\"signout()\" href=\"javascript:void(0)\">Signout {{name}}</a>               \r\n   </nav>\r\n  </mat-toolbar>\r\n\r\n  <!-- <div class=\"d-flex justify-content-center\">\r\n    <div class=\"spinner-border\" role=\"status\" >\r\n      <span class=\"sr-only\" id=\"loading\"></span>\r\n    </div>\r\n  </div> -->\r\n","import { Component, OnInit,OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../core/auth.service'; \n \n@Component({\n  selector: 'app-headers',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n \n  name: string;\n  isAuthenticated: boolean;\n  subscription:Subscription;\n  \n  constructor(private authService:AuthService) { }\n  \n  async signout() {\n    await this.authService.signout();     \n  }\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.authService.authNavStatus$.subscribe(status => this.isAuthenticated = status);\n    this.name = this.authService.name;\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ScheduleComponent } from './schedule/schedule.component';\r\nimport { BookAppointmentComponent } from './book-appointment/book-appointment.component';\r\nimport {SharedMaterialModule} from '../shared-material/shared-material.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\r\nimport { ViewAppointmentsComponent } from './view-appointments/view-appointments.component'\r\nimport { PatientVisitModule } from '../../app/patient-visit/patient-visit.module';\r\nimport { AppointmentActionComponent } from './appointment-action/appointment-action.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ScheduleComponent, BookAppointmentComponent, ViewAppointmentsComponent, AppointmentActionComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedMaterialModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PatientVisitModule    \r\n  ]\r\n})\r\nexport class SchedulingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedWrapperComponent } from './shared-wrapper/shared-wrapper.component';\r\nimport { ToolbarComponent } from './toolbar/toolbar.component';\r\nimport { SharedMaterialModule } from '../shared-material/shared-material.module';\r\nimport sharedwrapperroutes from './shared-wrapper.routes';\r\nimport { LoaderComponent } from './loader/loader.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n@NgModule({\r\n  declarations: [SharedWrapperComponent, ToolbarComponent, LoaderComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedMaterialModule,\r\n    sharedwrapperroutes,\r\n    NgbModule\r\n  ]\r\n})\r\nexport class SharedWrapperModule { }\r\n","<div class=\"divclass\">\r\n    <!-- <fieldset>\r\n        <legend>Filter </legend> -->\r\n   <div class=\"form-group\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xl-3\">\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>City</mat-label>\r\n                <mat-select #cmbcity>\r\n                  <mat-option>None</mat-option>\r\n                  <mat-option *ngFor=\"let City of City\" [value]=\"City\">{{City}}</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n        <div class=\"col-xl-3\">\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Speciality</mat-label>\r\n                <mat-select #cmbspeciality>\r\n                  <mat-option>None</mat-option>\r\n                  <mat-option *ngFor=\"let speciality of speciality\" [value]=\"speciality\">{{speciality}}</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-3\">\r\n            <label for=\"role\">Gender: </label><br />\r\n            <mat-radio-group aria-label=\"Select an option\" (change)=\"onChange($event)\">\r\n              <mat-radio-button value=\"M\">Male</mat-radio-button>\r\n              <mat-radio-button value=\"F\">Female</mat-radio-button>\r\n            </mat-radio-group>\r\n        </div>\r\n        <div class=\"col-xl-3\">\r\n          <button class=\"btn btn-success\" style=\"float: center;\" (click)=\"GetFilterData()\">Search</button>\r\n       </div>\r\n    </div>\r\n   </div>\r\n \r\n<div class=\"divcard col-sm-12\">\r\n  <div style=\"padding-bottom: 15px;\" *ngFor=\"let dr of doctorsdata\">\r\n  <div class=\"card drcard\" >\r\n    <div class=\"card-body\">\r\n      <!-- <h1>Doctor Data {{dr.id}} \"{{dr.firstname}} {{dr.lastname}}\"</h1> -->\r\n<table class=\"col-sm-12\" style=\"width: 100%;\">\r\n  <tr>\r\n    <td class=\"cardcol1\"><h3>Name: Dr. {{dr.firstName}} {{dr.lastName}}</h3></td>\r\n    <td class=\"cardcol2\"><h3>City: {{dr.city}}</h3></td>\r\n    <td class=\"cardcol3\"></td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"cardcol1\"><h3>Contact: {{dr.phoneNo}}</h3></td>\r\n    <td class=\"cardcol2\"><h3>Speciality: {{dr.speciality}}</h3></td>\r\n    <td class=\"cardcol3\"></td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"cardcol1\"><h3>Email: {{dr.emailId}}</h3></td>\r\n    <td class=\"cardcol2\"><h3>Gender: {{dr.gender}}</h3></td>\r\n    <td class=\"cardcol3\"><button class=\"btn btn-success\" style=\"float: right;\" (click)=\"open(content,dr.id)\">Book Appointment</button></td>\r\n  </tr>\r\n</table>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n  <!-- <div class=\"appointment-model\" [ngClass]=\"{'ModelPopUpClass': true}\"> -->\r\n    <!-- <h4 class=\"modal-title\" id=\"modal-basic-title\">Create new doctor account</h4> -->\r\n    <div>\r\n    <button type=\"button\" class=\"close btn-close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times; &nbsp;</span>\r\n    </button>\r\n  </div>\r\n  <!-- </div> -->\r\n  <!-- <div class=\"modal-body\" [ngClass]=\"{'ModelPopUpClass': true}\" style=\"width: 800px;\"> -->\r\n    <app-book-appointment [drId]=\"drIdForAppointment\"></app-book-appointment>\r\n   <!-- </div>  -->\r\n</ng-template>","import { Component, OnInit,Input } from '@angular/core';\r\nimport { Observable, observable } from 'rxjs';\r\nimport { Doctors } from '../../models/Doctor';\r\nimport { DoctorServiceService } from '../../Service/doctor-service.service'\r\nimport { ViewChild } from '@angular/core';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-schedule',\r\n  templateUrl: './schedule.component.html',\r\n  styleUrls: ['./schedule.component.css']\r\n})\r\nexport class ScheduleComponent implements OnInit {\r\npublic ob:Observable<Doctors[]>;\r\n// public doctorsdata: Doctors[]=[];\r\npublic doctorsdata: any;\r\npublic doctorinfo:Doctors;\r\npublic filterStr:string=\"\";\r\npublic drIdForAppointment:number;\r\n\r\n@ViewChild('cmbcity')\r\n  public cmbcity: any;\r\n@ViewChild('cmbspeciality')\r\n  public cmbspeciality: any;\r\n public rbGender:string=\"\"; \r\n\r\n  City: string[] = [\r\n    'Mumbai', 'Thane', 'Kalyan', 'Andheri', 'Borivali','Dadar','Sion','Kurla','Ghatkopar','Mulund','Dombivli'\r\n    ,'Airoli','Turbhe','Belapur','Panvel','Bandra','Malad','Virar','Pawai' ];\r\n\r\n    speciality: string[] = [\r\n      'Allergist', 'Cardiologist', 'Dentist', 'Dermatologist', 'Gynecologist','Neurologist','Pediatrician','Psychiatrist' ];  \r\n\r\n  constructor(private doctorservice:DoctorServiceService,config: NgbModalConfig, \r\n    private modalService: NgbModal ) {\r\n //modals used by this component\r\n config.backdrop = 'static';\r\n config.keyboard = false;\r\n\r\n   }\r\n\r\npublic GetAllDoctor():void\r\n{\r\n  console.log('ts.GetAllDoctors called');\r\nthis.ob=this.doctorservice.GetAllDoctors();\r\nthis.ob.subscribe(\r\n  (dr:any)=>{\r\n    this.doctorsdata=dr;\r\n    console.log(this.doctorsdata)\r\n  },\r\n  (error:any)=>console.log('fails to load doctors data')\r\n  );\r\n}\r\n\r\nonChange(mrChange: any) {\r\n  this.rbGender=mrChange.value;\r\n}\r\n\r\npublic GetFilterData():void\r\n{\r\n// console.log(this.cmbcity.value);\r\n// console.log(this.cmbspeciality.value);\r\n// console.log(this.rbGender);\r\nthis.filterStr=\"\";\r\nif(typeof this.cmbcity.value!= 'undefined' || this.cmbcity.value)\r\n{\r\n  this.filterStr+=(typeof this.filterStr!='undefined' && this.filterStr)?(\"&city=\"+this.cmbcity.value):(\"city=\"+this.cmbcity.value);\r\n  //console.log(this.filterStr);\r\n}\r\nif(typeof this.cmbspeciality.value!= 'undefined' || this.cmbspeciality.value)\r\n{\r\n  this.filterStr+=(typeof this.filterStr!='undefined' && this.filterStr)?(\"&speciality=\"+this.cmbspeciality.value):(\"speciality=\"+this.cmbspeciality.value);\r\n  //console.log(this.filterStr);\r\n}\r\nif(this.rbGender!=\"\")\r\n{\r\n  this.filterStr+=(typeof this.filterStr!='undefined' && this.filterStr)?(\"&gender=\"+this.rbGender):(\"gender=\"+this.rbGender);\r\n  //console.log(this.filterStr);\r\n}\r\nconsole.log(this.filterStr);\r\n\r\nthis.ob=this.doctorservice.GetFilteredDoctors(this.filterStr);\r\nthis.ob.subscribe(\r\n  (dr:any)=>{this.doctorsdata=dr;console.log(this.doctorsdata)},\r\n  (error:any)=>console.log('fails to load doctors data')\r\n  );\r\n\r\n}\r\n\r\nopen(content,selectedDrId:number) { // Ng Pop Up Model \r\n  debugger;\r\n  this.modalService.open(content,{ size: 'xl',centered:true });\r\n  this.drIdForAppointment=selectedDrId;\r\n} \r\n\r\n  ngOnInit(): void {\r\n    this.GetAllDoctor();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable, observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Appointment} from '../Models/Appointment';\r\nimport { ConfigService } from '../core/config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentService {\r\n\r\n  constructor(private httpsvc:HttpClient,private config:ConfigService) { }\r\n\r\n  public SaveAppointment(a:Appointment):Observable<any>\r\n  {\r\n    console.log(\"service.SaveAppointment() hits\");\r\n    let header = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n     });\r\n    if(a.drid !=\"\")\r\n    {\r\n      return this.httpsvc.post<Appointment>(this.config.scheduleManagementAPI+\"/Schedule/bookappoinment\",JSON.stringify(a),{'headers':header});\r\n    }\r\n  }\r\n  public SaveAppointmentActionData(p:Appointment):Observable<any>\r\n    {\r\n      console.log(\"service.SavePatientVisitNurseData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n        return this.httpsvc.patch<Appointment>(\"http://localhost:3000/Appointment/\"+p.id, JSON.stringify(p),{'headers':headers});      \r\n    }\r\n    public GetAppointmentActionDataByAppointmentID(aID: number):Observable<any>\r\n    { \r\n        debugger;          \r\n        return this.httpsvc.get<any>(\"http://localhost:3000/Appointment?id=\"+aID);\r\n    }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserloginComponent } from './userlogin/userlogin.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './../core/auth.service';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserloginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NgxSpinnerModule\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","import { Component, OnInit, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\r\nimport * as data from 'jsonData/AllUserData.json'\r\nimport { RegisterService } from '../../service/register.service';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { Appointment } from '../../models/Appointment';\r\nimport { Observable } from 'rxjs';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {AfterViewInit, ViewChild} from '@angular/core';\r\nimport { AuthService } from '../../core/auth.service';\r\nimport { finalize } from 'rxjs/operators'\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PatientService } from '../../service/patient.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-appointments',\r\n  templateUrl: './view-appointments.component.html',\r\n  styleUrls: ['./view-appointments.component.css'],\r\n  providers: [NgbModalConfig, NgbModal]\r\n})\r\nexport class ViewAppointmentsComponent implements OnInit {\r\n  value = '';\r\n  public ob :Observable<Appointment[]>;\r\n  public regiterData;\r\n  msg:any;\r\n  dataSourceAppointment: any;  \r\n  public AppointmentData: Appointment[]= [];\r\n  public dataSourceAppointmentData: Appointment[]= [];\r\n  role:string;\r\n  res:any;\r\n  public matselection: any;\r\n  public pIdToUpdate:number; \r\n  public aIdToUpdate:number; \r\n  public drnameToUpdate:string; \r\n  public patientnameToUpdate:string; \r\n  public dateToUpdate:string; \r\n  public fromtimeToUpdate:string; \r\n  public totimeToUpdate:string; \r\n  public dridToUpdate:string; \r\n  \r\n  displayedColumns = [\r\n                      'ID',\r\n                      'DrID',\r\n                      'DrName',\r\n                      'PatientID',\r\n                      'PatientName',\r\n                      'Date',\r\n                      'Fromtime',\r\n                      'Totime',\r\n                      'View_Edit_Delete'                                            \r\n                     ];\r\n  constructor(private registerService: RegisterService,\r\n              private authService: AuthService,\r\n              private router: Router, private route: ActivatedRoute,\r\n              private modalService: NgbModal,\r\n              private patientsvc:PatientService) { }\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  public Getjson():void\r\n  {    \r\n    this.ob = this.registerService.GetAppointmentJsonData()\r\n    this.ob.subscribe(\r\n      data => { \r\n        console.log(\"Output\");\r\n        console.log(data);\r\n        this.AppointmentData = data;\r\n        this.dataSourceAppointmentData = data;\r\n      },\r\n      (error: any) => console.log(\"Error in saving regiter data\")\r\n      );\r\n      this.dataSourceAppointment = new MatTableDataSource<Appointment>(this.AppointmentData);\r\n      console.log(\"Data Source: \"+this.AppointmentData);\r\n      \r\n  }\r\n  ngOnInit(): void {\r\n    this.Getjson();\r\n    this.dataSourceAppointment.paginator = this.paginator;\r\n    this.initRole();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.Getjson();\r\n    this.dataSourceAppointment.paginator = this.paginator;\r\n  }\r\n  initRole(){\r\n    this.authService.getUserRole(this.authService.email)\r\n      .pipe(finalize(() => {\r\n      }))  \r\n      .subscribe(\r\n      result => {         \r\n         if(result) {                    \r\n            this.res = result;    \r\n            this.role = this.res.role;\r\n         }\r\n      },\r\n      error => {\r\n      });\r\n  } \r\n  open(content,selectedaId?:number,selectedpId?:number)\r\n  { // Ng Pop Up Model    \r\n    this.modalService.open(content,{ size:'xl',centered:true,scrollable:true});    \r\n    this.aIdToUpdate=selectedaId;  \r\n    this.pIdToUpdate=selectedpId;   \r\n  }\r\n  openAction(content,selectedaId?:number,selectedpId?:number,selecteddrname?:string,selectedpatientname?:string,\r\n    selecteddate?:string,selectedfromtime?:string,selectedtotime?:string,selecteddrid?:string)\r\n    {\r\n      debugger;\r\n      this.modalService.open(content,{ size:'xl',centered:true,scrollable:true});    \r\n      this.aIdToUpdate=selectedaId;  \r\n      this.pIdToUpdate=selectedpId;\r\n      this.drnameToUpdate=selecteddrname;\r\n      this.patientnameToUpdate=selectedpatientname;\r\n      this.dateToUpdate=selecteddate;\r\n      this.fromtimeToUpdate=selectedfromtime;\r\n      this.totimeToUpdate=selectedtotime;\r\n      this.dridToUpdate=selecteddrid;    \r\n    }    \r\n}\r\n","\r\n<div class=\"divclass\"> \r\n  <br>\r\n  <h2><u>Appointment List</u></h2>   \r\n  <div class=\"form-group\">\r\n  <table mat-table [dataSource]=\"dataSourceAppointmentData\" class=\"mat-elevation-z8\" [ngClass]=\"{'Tableclass': true}\">    \r\n      <ng-container matColumnDef=\"ID\">\r\n        <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Appt ID.</th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n      </ng-container>    \r\n      <ng-container matColumnDef=\"DrID\">\r\n        <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> DrID </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.drid}} </td>\r\n      </ng-container>  \r\n      <ng-container matColumnDef=\"DrName\">\r\n        <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Dr. Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.drname}} </td>\r\n      </ng-container>  \r\n      <ng-container matColumnDef=\"PatientID\">\r\n        <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> PatientID </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.patientid}} </td>\r\n      </ng-container> \r\n      <ng-container matColumnDef=\"PatientName\">\r\n        <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Patient Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.patientname}} </td>\r\n      </ng-container>  \r\n      <ng-container matColumnDef=\"Date\">\r\n        <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Date </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.date}} </td>\r\n      </ng-container> \r\n      <ng-container matColumnDef=\"Fromtime\">\r\n        <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> From Time </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.fromtime}} </td>\r\n      </ng-container>      \r\n      <ng-container matColumnDef=\"Totime\">\r\n        <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> To Time </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.totime}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"View_Edit_Delete\">\r\n        <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Actions </th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n            <!-- <button class=\"btn\" (click)=\"Viewopen(Viewcontent,element.id )\" [ngClass]=\"{'bgColor': true}\" style=\"color: #0047AB;\" title=\"Approve\"><mat-icon>check_circle</mat-icon></button>\r\n            <button class=\"btn\" (click)=\"Editopen(Editcontent,element.id )\" [ngClass]=\"{'bgColor': true}\" style=\"color: #0047AB;\" title=\"Reject\"><mat-icon>clear</mat-icon></button> -->\r\n\r\n            <button *ngIf=\"this.role=='doctor'\" (click)=\"openAction(AppointmentAction,element.id,element.patientid,element.drname,element.patientname,element.date,element.fromtime,element.totime,element.drid)\">Action</button> \r\n            <button *ngIf=\"this.role=='doctor' && element.isApproved==true\" (click)=\"open(doctorcontent,element.id,element.patientid)\">Patient Visit</button> \r\n            <button *ngIf=\"this.role=='nurse' && element.isApproved==true\" (click)=\"open(nursecontent,element.id,element.patientid)\">Patient Visit</button>           \r\n            \r\n        </td>\r\n      </ng-container>                   \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row (click)=\"getRecord()\" *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modalTagReg\">\r\n  <ng-template #doctorcontent let-c=\"close\" let-d=\"dismiss\" >    \r\n    <!-- <div class=\"modal-body\" [ngClass]=\"{'ModelPopUpClass': true}\"> -->\r\n      <div class=\"modal-body\" >\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times; &nbsp;</span>\r\n      </button>\r\n      <app-patient-visit-doctor [aId]=\"aIdToUpdate\" [pId]=\"pIdToUpdate\" ></app-patient-visit-doctor>\r\n     </div> \r\n  </ng-template>\r\n  <ng-template #nursecontent let-c=\"close\" let-d=\"dismiss\" >    \r\n    <!-- <div class=\"modal-body\" [ngClass]=\"{'ModelPopUpClass': true}\"> -->\r\n      <div class=\"modal-body\" >\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times; &nbsp;</span>\r\n      </button>\r\n      <app-patient-visit-nurse [pId]=\"pIdToUpdate\" [aId]=\"aIdToUpdate\"></app-patient-visit-nurse>\r\n     </div> \r\n  </ng-template>\r\n  <ng-template #AppointmentAction let-c=\"close\" let-d=\"dismiss\" >    \r\n    <!-- <div class=\"modal-body\" [ngClass]=\"{'ModelPopUpClass': true}\"> -->\r\n      <div class=\"modal-body\" >\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times; &nbsp;</span>\r\n      </button>\r\n      <app-appointment-action [aId]=\"aIdToUpdate\" [pId]=\"pIdToUpdate\" [drname]=\"drnameToUpdate\" \r\n      [patientname]=\"patientnameToUpdate\" [date]=\"dateToUpdate\" [fromtime]=\"fromtimeToUpdate\"\r\n      [totime]=\"totimeToUpdate\" [drid]=\"dridToUpdate\">\r\n    \r\n    </app-appointment-action>\r\n     </div> \r\n  </ng-template>\r\n</div>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { Routes,ActivatedRoute } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport appRoutes from './app.routes';\r\n\r\n/* Modules */\r\nimport { SharedMaterialModule } from './shared-material/shared-material.module';\r\nimport { LoginModule } from './login/login.module';\r\nimport { SharedWrapperModule } from './shared-wrapper/shared-wrapper.module';\r\nimport { AdminModule } from './admin/admin.module';\r\nimport { HomeModule } from './home/home.module';\r\nimport { CoreModule } from './core/core.module';\r\nimport { AuthCallbackComponent } from './auth-callback/auth-callback.component';\r\nimport { AccountModule } from './account/account.module';\r\n/* Modules ends*/ \r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { SchedulingModule } from './scheduling/scheduling.module';\r\nimport { PatientModule } from './patient/patient.module';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ReloginComponent } from './relogin/relogin.component';\r\nimport { PatientVisitModule } from './patient-visit/patient-visit.module';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n// Import library module\r\n//import {  } from \"ngx-spinner\";\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AuthCallbackComponent,\r\n    HeaderComponent,\r\n    ReloginComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    SharedMaterialModule,\r\n    appRoutes,\r\n    LoginModule,\r\n    SharedWrapperModule,\r\n    HomeModule,\r\n    CoreModule,\r\n    AdminModule,\r\n    AccountModule,\r\n    NgbModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    SchedulingModule,\r\n    PatientModule,\r\n    PatientVisitModule,\r\n    MatPaginatorModule,\r\n    NgxSpinnerModule\r\n    //AuthConfigModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, RequiredValidator} from '@angular/forms';\r\nimport { observable, Observable } from 'rxjs';\r\nimport { PatientVisit } from '../../Models/patientvisit';\r\nimport { PatientService} from '../../Service/patient.service';\r\nimport { PatientAllergy } from '../../Models/patientallergy1';\r\nimport { PatientDiagnosis } from '../../Models/patientdiagnosis';\r\nimport { PatientProcedure } from '../../Models/patientprocedure';\r\nimport { PatientMedication } from '../../Models/patientmedication';\r\nimport { ToasterPosition } from 'src/app/core/ToasterPosition';\r\nimport { ToasterService } from '../../core/ToasterService';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n@Component({\r\n  selector: 'app-patient-visit-nurse',\r\n  templateUrl: './patient-visit-nurse.component.html',\r\n  styleUrls: ['./patient-visit-nurse.component.css']\r\n})\r\nexport class PatientVisitNurseComponent implements OnInit {\r\n  public ob :Observable<string>;\r\n  public obpv:Observable<PatientVisit[]>;\r\n  public oballergy:Observable<PatientAllergy[]>;\r\n  public obdiagnosis:Observable<PatientDiagnosis[]>;\r\n  public obprocedure:Observable<PatientProcedure[]>;\r\n  public obmedication:Observable<PatientMedication[]>;\r\n  success:boolean;\r\n  public patientvisitnurse;\r\n  public patienvisitallergy;\r\n  msg:string=\"\";\r\n  public allergytype: string;\r\n  public chkFatal: string;\r\n  public AllergyRows: Array<{allergytype: string, chkFatal: string}> = [];\r\n  public DiagnosisRows: Array<{diagnosistype: string, diagnosisdescription: string}> = [];\r\n  public ProcedureRows: Array<{proceduretype: string, proceduredescription: string}> = [];\r\n  public MedicationRows: Array<{medicationtype: string,medicationdosage: string, medicationdescription: string}> = [];\r\n\r\n  @Input()  aId:number;\r\n  @Input()  pId:number;\r\n\r\n  public patientvisitdata: PatientVisit[]=[];\r\n  public patientAllergyData: PatientAllergy[]=[];\r\n  public patientDiagnosisData: PatientDiagnosis[]=[];\r\n  public patientProcedureData: PatientProcedure[]=[];\r\n  public patientMedicationData: PatientMedication[]=[];\r\n\r\n  fg: FormGroup = new FormGroup({\r\n    height: new FormControl('',Validators.required),\r\n    weight: new FormControl('',Validators.required),\r\n    bloodpressuresystolic: new FormControl('',Validators.required),\r\n    bloodpressurediastolic: new FormControl('',Validators.required),\r\n    bodytemperature: new FormControl('',Validators.required),\r\n    respirationrate : new FormControl('',Validators.required),\r\n    ApptID: new FormControl('',Validators.required),\r\n    PtID: new FormControl('',Validators.required)   \r\n  });\r\n  constructor(private practitionersvc: PatientService,private toaster: ToasterService,private spinner:NgxSpinnerService ) { }\r\n\r\n  AddAllergy() {           \r\n    \r\n    this.AllergyRows.push( {allergytype: this.allergytype, chkFatal: this.chkFatal==null?'false':'true' } );\r\n    this.patienvisitallergy = new PatientAllergy(this.allergytype,this.chkFatal==null?'false':'true',this.pId.toString());\r\n    this.ob = this.practitionersvc.SavePatientVisitAllergyData(this.patienvisitallergy)\r\n    \r\n    this.ob.subscribe(      \r\n      data => { \r\n        console.log(data);      \r\n        console.log(\"Output Is: \"+data[\"allergy\"]); \r\n        this.msg = data[\"firstname\"]+ \", has Registered Successfully\" },\r\n      (error: any) => console.log(\"Error in saving patientvisitallergy data\")\r\n      );\r\n\r\n    this.allergytype = null;\r\n    this.chkFatal = null;\r\n  }\r\n\r\n  SavePatientVisitNurse():void\r\n  {\r\n    console.log(this.fg.value.height);\r\n    let operation:string=\"\";\r\n    this.patientvisitnurse=new PatientVisit(\r\n      this.pId.toString(),this.aId.toString(),this.fg.value.height,this.fg.value.weight,\r\n      this.fg.value.bloodpressuresystolic,this.fg.value.bloodpressurediastolic,\r\n      this.fg.value.bodytemperature,this.fg.value.respirationrate);\r\n      debugger;\r\n      if(this.patientvisitdata.length > 0)\r\n      {\r\n          operation=\"PATCH\";    \r\n          this.patientvisitnurse.id=this.patientvisitdata[0].id;         \r\n      }\r\n      else\r\n      {\r\n        operation=\"POST\";\r\n      }\r\n    if(this.fg.invalid==false)\r\n    { \r\n      this.ob = this.practitionersvc.SavePatientVisitData(this.patientvisitnurse,operation)\r\n\r\n      this.ob.subscribe(      \r\n        data => { \r\n          console.log(data); \r\n          if(data !=null)\r\n          {\r\n          this.success = true;\r\n          this.toaster.success(\"Success\",\"Visit details of PatientID \"+data[\"patientid\"]+\" updated.\",ToasterPosition.topFull,this.functioncallbackFunction)   \r\n          }     \r\n          console.log(\"Output Is: \"+data[\"height\"]); \r\n          this.msg = data[\"firstname\"]+ \", has Registered Successfully\" },\r\n        (error: any) => console.log(\"Error in saving patientvisitnurse data\")\r\n        );\r\n    }\r\n  }\r\n  loadAppointmentData(aId:number)\r\n  {\r\n    console.log('LoadData'+this.aId);\r\n   this.obpv=this.practitionersvc.GetPatientVisitDataByID(this.aId);\r\n   this.obpv.subscribe(\r\n     (pv:PatientVisit[])=>{this.patientvisitdata=pv;\r\n      console.log(this.patientvisitdata)\r\n       console.log(this.patientvisitdata[0])\r\n     this.fg.patchValue({\r\n       \"height\": this.patientvisitdata[0].height,\r\n       \"weight\": this.patientvisitdata[0].weight,\r\n       \"bloodpressuresystolic\": this.patientvisitdata[0].bloodpressuresystolic,\r\n       \"bloodpressurediastolic\":this.patientvisitdata[0].bloodpressurediastolic,\r\n       \"bodytemperature\":this.patientvisitdata[0].bodytemperature,\r\n       \"respirationrate\":this.patientvisitdata[0].respirationrate\r\n     })\r\n   },\r\n   (error:any)=>console.log('fails to load nurse data')\r\n   );\r\n  }\r\n  loadAllergyData(pId:number)\r\n  {    \r\n   this.oballergy=this.practitionersvc.GetPatientAllergyDataByPatientID(this.pId);\r\n   this.oballergy.subscribe(\r\n     (pv:PatientAllergy[])=>{this.patientAllergyData=pv;      \r\n       console.log(this.patientAllergyData[0])\r\n       for (let i = 0; i < this.patientAllergyData.length; i++) {\r\n        this.AllergyRows.push( {allergytype: this.patientAllergyData[i].allergy, \r\n          chkFatal: this.patientAllergyData[i].isfatal } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadDiagnosisData(aId:number)\r\n  {   \r\n   this.obdiagnosis=this.practitionersvc.GetPatientDiagnosisDataByAppointmentID(this.aId);\r\n   this.obdiagnosis.subscribe(\r\n     (pv:PatientDiagnosis[])=>{this.patientDiagnosisData=pv;      \r\n       console.log(this.patientDiagnosisData[0])\r\n       for (let i = 0; i < this.patientDiagnosisData.length; i++) {\r\n        this.DiagnosisRows.push( {diagnosistype: this.patientDiagnosisData[i].diagnosis, \r\n          diagnosisdescription: this.patientDiagnosisData[i].diagnosisdescription } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadProcedureData(aId:number)\r\n  {   \r\n    \r\n   this.obprocedure=this.practitionersvc.GetPatientProcedureDataByAppointmentID(this.aId);\r\n   this.obprocedure.subscribe(\r\n     (pv:PatientProcedure[])=>{this.patientProcedureData=pv;      \r\n       console.log(this.patientProcedureData[0])\r\n       for (let i = 0; i < this.patientProcedureData.length; i++) {\r\n        this.ProcedureRows.push( {proceduretype: this.patientProcedureData[i].procedure, \r\n          proceduredescription: this.patientProcedureData[i].proceduredescription } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadMedicationData(aId:number)\r\n  {   \r\n    \r\n   this.obmedication=this.practitionersvc.GetPatientMedicationDataByAppointmentID(this.aId);\r\n   this.obmedication.subscribe(\r\n     (pv:PatientMedication[])=>{this.patientMedicationData=pv;      \r\n       console.log(this.patientMedicationData[0])\r\n       for (let i = 0; i < this.patientMedicationData.length; i++) {\r\n        this.MedicationRows.push( {medicationtype: this.patientMedicationData[i].medication, \r\n          medicationdosage: this.patientMedicationData[i].dosage,\r\n        medicationdescription: this.patientMedicationData[i].medicationdescription} );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  ngOnInit(): void {\r\n    this.loadAppointmentData(this.aId);\r\n    this.loadAllergyData(this.pId);\r\n    this.loadDiagnosisData(this.aId);\r\n    this.loadProcedureData(this.aId);\r\n    this.loadMedicationData(this.aId);\r\n    this.fg.patchValue({      \r\n      \"ApptID\":\"A0\"+this.aId,\r\n      \"PtID\":\"P0\"+this.pId\r\n    })\r\n  }\r\n  functioncallbackFunction(){\r\n    this.success=true;\r\n  }\r\n\r\n}\r\n","<div class=\"signup-form\">\r\n    <form class=\"form-group\" [formGroup]=\"fg\" (ngSubmit)=\"SavePatientVisitNurse()\">        \r\n        <h2>Patient Visit</h2>\r\n        <h3>Patient Details</h3>\r\n        <hr>    \r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"ApptID\">AppointmentID: <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"ApptID\" formControlName=\"ApptID\" disabled>                        \r\n                </div>\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"PtID\">PatientID: <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"PtID\" formControlName=\"PtID\" disabled>                        \r\n                </div>\r\n            </div>\r\n        </div>\r\n        PatientID : P001 | Patient Name: ABC | AppointmentID : A001\r\n        <h3>Vital Signs</h3>\r\n        <hr>        \r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"height\">Height (in cms): <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"height\" formControlName=\"height\">                        \r\n                </div>\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"weight\">Weight (in kgs): <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"weight\" formControlName=\"weight\">                        \r\n                </div>\r\n            </div>            \r\n            <div class=\"row\">\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"bloodpressuresystolic\">Blood Pressure Systolic (in mmHg): <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"bloodpressuresystolic\" formControlName=\"bloodpressuresystolic\">                        \r\n                </div>\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"bloodpressurediastolic\">Blood Pressure Diastolic (in mmHg): <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"bloodpressurediastolic\" formControlName=\"bloodpressurediastolic\">                        \r\n                </div>\r\n            </div>            \r\n            <div class=\"row\">\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"temperature\">Body Temperature (in celsius): <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"bodytemperature\" formControlName=\"bodytemperature\">                        \r\n                </div>\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"respirationrate\">Respiration Rate (in BPM): <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"respirationrate\" formControlName=\"respirationrate\">                        \r\n                </div>\r\n            </div>                        \r\n        </div>\r\n        <h3>New Allergy</h3>\r\n        <hr>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-4\">\r\n                    <label for=\"Title\">Allergy Type: <span class=\"asterisk\"> *</span></label>\r\n                    <select class=\"form-control\" [(ngModel)]=\"allergytype\" [ngModelOptions]=\"{standalone: true}\" aria-label=\"Default select example\">\r\n                        <!-- <option selected>Select Allergy Type</option> -->\r\n                        <option value=\"Pollen\">Pollen</option>\r\n\t\t\t\t\t\t<option value=\"Fungal\">Fungal</option>\r\n\t\t\t\t\t\t<option value=\"Drug\">Drug</option>\r\n\t\t\t\t\t\t<option value=\"Food\">Food</option>\r\n                      </select>\r\n                      <!-- <input type=\"text\" [(ngModel)]=\"name\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"name\" /> -->\r\n                </div>                \r\n                <div class=\"col-xs-8\">\r\n                    <label for=\"fatalallergy\">Fatal Allergy? <span class=\"asterisk\"> *</span></label><br>\r\n                    <input type=\"checkbox\" id=\"chkFatal\" name=\"chkFatal\" [(ngModel)]=\"chkFatal\" [ngModelOptions]=\"{standalone: true}\" value=\"True\">                    \r\n                    <!-- <label class=\"radio-inline\"><input type=\"radio\" [(ngModel)]=\"year\" [ngModelOptions]=\"{standalone: true}\" name=\"optradio\" checked>True</label>\r\n                    <label class=\"radio-inline\"><input type=\"radio\" [(ngModel)]=\"year\" [ngModelOptions]=\"{standalone: true}\" name=\"optradio\">False</label>                     -->\r\n                    <!-- <input type=\"text\" [(ngModel)]=\"year\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"year\" /> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <button id=\"btnSubmitAllergy\" type=\"button\" (click)=\"AddAllergy()\" class=\"btn\">Add Allergy</button>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <table class=\"table table-hover table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Allergy</th><th>Fatal Allergy?</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let row of AllergyRows\">                  \r\n                        <td>{{row.allergytype}}</td>\r\n                        <td>{{row.chkFatal}}</td>\r\n                      </tr>\r\n                </tbody>                                \t\t\t\t\r\n            </table>\r\n        </div>\r\n        <h3>Diagnosis</h3>\r\n        <hr>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-4\">\r\n                    <label for=\"Title\">Diagnosis: <span class=\"asterisk\"> *</span></label>\r\n                    <select class=\"form-control\" aria-label=\"Default select example\" name=\"Diagnosis\" id=\"ddlDiagnosis\" disabled>\r\n                        <option selected>Select Diagnosis</option>\r\n                        <option value=\"DD01\">DD01</option>\r\n                        <option value=\"DD02\">DD02</option>\r\n                        <option value=\"DD03\">DD03</option>\r\n                        <option value=\"DD04\">DD04</option>\r\n                      </select>\r\n                </div>                \r\n                <div class=\"col-xs-8\">\r\n                    <label for=\"DiagnosisDescription\">Diagnosis Description: <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"lastname\" disabled>\r\n                    <!-- <span class=\"asterisk\" *ngIf=\"fg.get('lastname').touched && fg.get('lastname').errors?.required\">\r\n                        LastName is required!\r\n                    </span> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <button id=\"btnSubmit\" class=\"btn\" disabled>Add Diagnosis</button>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <table class=\"table table-hover table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Diagnosis</th><th>Diagnosis Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let row of DiagnosisRows\">                  \r\n                        <td>{{row.diagnosistype}}</td>\r\n                        <td>{{row.diagnosisdescription}}</td>\r\n                      </tr>\r\n                </tbody>                                \t\t\t\t\r\n            </table>          \r\n        </div>\r\n        <h3>Procedure</h3>\r\n        <hr>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-4\">\r\n                    <label for=\"Title\">Procedure: <span class=\"asterisk\"> *</span></label>\r\n                    <select class=\"form-control\" aria-label=\"Default select example\" name=\"Procedure\" id=\"ddlProcedure\" disabled>\r\n                        <option selected>Select Procedure</option>\r\n                        <option value=\"P01\">P01</option>\r\n\t\t\t\t\t\t<option value=\"P02\">P02</option>\r\n\t\t\t\t\t\t<option value=\"P03\">P03</option>\r\n\t\t\t\t\t\t<option value=\"P04\">P04</option>\r\n                      </select>\r\n                </div>                \r\n                <div class=\"col-xs-8\">\r\n                    <label for=\"lastname\">Procedure Description: <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"lastname\" disabled>\r\n                    <!-- <span class=\"asterisk\" *ngIf=\"fg.get('lastname').touched && fg.get('lastname').errors?.required\">\r\n                        LastName is required!\r\n                    </span> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <button id=\"btnSubmit\" class=\"btn\" disabled>Add Procedure</button>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <table class=\"table table-hover table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Procedure</th><th>Procedure Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let row of ProcedureRows\">                  \r\n                        <td>{{row.proceduretype}}</td>\r\n                        <td>{{row.proceduredescription}}</td>\r\n                      </tr>\r\n                </tbody>                                \t\t\t\t\r\n            </table>               \r\n        </div>\r\n        <h3>Medication</h3>\r\n        <hr>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-3\">\r\n                    <label for=\"Title\">Medication: <span class=\"asterisk\"> *</span></label>\r\n                    <select class=\"form-control\" aria-label=\"Default select example\" name=\"Medication\" id=\"ddlMedication\" disabled>\r\n                        <option selected>Select Medication</option>\r\n                        <option value=\"M01\">M01</option>\r\n\t\t\t\t\t\t<option value=\"M02\">M02</option>\r\n\t\t\t\t\t\t<option value=\"M03\">M03</option>\r\n\t\t\t\t\t\t<option value=\"M04\">M04</option>\r\n                      </select>\r\n                </div> \r\n                <div class=\"col-xs-3\">\r\n                    <label for=\"Title\">Dosage: <span class=\"asterisk\"> *</span></label>\r\n                    <select class=\"form-control\" aria-label=\"Default select example\" name=\"Medication\" id=\"ddlMedication\" disabled>\r\n                        <option selected>Select Dosage</option>\r\n                        <option value=\"M01\">10mg</option>\r\n\t\t\t\t\t\t<option value=\"M02\">20mg</option>\r\n\t\t\t\t\t\t<option value=\"M03\">30mg</option>\r\n\t\t\t\t\t\t<option value=\"M04\">40mg</option>\r\n                      </select>\r\n                </div>                \r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"lastname\">Medication Description: <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"lastname\" disabled>\r\n                    <!-- <span class=\"asterisk\" *ngIf=\"fg.get('lastname').touched && fg.get('lastname').errors?.required\">\r\n                        LastName is required!\r\n                    </span> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <button id=\"btnSubmit\" class=\"btn\" disabled>Add Medication</button>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <table class=\"table table-hover table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Medication</th><th>Dosage</th><th>Medication Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let row of MedicationRows\">                  \r\n                        <td>{{row.medicationtype}}</td>\r\n                        <td>{{row.medicationdosage}}</td>\r\n                        <td>{{row.medicationdescription}}</td>\r\n                      </tr>\r\n                </tbody>                                \t\t\t\t\r\n            </table>        \r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <button id=\"btnFormSubmit\" type=\"submit\" value=\"Submit\" class=\"btn center-block\">Submit</button>\r\n        </div>\r\n    </form>\r\n</div>","export class PatientAllergy{\r\n    constructor(      \r\n        public id: number=0,\r\n        public allergy:string=\"\",\r\n        public isfatal:boolean=false,\r\n        public patientid:number=0\r\n     )\r\n    {\r\n        \r\n    }\r\n\r\n  //   get Id() { return this.id };\r\n  //   set Id(data: number) { this.id = data };\r\n\r\n  // get Allergy() { return this.allergy };\r\n  // set Allergy(data: string) { this.allergy = data };\r\n\r\n  // get Isfatal() { return this.isfatal };\r\n  // set Isfatal(data: boolean) { this.isfatal = data };\r\n\r\n  // get Patientid() { return this.patientid };\r\n  // set Patientid(data: number) { this.patientid = data };\r\n}","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { finalize } from 'rxjs/operators'\nimport { AuthService } from '../../core/auth.service';\nimport { UserRegistration }    from '../../models/user.registration';\n \nimport { ToasterService } from './../../core/ToasterService';\nimport { ToasterPosition } from './../../core/ToasterPosition';\nimport { Roles } from '../../core/dropdownmaster.service'; \n@Component({\n  selector: 'app-registers',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  success: boolean;\n  error: string;\n  userRegistration: UserRegistration = { name: '', email: '', password: '',role:''};\n  submitted: boolean = false;\n  roles:any;\n  constructor(private authService: AuthService,private toastr: ToasterService,private spinner: NgxSpinnerService) { }\n\n  ngOnInit(): void {\n    this.roles = Roles;\n  }\n  keys() : Array<string> {\n    var keys = Object.keys(this.roles);\n    //console.log(keys);\n    return keys;\n    //return keys.slice(keys.length / 2);\n  }\n  onSubmit1(){\n    this.success=true;\n    this.toastr.success('Success', 'Registered successfully',ToasterPosition.topFull,this.functioncallbackFunction);\n  }\n  onSubmit() { \n\n    this.spinner.show();\n\n    this.authService.register(this.userRegistration)\n      .pipe(finalize(() => {\n        this.spinner.hide();\n      }))  \n      .subscribe(\n      result => {         \n         if(result) {\n           console.log(\"Succeess\");\n           this.success = true;\n           this.toastr.success('Success', 'Registered successfully',ToasterPosition.topFull,this.functioncallbackFunction);\n         }\n      },\n      error => {\n        //if(error.status==='undefined')\n        this.toastr.error('Error',\"Unexpected error occured. Please contact administrator.\",ToasterPosition.topFull);\n        //else\n          //this.toastr.error('Error',error,ToasterPosition.topFull,this.functioncallbackFunction\n          this.error = error;       \n      });\n  }\n  functioncallbackFunction(){\n    //this.toastr.warning(\"warning\",\"Testing\",ToasterPosition.topFull);\n    this.success=true;\n  }\n\n}\n","\r\n<div class=\"row justify-content-center\"> \r\n    <div class=\"col-md-4 text-center\">\r\n      <form *ngIf=\"!success\" #f=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n        <img class=\"mb-4\" src=\"assets/images/PMSlogo.png\" alt=\"\" width=\"125\" height=\"125\">\r\n        <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\r\n        <div class=\"form-group\">\r\n            <label for=\"name\" class=\"sr-only\">Name</label>\r\n            <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"userRegistration.name\" class=\"form-control\" placeholder=\"Your name\" required autoFocus>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"email\" class=\"sr-only\">Email address</label>\r\n            <input type=\"email\" id=\"email\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"userRegistration.email\" class=\"form-control\" placeholder=\"Email address\" email required>\r\n            <small [hidden]=\"email.valid || (email.pristine && !submitted)\" class=\"text-danger\">Please enter a valid email</small>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"role\" class=\"sr-only\">Role</label>\r\n          <select id=\"role\" name=\"role\" [(ngModel)]=\"userRegistration.role\"  class=\"form-control\" placeholder=\"Select role\" required>\r\n            <option disabled selected value=\"\">Select Role</option>\r\n            <!-- <option>Choose Role</option> -->\r\n            <option *ngFor=\"let role of keys()\">{{role}}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"password\" class=\"sr-only\">Password</label>\r\n            <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"userRegistration.password\" class=\"form-control\" placeholder=\"Password\" aria-describedby=\"passwordHelp\" required>     \r\n            <small id=\"passwordHelp\" class=\"form-text text-muted\">Min. 6 characters with at least one non alphanumeric character</small>\r\n        </div>   \r\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" [disabled]=\"!f.form.valid\">Go</button>\r\n        <ngx-spinner></ngx-spinner>   \r\n        <div *ngIf=\"error\" class=\"alert alert-danger mt-3\" role=\"alert\">\r\n            <strong>Oops!</strong> {{error}}\r\n        </div>     \r\n      </form>      \r\n      <div *ngIf=\"success\" class=\"alert alert-success\" role=\"alert\">\r\n          <h4 class=\"alert-heading\">Well done!</h4>\r\n          <p>Your account was created successfully, <a routerLink=\"/login\">Please login</a> to continue.</p>        \r\n      </div>  \r\n    </div> \r\n  </div>\r\n  \r\n  <ngx-spinner></ngx-spinner>\r\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IndexComponent } from './index/index.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SharedMaterialModule } from '../shared-material/shared-material.module';\nimport { HomeRoutingModule } from './home-routing.module';\n\n@NgModule({\n  declarations: [IndexComponent,HeaderComponent],\n  imports: [\n    CommonModule,\n    SharedMaterialModule,\n    HomeRoutingModule\n  ]\n})\nexport class HomeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { finalize } from 'rxjs/operators'\nimport { AuthService } from '../../core/auth.service';\nimport { UserModel }    from '../../models/user.model';\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\nimport { ToasterService } from './../../core/ToasterService';\nimport { ToasterPosition } from './../../core/ToasterPosition';\nimport { MatchPasswd } from '../../CustomValidator/PasswdMatch.validator'\nimport { of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { User } from 'oidc-client';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n  constructor(private authService: AuthService,private toastr: ToasterService,private spinner: NgxSpinnerService,private router :Router) { }\n\n  success: boolean;\n  error: string;\n  userId: string= this.authService.email; \n  usermodel: UserModel = { oldPassword: '', email: this.authService.email , newPassword: '', confirmPassword:''};\n  submitted: boolean = false;\n  busy:boolean;\n\n  ngOnInit(): void {\n    this.userId = this.authService.email;\n    console.log(this.userId);\n  }\n  onSubmit(token:string){\n    this.busy = true;\n    this.spinner.show();\n    //this.usermodel.email = this.authService.email;\n    console.log(this.usermodel);\n    this.authService.changePassword(this.usermodel,this.authService.authorizationHeaderValue)\n      .pipe(finalize(() => {\n        //this.spinner.hide();\n      }))  \n      .subscribe(\n      result => {         \n         if(result) {\n          this.busy = false;\n          this.spinner.hide();\n            console.log(\"success\");\n            this.success = true;\n            this.toastr.success('Success', 'Password Reset Successfully',ToasterPosition.topFull);\n            this.router.navigate(['relogin/Password reset successfully']);\n            //this.authService.signout();\n            \n            // of(this.authService.signout()).pipe(\n            //   delay(50000)\n            // )\n         }\n      },\n      error => {\n        this.spinner.hide();\n        this.toastr.error('Error',error,ToasterPosition.topFull);\n        this.error = error;       \n      });\n    //this.toastr.success(\"Success\",\"Password Reset Successfully\",ToasterPosition.bottomRight);\n  }\n}\n","\n<div class=\"row justify-content-center\"> \n    <div class=\"col-md-4 text-center\">\n      <form *ngIf=\"!success\" #f=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n        <img class=\"mb-4\" src=\"assets/images/PMSlogo.png\" alt=\"\" width=\"125\" height=\"125\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Change Password</h1>\n        <div class=\"form-group\">\n            <label for=\"oldPassword\" class=\"sr-only\">Old Password</label>\n            <input type=\"password\" id=\"oldPassword\" name=\"oldPassword\" [(ngModel)]=\"usermodel.oldPassword\" class=\"form-control\" placeholder=\"Old Password\" required autoFocus>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"newPassword\" class=\"sr-only\">New Password</label>\n            <input type=\"password\" id=\"newPassword\" name=\"newPassword\" [(ngModel)]=\"usermodel.newPassword\" class=\"form-control\" placeholder=\"New Password\" required aria-describedby=\"passwordHelp\">\n            <small id=\"passwordHelp\" class=\"form-text text-muted\">Min. 6 characters with at least one non alphanumeric character</small>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"newPassword\" class=\"sr-only\">Confirm Password</label>\n            <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" [(ngModel)]=\"usermodel.confirmPassword\" class=\"form-control\" placeholder=\"Confirm Password\" aria-describedby=\"passwordHelp\" required>     \n            <small id=\"passwordHelp\" class=\"form-text text-muted\">Min. 6 characters with at least one non alphanumeric character</small>\n          </div> \n          <input type=\"text\" hidden id=\"email\" name=\"email\" [(ngmodel)] = \"usermodel.email\" value='{{userId}}' class=\"form-control\" placeholder=\"email\" [(ngModel)]=\"usermodel.email\">  \n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" [disabled]=\"!f.form.valid\">Go</button>\n        <ngx-spinner></ngx-spinner>   \n        <div *ngIf=\"error\" class=\"alert alert-danger mt-3\" role=\"alert\">\n            <strong>Oops!</strong> {{error}}\n        </div>     \n      </form>      \n      <div *ngIf=\"success\" class=\"alert alert-success\" role=\"alert\">\n          <h4 class=\"alert-heading\">Success!</h4>\n          <p>Your passsword reset successfully, <a routerLink=\"/userlogin\" href=\"/userlogin\">Please login</a> to continue.</p>        \n      </div>  \n    </div> \n  </div>\n  <ngx-spinner></ngx-spinner>  \n  \n  ","import { Injectable } from '@angular/core';\r\nimport { ToasterPosition } from './ToasterPosition';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport { timeout } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ToasterService{\r\n    constructor(private toastr: ToastrService) {}\r\n    timeout:number= 3000;\r\n  public error(title: string, message: string, positionClass: ToasterPosition,timein:number=this.timeout) {\r\n    this.toastr.error(message, title, {positionClass,timeOut:timein} );\r\n  }\r\n  public success(title: string, message: string, positionClass: ToasterPosition,mycallback:any=this.Callback,timein:number = this.timeout) {\r\n    this.toastr.success(message, title,{ positionClass,timeOut:timein,closeButton:true, } );\r\n    mycallback();\r\n  }\r\n  public warning(title: string, message: string, positionClass: ToasterPosition,timein:number = this.timeout) {\r\n    this.toastr.warning(message, title,{ positionClass,timeOut:timein } );\r\n  }\r\n  public info(title: string, message: string, positionClass: ToasterPosition,timein:number=this.timeout) {\r\n    this.toastr.info(message, title,{ positionClass,timeOut:timein } );\r\n  }\r\n  public showresponse(title: string='', message: string, positionClass: ToasterPosition) {\r\n    switch(title){\r\n      case \"\":{\r\n\r\n      }\r\n      case \"\":{\r\n        \r\n      }\r\n      case \"\":{\r\n        \r\n      }\r\n      case \"\":{\r\n        \r\n      }\r\n      case \"\":{\r\n        \r\n      }\r\n    } \r\n    this.toastr.info(message, title,{ positionClass } );\r\n  }\r\n  public mycallback(){\r\n    console.log(\"call\");\r\n  }\r\n  public Callback(){\r\n    console.log(\"call\");\r\n  }\r\n  \r\n\r\n}","<div *ngIf=\"!isAuthenticated\">\r\n<mat-toolbar color=\"primary\" class=\"mat-elevation-z6\">\r\n    <span title=\"Practice Management System\"> PMS</span>\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <nav *ngIf=\"!isAuthenticated\">\r\n    <button class=\"btn\" style=\"color: white;\" routerLink='/patientregister'><mat-icon style=\"vertical-align: middle;\">person_add</mat-icon>&nbsp; Register </button>\r\n    <button class=\"btn\" style=\"color: white;\" routerLink='/userlogin'><mat-icon style=\"vertical-align: middle;\">login</mat-icon>&nbsp; Login </button>\r\n    </nav>\r\n    <!-- <nav *ngIf=\"isAuthenticated\" class=\"my-2 my-md-0 mr-md-3\">\r\n      <a class=\"p-2 text-light\" routerLink=\"/topsecret\">Authorized Section</a>  \r\n      <a class=\"p-2 text-light\" (click)=\"signout()\" href=\"javascript:void(0)\">Signout {{name}}</a>               \r\n   </nav> -->\r\n  </mat-toolbar>\r\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../core/auth.service';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n  isAuthenticated:boolean;\n  name: string;\n  subscription:Subscription;\n\n  async signout() {\n    await this.authService.signout();     \n  }\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.authService.authNavStatus$.subscribe(status => this.isAuthenticated = status);\n    this.name = this.authService.name;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  hideloader() { \n    // Setting display of spinner \n    // element to none \n    document.getElementById('loading').style.display = 'none'; \n  }\n  showloader(){\n    document.getElementById('loading').style.display = 'true'; \n  } \n\n}\n","<div class=\"d-flex justify-content-center\">\n    <div class=\"spinner-border\" role=\"status\" >\n      <span class=\"sr-only\" id=\"loading\"></span>\n    </div>\n  </div>\n  <h1>Loader</h1>","export class PatientDemographicData{\r\n    constructor(      \r\n        public id: number=0,\r\n        public race:string=\"\",\r\n        public ethnicity:string=\"\",\r\n        public languagesKnown:string=\"\",\r\n        public address:string=\"\",\r\n        public nomineeFirstName:string=\"\",\r\n        public nomineeLastName:string=\"\",\r\n        public nomineeEmail:string=\"\",\r\n        public nomineeRelationship:string=\"\",\r\n        public nomineeContact:string=\"\",\r\n        public nomineeAddress:string=\"\",\r\n        public isNeedportalAccess:boolean=false,\r\n        public patientid:number=0\r\n             )\r\n    {\r\n        \r\n    }\r\n\r\n  //   get Id() { return this.id };\r\n  //   set Id(data: number) { this.id = data };\r\n\r\n  // get Race() { return this.race };\r\n  // set Race(data: string) { this.race = data };\r\n\r\n  // get Ethnicity() { return this.ethnicity };\r\n  // set Ethnicity(data: string) { this.ethnicity = data };\r\n\r\n  // get LanguagesKnown() { return this.languagesKnown };\r\n  // set LanguagesKnown(data: string) { this.languagesKnown = data };\r\n\r\n  // get Address() { return this.address };\r\n  // set Address(data: string) { this.address = data };\r\n\r\n  // get NomineeFirstName() { return this.nomineeFirstName };\r\n  // set NomineeFirstName(data: string) { this.nomineeFirstName = data };\r\n\r\n  // get NomineeLastName() { return this.nomineeLastName };\r\n  // set NomineeLastName(data: string) { this.nomineeLastName = data };\r\n\r\n  // get NomineeEmail() { return this.nomineeEmail };\r\n  // set NomineeEmail(data: string) { this.nomineeEmail = data };\r\n\r\n  // get NomineeRelationship() { return this.nomineeRelationship };\r\n  // set NomineeRelationship(data: string) { this.nomineeRelationship = data };\r\n\r\n  // get NomineeContact() { return this.nomineeContact };\r\n  // set NomineeContact(data: string) { this.nomineeContact = data };\r\n\r\n  // get NomineeAddress() { return this.nomineeAddress };\r\n  // set NomineeAddress(data: string) { this.nomineeAddress = data };\r\n\r\n  // get IsNeedportalAccess() { return this.isNeedportalAccess };\r\n  // set IsNeedportalAccess(data: boolean) { this.isNeedportalAccess = data };\r\n\r\n  // get Patientid() { return this.patientid };\r\n  //   set Patientid(data: number) { this.patientid = data };\r\n\r\n}","export class PatientMedication{\r\n    constructor(              \r\n        public medication:string=\"\",\r\n        public dosage:string=\"\",\r\n        public medicationdescription:string=\"\",\r\n        public patientid:string=\"\",\r\n        public appointmentid:string=\"\"\r\n     )\r\n    {}\r\n\r\n  get Medication() { return this.medication };\r\n  set Medication(data: string) { this.medication = data };\r\n\r\n  get Dosage() { return this.dosage };\r\n  set Dosage(data: string) { this.dosage = data };\r\n\r\n  get Medicationdescription() { return this.medicationdescription };\r\n  set Medicationdescription(data: string) { this.medicationdescription = data };\r\n\r\n  get Patientid() { return this.patientid };\r\n  set Patientid(data: string) { this.patientid = data };\r\n\r\n  get Appointmentid() { return this.appointmentid };\r\n  set Appointmentid(data: string) { this.appointmentid = data };\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { PatientRegisterComponent } from './patient-register/patient-register.component';\r\nimport { AccountRoutingModule } from './account-routes.module';\r\nimport { ToasterService } from '../core/ToasterService';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HomeModule } from '../home/home.module';\r\nimport { HeaderComponent } from '../home/header/header.component'; \r\nimport { SharedMaterialModule } from '../shared-material/shared-material.module';\r\nimport { SharedWrapperModule } from '../shared-wrapper/shared-wrapper.module';\r\nimport { ToasterPosition } from '../core/ToasterPosition';\r\nimport { FormGroup,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n@NgModule({\r\n  declarations: [RegisterComponent, PatientRegisterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AccountRoutingModule,\r\n    BrowserAnimationsModule, // required animations module\r\n    ToastrModule.forRoot(), // ToastrModule added  \r\n    HomeModule,\r\n    SharedMaterialModule,\r\n    ReactiveFormsModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  //exports:[HomeModule ],\r\n  providers:[ ToasterService ]\r\n})\r\nexport class AccountModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DoctorSectionComponent } from './doctor-section/doctor-section.component';\nimport {SharedMaterialModule} from '../shared-material/shared-material.module';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { PatientSectionComponent } from './patient-section/patient-section.component';\nimport { NurseSectionComponent } from './nurse-section/nurse-section.component';\nimport { RegisterComponent } from './register/register.component';\nimport {HttpClientModule}from '@angular/common/http';\nimport {  ReactiveFormsModule,FormsModule} from '@angular/forms';\nimport { InboxComponent } from './inbox/inbox.component';\nimport {NgxSpinnerModule,NgxSpinnerService } from 'ngx-spinner';\n@NgModule({\n  declarations: [DoctorSectionComponent, ChangePasswordComponent, PatientSectionComponent, NurseSectionComponent, RegisterComponent, InboxComponent],\n  imports: [\n    CommonModule,\n    SharedMaterialModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxSpinnerModule,\n    //NgxSpinnerService\n  ]\n})\nexport class AdminModule { }\n","import { Component, OnInit,Output } from '@angular/core';\r\nimport { PatientService } from '../../Service/patient.service';\r\nimport { Patients } from '../../Models/Patient';\r\nimport { Observable } from 'rxjs';\r\nimport { FormGroup, FormControl, Validators, RequiredValidator} from '@angular/forms';\r\nimport { MatchPasswd } from '../../CustomValidator/PasswdMatch.validator'\r\nimport { Router } from \"@angular/router\";\r\nimport { ToasterService } from '../../core/ToasterService';\r\nimport { ToasterPosition } from '../../core/ToasterPosition';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Title } from '../../core/dropdownmaster.service';\r\nimport { Genders } from '../../core/dropdownmaster.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Positioning } from '@ng-bootstrap/ng-bootstrap/util/positioning';\r\nimport { EventEmitter } from '@angular/core';\r\n@Component({\r\n  selector: 'app-patient-register',\r\n  templateUrl: './patient-register.component.html',\r\n  styleUrls: ['./patient-register.component.css']\r\n})\r\nexport class PatientRegisterComponent implements OnInit {\r\n\r\n  public ob: Observable<string>;\r\n  \r\n  public patient;\r\n  msg:string=\"\";\r\n  success: boolean;\r\n  genders:any;\r\n  titles:any;\r\n  res: any;\r\n  \r\n\r\n  fg: FormGroup = new FormGroup({\r\n    firstname: new FormControl('',Validators.required),\r\n    lastname: new FormControl('',Validators.required),\r\n    dob: new FormControl('',Validators.required),\r\n    contact: new FormControl('',[Validators.required,Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]),\r\n    email: new FormControl(null,[Validators.required,Validators.email]),\r\n    password: new FormControl('',Validators.required),\r\n    confirmpassword: new FormControl('',[Validators.required, MatchPasswd('password')]),\r\n    title: new FormControl('',[Validators.required]),\r\n    gender: new FormControl('',[Validators.required])\r\n  });\r\n  constructor(private patientsvc: PatientService,private router: Router,private toast:ToasterService,private spinner:NgxSpinnerService) { }\r\n\r\n// SavePatientData(eventsource: any): void\r\nSavePatientData1():void{\r\n  this.fg.reset();\r\n}\r\nSavePatientData(): void\r\n{\r\n  this.spinner.show();\r\n  console.log(\"ts.SavePatientData() hits\");\r\n  console.log(this.fg.value);\r\n  console.log(this.fg.value.firstname);\r\n\r\nthis.patient=new Patients(this.fg.value.firstname,this.fg.value.lastname,this.fg.value.dob,this.fg.value.contact\r\n                    ,this.fg.value.email,this.fg.value.password,(this.fg.value.firstname+\" \"+this.fg.value.lastname),\"Active\",\"No\",this.fg.value.title,this.fg.value.gender);\r\n\r\nconsole.log(this.patient);\r\n\r\nif(this.fg.invalid==false)\r\n{ \r\n  this.ob = this.patientsvc.SavePatientData(this.patient);\r\n  this.ob.pipe(finalize(() => {\r\n    this.spinner.hide();\r\n  })).subscribe(\r\n    dataa => { \r\n      this.res = dataa;\r\n      console.log(this.res);\r\n      if(this.res.code==\"1\"){ \r\n        this.success=true;\r\n        this.showMessage();\r\n        this.toast.success(\"Success\",\"User registered successfully\",ToasterPosition.topFull);\r\n      }else{\r\n        this.toast.error(\"Error\",this.res.response,ToasterPosition.topFull);\r\n      }\r\n    },\r\n    (error: any) => this.toast.error(\"Error\",error,ToasterPosition.topFull)\r\n  );\r\n  }\r\n }\r\n  getToday(): string {\r\n    return new Date().toISOString().split('T')[0];\r\n  }\r\n  navigatePage():void{\r\n    this.router.navigate([\"/userlogin\"]);\r\n  }\r\n  showMessage():void{\r\n    this.spinner.hide();\r\n    this.toast.success(\"Success\",\"Patient registered successfully\",ToasterPosition.topFull,5000);\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    this.titles= Object.entries(Title) ;\r\n    this.genders = Object.entries(Genders);\r\n  }\r\n  \r\n\r\n}\r\n"," \n<div  *ngIf=\"!success\" class=\"signup-form\">\n    <form  class=\"form-group\" [formGroup]=\"fg\" (ngSubmit)=\"SavePatientData()\">\n    <h2>Patient Registration</h2>\n    <div class=\"form-group\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\"><label for=\"firstname\">First Name:<span class=\"asterisk\"> *</span> </label>\n                <!-- <input type=\"text\" class=\"form-control\" placeholder=\"First Name\" name=\"firstname\" formControlName=\"firstname\">\n                 <span class=\"asterisk\" *ngIf=\"fg.get('firstname').touched && fg.get('firstname').errors?.required\">\n                    First name is required!\n                </span> -->\n\n                <!-- <label for=\"firstname\" class=\"sr-only\">First Name</label> -->\n                <input type=\"text\" id=\"firstname\" name=\"firstname\" formControlName=\"firstname\" class=\"form-control\" placeholder=\"Your First Name\" required autofocus>\n                <span class=\"asterisk\" *ngIf=\"fg.get('firstname').touched && fg.get('firstname').errors?.required\">\n                    First name is required!\n                </span>\n            </div>\n            \n            <div class=\"col-sm-6\"><label for=\"lastname sr-only\">Last Name:<span class=\"asterisk\"> *</span> </label>\n                <input type=\"text\" class=\"form-control\" name=\"lastname\" formControlName=\"lastname\" placeholder=\"Your Last Name\" required>\n                <span class=\"asterisk\" *ngIf=\"fg.get('lastname').touched && fg.get('lastname').errors?.required\">\n                    Last name is required!\n                </span>\n            </div>\n        </div>\n    </div>\n    <!-- <div class=\"form-group\">\n        <label for=\"firstname\" class=\"sr-only\">Name</label>\n        <input type=\"text\" id=\"firstname\" name=\"firstname\" [(ngModel)]=\"fg.firstname\" formControlName=\"firstname\" class=\"form-control\" placeholder=\"Your name\" required>\n    </div> -->\n    <div class=\"form-group\">\n        <br/>\n        <div class=\"row\">\n        <div class=\"col-sm-6\">\n        <label for=\"title\" class=\"sr-only\">Title<span class=\"asterisk\"> *</span></label>\n        <select id=\"title\" name=\"title\" class=\"form-control\" placeholder=\"Select role\" required formControlName=\"title\">\n          <option disabled selected value=\"\">Select Title</option>\n          <option *ngFor=\"let title of titles\" value={{title[0]}}>{{title[1]}}</option>\n        </select>\n        </div>\n        <div class=\"col-sm-6\">\n            <label for=\"gender\" class=\"sr-only\">Gender<span class=\"asterisk\"> *</span></label>\n            <select id=\"gender\" name=\"gender\" class=\"form-control\" placeholder=\"Select gender\" required formControlName=\"gender\">\n              <option disabled selected value=\"\">Select Gender</option>\n              <option *ngFor=\"let gender of genders\" value={{gender[0]}}>{{gender[1]}}</option>\n            </select>\n        </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"email\">Email:<span class=\"asterisk\"> *</span> </label>\n        <input type=\"email\" class=\"form-control\" name=\"email\" formControlName=\"email\" autocomplete=\"off\" required placeholder=\"Your Email\">\n        <span class=\"asterisk\" *ngIf=\"fg.get('email').touched && fg.get('email').errors?.required\">\n            Email is required!\n        </span>\n        <span class=\"asterisk\" *ngIf=\"fg.get('email').touched && fg.get('email').errors?.email\">\n            Email is not valid!\n        </span>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <label for=\"contact\">Contact No:<span class=\"asterisk\"> *</span> </label>\n                <input type=\"text\" class=\"form-control\" name=\"contact\" formControlName=\"contact\" required placeholder=\"Your Contact No.\">\n                <span class=\"asterisk\" *ngIf=\"fg.get('contact').touched && fg.get('contact').errors?.required\">\n                    Contact is required!\n                </span>\n                <span class=\"asterisk\" *ngIf=\"fg.get('contact').touched && fg.get('contact').errors?.pattern\">\n                    Enter 10 digit number only!\n                </span>\n            </div>\n            <div class=\"col-sm-6\">\n                <label for=\"dob\">DOB:<span class=\"asterisk\"> *</span> </label>\n                <input type=\"date\" [max]=\"getToday()\" class=\"form-control\" name=\"dob\" formControlName=\"dob\" required>\n                <span class=\"asterisk\" *ngIf=\"fg.get('dob').touched && fg.get('dob').errors?.required\">\n                    DOB is required!\n                </span>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"row\">\n            <div class=\"col-6\">\n            <label for=\"password\">Password:<span class=\"asterisk\"> *</span> </label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" formControlName=\"password\" required placeholder=\"Password\">\n            <span class=\"asterisk\" *ngIf=\"fg.get('password').touched && fg.get('password').errors?.required\">\n            Password is required!\n        </span>\n            </div>\n            <div class=\"col-6\">\n            <label for=\"confirmpassword\">Confirm Password:<span class=\"asterisk\"> *</span> </label>\n            <input type=\"password\" class=\"form-control\" name=\"confirmpassword\" formControlName=\"confirmpassword\" required placeholder=\"Confirm Password\">\n            <span class=\"asterisk\" *ngIf=\"fg.get('confirmpassword').touched && fg.get('confirmpassword').errors?.required\">\n            ConfirmPassword is required!\n        </span>\n        <span class=\"asterisk\" *ngIf=\"fg.get('confirmpassword').touched && fg.get('confirmpassword').errors?.mismatch\">\n            ConfirmPassword does not match!\n        </span>\n            </div>\n        </div>\n    </div> \n    <div class=\"form-group\">\n        <button id=\"btnSubmit\" class=\"btn\" [disabled]=\"!fg.valid\">Register Now</button>\n        &nbsp;&nbsp;<label> Already have an account?</label>&nbsp;&nbsp;<a href=\"/login\"> Sign in</a>\n    </div>           \n</form>\n</div>\n\n<div>\n  <h1 style=\"color: red;\">{{msg}}</h1>\n</div>\n\n<div *ngIf=\"success\" class=\"alert alert-success\" role=\"alert\">\n    <h4 class=\"alert-heading\">Success!</h4>\n    <p>Your passsword reset successfully, <a routerLink=\"/userlogin\" href=\"/userlogin\">Please login</a> to continue.</p>        \n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FormGroup,FormControl,Validators} from '@angular/forms';\r\nimport {PatientAllergy} from '../../models/PatientAllergy';\r\nimport {PatientDemographicData} from '../../models/PatientDemographicData';\r\nimport {PatientService } from '../../Service/patient.service';\r\nimport { Patients } from 'src/app/models/Patient';\r\nimport {ToasterService} from '../../core/ToasterService';\r\nimport { ToasterPosition } from 'src/app/core/ToasterPosition';\r\nimport { SelectAutocompleteComponent } from 'mat-select-autocomplete';\r\nimport { AuthService } from '../../core/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-view-data',\r\n  templateUrl: './view-data.component.html',\r\n  styleUrls: ['./view-data.component.css']\r\n})\r\nexport class ViewDataComponent implements OnInit {\r\n\r\n  public ob :Observable<PatientAllergy[]>;\r\n  public patientAllergyData;\r\n  public ob1 :Observable<PatientDemographicData[]>;\r\n  public patientDemographicData;\r\n  public ob2 :Observable<Patients[]>;\r\n  public dataSourceAllergyData: PatientAllergy[]= [];\r\n  public demographicData: PatientDemographicData[]= [];\r\n\r\n  public isFatal:boolean=false;\r\n  public isUseSameAddress:boolean=false;\r\n  public isPortalAccess:boolean=false;\r\n  public allergyMaster:any;\r\n  public res: any;\r\n  // public rbNomineePortalAccess:string=\"false\"; \r\n  success: boolean;\r\n\r\n  userForm: FormGroup = new FormGroup({\r\n    patientfirstname: new FormControl(''),\r\n    patientlastname: new FormControl(''),\r\n    patientdob: new FormControl(''),\r\n    patientcontact: new FormControl(''),\r\n    patientemail: new FormControl(null),\r\n    race: new FormControl('',Validators.required),\r\n    ethnicity: new FormControl('',Validators.required),\r\n    // languagesKnown: new FormControl('',Validators.required),\r\n    address: new FormControl(null,Validators.required),\r\n    nomineeFirstName: new FormControl('',Validators.required),\r\n    nomineeLastName : new FormControl('',Validators.required),   \r\n    nomineeEmail : new FormControl('',Validators.required),   \r\n    nomineeRelationship : new FormControl('',Validators.required),   \r\n    nomineeContact : new FormControl('',Validators.required),   \r\n    nomineeAddress : new FormControl('',Validators.required),\r\n    portalaccess : new FormControl(false),\r\n    sameasabove:new FormControl(false)\r\n  });\r\n\r\n  displayedColumns = [\r\n    'id',\r\n    'allergy',\r\n    'isfatal'\r\n   ];\r\n \r\n    //#region Language Known Input\r\n@ViewChild(SelectAutocompleteComponent) multiSelect: SelectAutocompleteComponent;\r\n@ViewChild('autoComplete')  public langSelect:any;\r\n  options = [\r\n    {\r\n      display: 'English',\r\n      value: 'English'\r\n    }, {\r\n      display: 'French',\r\n      value: 'French'\r\n    }, {\r\n      display: 'Hindi',\r\n      value: 'Hindi'\r\n    }, {\r\n      display: 'German',\r\n      value: 'German'\r\n    }, {\r\n      display: 'Spanish',\r\n      value: 'Spanish'\r\n    }, {\r\n      display: 'Marathi',\r\n      value: 'Marathi'\r\n    }\r\n  ];\r\n  selectedOptions = [];\r\n\r\n  selected = this.selectedOptions;\r\n  showError = false;\r\n  errorMessage = '';\r\n  //#endregion\r\n\r\n  constructor(private patientsvc:PatientService,private toaster:ToasterService,private authService: AuthService) { }\r\n\r\n  \r\n\r\n  public SavePatientAllergy(allergy:string):void{\r\n    debugger;\r\n    console.log('Add allergy done');\r\n    if(typeof allergy!='undefined')\r\n    {\r\n      this.patientAllergyData=new PatientAllergy(0,allergy,this.isFatal,1);     \r\n      this.ob=this.patientsvc.SaveAllergyData(this.authService.email,this.patientAllergyData);\r\n      this.ob.subscribe(\r\n        dataa => { \r\n          console.log(dataa);   \r\n        this.GetPatientAllergyData();    \r\n      },\r\n        (error: any) => console.log(\"Error in saving patient Allergy data\")\r\n      )\r\n        }\r\n        else{\r\n          alert('Allergy type cannot be empty');\r\n        }        \r\n  }\r\n\r\n  public GetPatientAllergyData():void\r\n  {\r\n    this.ob = this.patientsvc.GetPatientAllergyDataByID(this.authService.email);\r\n    this.ob.subscribe(\r\n      data => { \r\n        console.log(\"Output\");\r\n        console.log(data);\r\n        this.dataSourceAllergyData = data;\r\n      },\r\n      (error: any) => console.log(\"Error in saving regiter data\")\r\n      );\r\n  }\r\n\r\n  \r\n  public SavePatientDemographicData():void{\r\n    debugger;\r\n    let operation:string=\"\";\r\n    console.log('save demographic done');\r\n     this.patientDemographicData=new PatientDemographicData((this.demographicData[\"id\"] > 0) ? this.demographicData[\"id\"] : 0,this.userForm.value.race,this.userForm.value.ethnicity,\r\n     this.langSelect.displayString,this.userForm.value.address,this.userForm.value.nomineeFirstName\r\n      ,this.userForm.value.nomineeLastName,this.userForm.value.nomineeEmail,this.userForm.value.nomineeRelationship,\r\n      this.userForm.value.nomineeContact,(this.userForm.value.sameasabove == true)? this.userForm.value.address : this.userForm.value.nomineeAddress,this.userForm.value.portalaccess,1)\r\n     \r\n      if(this.demographicData[\"id\"] > 0)\r\n      {\r\n          operation=\"PATCH\";\r\n      }\r\n      else\r\n      {\r\n        operation=\"POST\";\r\n      }\r\n      this.ob=this.patientsvc.SaveDemographicData(this.authService.email,this.patientDemographicData,operation)\r\n      this.ob.subscribe(\r\n        dataa => { \r\n          this.res = dataa;\r\n          console.log(this.res);\r\n          if(this.res.code==\"1\"){ \r\n            this.success=true;\r\n            this.toaster.success(\"Success\",this.res.response,ToasterPosition.topFull);\r\n          }else{\r\n            this.toaster.error(\"Error\",this.res.response,ToasterPosition.topFull);\r\n          }\r\n          this.ngOnInit();\r\n           },\r\n        (error: any) => {this.toaster.error('Error',error,ToasterPosition.topFull);\r\n        console.log(\"Error in saving patient Allergy data\")}\r\n      )\r\n  }\r\n\r\n  loadPatientData()\r\n  {\r\n    this.ob2=this.patientsvc.GetPatientDataByID(this.authService.email);\r\n    this.ob2.subscribe(\r\n      (data:any)=>{\r\n        debugger;\r\n        if(data[\"firstname\"] != \"\")\r\n        {\r\n          this.userForm.patchValue({\r\n            \"patientfirstname\": data[\"firstname\"],\r\n            \"patientlastname\": data[\"lastname\"],\r\n            \"patientdob\": data[\"dob\"],\r\n            \"patientcontact\": data[\"contact\"],\r\n            \"patientemail\": data[\"email\"]\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  loadDemographicData()\r\n  {\r\n   this.ob1=this.patientsvc.GetPatientDemographicDataByID(this.authService.email);\r\n   this.ob1.subscribe(\r\n   (dr:PatientDemographicData[])=>{this.demographicData=dr;console.log(this.demographicData);\r\n    debugger;\r\n    if(this.demographicData[\"id\"] > 0)\r\n    {\r\n      //Convert Language string into array\r\n      this.selectedOptions=this.demographicData[\"languagesKnown\"].split(',');\r\n      \r\n   this.userForm.patchValue({\r\n    \"race\": this.demographicData[\"race\"],\r\n    \"ethnicity\": this.demographicData[\"ethnicity\"],\r\n    // \"languagesKnown\": this.demographicData[0].languagesKnown,\r\n    \"address\": this.demographicData[\"address\"],\r\n    \"nomineeFirstName\": this.demographicData[\"nomineeFirstName\"],\r\n    \"nomineeLastName\" : this.demographicData[\"nomineeLastName\"],   \r\n    \"nomineeEmail\" : this.demographicData[\"nomineeEmail\"],   \r\n    \"nomineeRelationship\" : this.demographicData[\"nomineeRelationship\"],   \r\n    \"nomineeContact\" : this.demographicData[\"nomineeContact\"],   \r\n    \"nomineeAddress\" : this.demographicData[\"nomineeAddress\"],\r\n    \"portalaccess\" : this.demographicData[\"isNeedportalAccess\"]\r\n   })\r\n  }\r\n },\r\n (error:any)=>console.log('fails to load doctors data')\r\n );\r\n  }\r\n\r\n  loadAllergyMaster()\r\n  {\r\n    this.ob2=this.patientsvc.GetAllergyMaster();\r\n    this.ob2.subscribe(\r\n      (data:any)=>{\r\n        debugger;\r\n      this.allergyMaster=data;\r\n      }\r\n    )\r\n  }\r\n\r\n  IsFatalCheckEvent(event){\r\n    debugger;    \r\n    this.isFatal=event.target.checked;\r\n    console.log(this.isFatal);\r\n    }\r\n    \r\n    // IsUseSameAddressEvent(event){\r\n    //   debugger;    \r\n    //   this.isUseSameAddress=event.target.checked;\r\n    //   console.log(this.isUseSameAddress);\r\n    //   }\r\n\r\n      // IsPortalAccessEvent(event){\r\n      //   debugger;    \r\n      //   this.isPortalAccess=event.target.checked;\r\n      //   console.log(this.isPortalAccess);\r\n      //   }\r\n\r\n      functioncallbackFunction(){\r\n        this.success=true;\r\n      }\r\n\r\n      //#region Language Known Input\r\n      onToggleDropdown() {\r\n        this.multiSelect.toggleDropdown();\r\n      }\r\n    \r\n      getSelectedOptions(selected) {\r\n        this.selected = selected;\r\n      }\r\n    \r\n      onResetSelection() {\r\n        this.selectedOptions = [];\r\n      }\r\n      //#endregion\r\n\r\n    ngOnInit(): void {\r\n      this.loadPatientData();\r\n      this.loadDemographicData();\r\n      this.loadAllergyMaster();\r\n      this.GetPatientAllergyData();\r\n    }\r\n\r\n}\r\n","\r\n    <div class=\"signup-form col-sm-12\">\r\n        <form class=\"form-group\" [formGroup]=\"userForm\" (ngSubmit)=\"SavePatientDemographicData()\">\r\n            <fieldset>\r\n                <legend>Personal :</legend>\r\n                <div class=\"form-group\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\"><label for=\"firstname\">First Name: </label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"firstname\" formControlName=\"patientfirstname\" readonly>\r\n                             <!-- <span class=\"asterisk\" *ngIf=\"fg.get('firstname').touched && fg.get('firstname').errors?.required\">\r\n                                FirstName is required!\r\n                            </span> -->\r\n                        </div>\r\n                        <div class=\"col-sm-6\"><label for=\"lastname\">Last Name: </label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"lastname\" formControlName=\"patientlastname\" readonly>\r\n                            <!-- <span class=\"asterisk\" *ngIf=\"fg.get('lastname').touched && fg.get('lastname').errors?.required\">\r\n                                LastName is required!\r\n                            </span> -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                    <label for=\"email\">Email: </label>\r\n                    <input type=\"email\" class=\"form-control\" name=\"email\" formControlName=\"patientemail\" readonly>\r\n                    <!-- <span class=\"asterisk\" *ngIf=\"fg.get('email').touched && fg.get('email').errors?.required\">\r\n                        Email is required!\r\n                    </span>\r\n                    <span class=\"asterisk\" *ngIf=\"fg.get('email').touched && fg.get('email').errors?.email\">\r\n                        Email is not valid!\r\n                    </span> -->\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <label for=\"contact\">Contact: </label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"contact\" formControlName=\"patientcontact\" readonly>\r\n                            <!-- <span class=\"asterisk\" *ngIf=\"fg.get('contact').touched && fg.get('contact').errors?.required\">\r\n                                Contact is required!\r\n                            </span>\r\n                            <span class=\"asterisk\" *ngIf=\"fg.get('contact').touched && fg.get('contact').errors?.pattern\">\r\n                                Enter 10 digit number only!\r\n                            </span> -->\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <label for=\"dob\">DOB: </label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"dob\" formControlName=\"patientdob\" readonly>\r\n                            <!-- <span class=\"asterisk\" *ngIf=\"fg.get('dob').touched && fg.get('dob').errors?.required\">\r\n                                DOB is required!\r\n                            </span> -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Demographics: </legend>\r\n                <div class=\"form-group\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\"><label for=\"race\">Race: </label><input type=\"text\" class=\"form-control\" name=\"race\" placeholder=\"\" formControlName=\"race\"></div>\r\n                        <div class=\"col-sm-6\"><label for=\"ethnicity\">Ethnicity: </label><input type=\"text\" class=\"form-control\" name=\"ethnicity\" placeholder=\"\" formControlName=\"ethnicity\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <label for=\"languagesknown\">Languages Known: </label><br>\r\n                            <mat-select-autocomplete #autoComplete class=\"grid-7-11\"\r\n                            [placeholder]=\"'Select Language'\"\r\n                            [errorMsg]=\"errorMessage\"\r\n                            [showErrorMsg]=\"showError\"\r\n                            [options]=\"options\"\r\n                            [display]=\"'display'\"\r\n                            [value]=\"'value'\"\r\n                            [multiple]='true'\r\n                            [labelCount]=\"5\"\r\n                            [selectedOptions]=\"selectedOptions\"\r\n                            (selectionChange)=\"getSelectedOptions($event)\">\r\n                          </mat-select-autocomplete>\r\n                            <!-- <label for=\"languagesknown\">Languages Known: </label><input type=\"text\" class=\"form-control\" name=\"languagesknown\" placeholder=\"\" formControlName=\"languagesKnown\"> -->\r\n                        </div>\r\n                        <div class=\"col-sm-6\"><label for=\"address\">Address: </label><textarea class=\"form-control\" name=\"address\" formControlName=\"address\"></textarea></div>\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"form-group\">\r\n                    <label for=\"address\">Address: </label>\r\n                    <textarea class=\"form-control\" name=\"address\"></textarea>\r\n                </div> -->\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Emergency Contact: </legend>\r\n                <div class=\"form-group\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\"><label for=\"firstname\">First Name: </label><input type=\"text\" class=\"form-control\" name=\"firstname\" placeholder=\"\" formControlName=\"nomineeFirstName\"></div>\r\n                        <div class=\"col-sm-6\"><label for=\"lastname\">Last Name: </label><input type=\"text\" class=\"form-control\" name=\"lastname\" placeholder=\"\" formControlName=\"nomineeLastName\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                    <label for=\"email\">Email: </label>\r\n                    <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"\" formControlName=\"nomineeEmail\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\"><label for=\"relationship\">Relationship: </label><input type=\"text\" class=\"form-control\" name=\"relationship\" placeholder=\"\" formControlName=\"nomineeRelationship\"></div>\r\n                        <div class=\"col-sm-6\"><label for=\"contact\">Contact: </label><input type=\"text\" class=\"form-control\" name=\"contact\" placeholder=\"\" formControlName=\"nomineeContact\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <label for=\"address\">Address: </label><textarea class=\"form-control\" name=\"address\" formControlName=\"nomineeAddress\"></textarea>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <input type=\"checkbox\" name=\"sameasabove\" formControlName=\"sameasabove\"> Same As Above\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-sm-4\"><input type=\"checkbox\" name=\"sameasabove\" formControlName=\"portalaccess\"> Do you need access to patient portal? </div>\r\n                    <!-- <mat-radio-group aria-label=\"Select an option\" (change)=\"onChange($event)\"> \r\n                        <mat-radio-button value=\"true\">Yes</mat-radio-button> \r\n                        <mat-radio-button value=\"false\" [checked]=true>No</mat-radio-button>\r\n                      </mat-radio-group> -->\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Allergies: </legend>\r\n                <div class=\"form-group\">\r\n                    <div class=\"row\">\r\n                        <!-- <div class=\"col-xl-4\"><label for=\"allergytype\">Type of allergy: </label><input type=\"text\" class=\"form-control\" name=\"allergytype\" placeholder=\"\" [(ngModel)]=\"allergyName\"></div> -->\r\n                        <div class=\"col-sm-4\"><label for=\"allergytype\">Type of allergy: </label>\r\n                            <!-- <input type=\"text\" class=\"form-control\" name=\"allergytype\" placeholder=\"\" #allergyInput> -->\r\n                            <mat-form-field appearance=\"fill\">\r\n                                <mat-label>Allergy</mat-label>\r\n                                <mat-select #allergyInput>\r\n                                  <mat-option>None</mat-option>\r\n                                  <mat-option *ngFor=\"let allergy of allergyMaster\" [value]=\"allergy.allergyName\">{{allergy.allergyName}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-4\"><input type=\"checkbox\" name=\"sameasabove\" (change)=\"IsFatalCheckEvent($event)\"> Is allergy fatal </div>\r\n                        <div class=\"col-sm-4\"><button type=\"button\" class=\"btn\" id=\"btnSubmit\" (click)=\"SavePatientAllergy(allergyInput.value)\">Add</button></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <!-- <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">SR.NO</th>\r\n                                <th scope=\"col\">Allergy</th>\r\n                                <th scope=\"col\">IsFatal</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th scope=\"row\">1</th>\r\n                                <td>Dust</td>\r\n                                <td>True</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">2</th>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table> -->\r\n                    <table mat-table [dataSource]=\"dataSourceAllergyData\" class=\"mat-elevation-z2\">\r\n                        <ng-container matColumnDef=\"id\">\r\n                          <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Sr.No </th>\r\n                          <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n                        </ng-container>  \r\n                        <!-- FullName Column -->\r\n                        <ng-container matColumnDef=\"allergy\">\r\n                          <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Allergy </th>\r\n                          <td mat-cell *matCellDef=\"let element\"> {{element.allergy}} </td>\r\n                        </ng-container>  \r\n                        <!-- Date_of_Birth Column -->\r\n                        <ng-container matColumnDef=\"isfatal\">\r\n                          <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> IsFatal </th>\r\n                          <td mat-cell *matCellDef=\"let element\"> {{element.isfatal}} </td>\r\n                        </ng-container> \r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row  *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                      </table>\r\n                </div>\r\n            </fieldset>\r\n            <div class=\"form-group\">\r\n                <button type=\"submit\" class=\"btn\" id=\"btnSubmit\">Save</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport { AuthService } from '../core/auth.service';\n@Component({\n  selector: 'app-relogin',\n  templateUrl: './relogin.component.html',\n  styleUrls: ['./relogin.component.css']\n})\nexport class ReloginComponent implements OnInit {\n\n  constructor(private routes:Router,private activatedRoute:ActivatedRoute,private auth:AuthService) { }\n  msg:string;\n  sub;\n  ngOnInit(): void {\n    this.sub=this.activatedRoute.paramMap.subscribe(params => { \n      console.log(params);\n       this.msg = params.get('msg'); \n   });\n  }\n  onClick(){\n\n//alert(\"clicked\");    \n  }\n\n}\n","<main>\n    <div class=\"container\">\n<div class=\"alert alert-success\" role=\"alert\">\n    <h4 class=\"alert-heading\">Success!</h4>\n    <p>{{msg}}, <a onclick=\"onClick\" routerLink=\"/userlogin\" href=\"/userlogin\" disabled>Please login</a> to continue.</p>        \n</div>\n</div>\n</main>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class CoreModule { }\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, RequiredValidator} from '@angular/forms';\r\nimport { observable, Observable } from 'rxjs';\r\nimport { PatientVisit } from '../../Models/patientvisit';\r\nimport { PatientService} from '../../Service/patient.service';\r\nimport { PatientAllergy } from '../../Models/patientallergy1';\r\nimport { PatientDiagnosis } from '../../Models/patientdiagnosis';\r\nimport { PatientProcedure } from '../../Models/patientprocedure';\r\nimport { PatientMedication } from '../../Models/patientmedication';\r\nimport { NgxSpinnerService } from 'ngx-spinner'\r\nimport { ToasterPosition } from 'src/app/core/ToasterPosition';\r\nimport {ToasterService} from '../../core/ToasterService';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-patient-visit-doctor',\r\n  templateUrl: './patient-visit-doctor.component.html',\r\n  styleUrls: ['./patient-visit-doctor.component.css']\r\n})\r\nexport class PatientVisitDoctorComponent implements OnInit {\r\n  public ob :Observable<string>;\r\n  public obpv:Observable<PatientVisit[]>;\r\n  public oballergy:Observable<PatientAllergy[]>;\r\n  public obdiagnosis:Observable<PatientDiagnosis[]>;\r\n  public obprocedure:Observable<PatientProcedure[]>;\r\n  public obmedication:Observable<PatientMedication[]>;\r\n  success: boolean;\r\n  public patientvisitdoctor;  \r\n  msg:string=\"\";\r\n  public patienvisitallergy;\r\n  public patienvisitdiagnosis;\r\n  public patienvisitprocedure;\r\n  public patienvisitmedication;\r\n  public allergytype: string;\r\n  public chkFatal: string;\r\n  public diagnosistype: string;\r\n  public diagnosisdescription: string;\r\n  public proceduretype: string;\r\n  public proceduredescription: string;\r\n  public medicationtype: string;\r\n  public medicationdosage: string;\r\n  public medicationdescription: string;\r\n  public AllergyRows: Array<{allergytype: string, chkFatal: string}> = [];\r\n  public DiagnosisRows: Array<{diagnosistype: string, diagnosisdescription: string}> = [];\r\n  public ProcedureRows: Array<{proceduretype: string, proceduredescription: string}> = [];\r\n  public MedicationRows: Array<{medicationtype: string,medicationdosage: string, medicationdescription: string}> = [];\r\n\r\n  @Input()  pId:number;\r\n  @Input()  aId:number;\r\n\r\n  public patientvisitdata: PatientVisit[]=[];\r\n  public patientAllergyData: PatientAllergy[]=[];\r\n  public patientDiagnosisData: PatientDiagnosis[]=[];\r\n  public patientProcedureData: PatientProcedure[]=[];\r\n  public patientMedicationData: PatientMedication[]=[];\r\n  \r\n  fg: FormGroup = new FormGroup({\r\n    height: new FormControl('',Validators.required),\r\n    weight: new FormControl('',Validators.required),\r\n    bloodpressuresystolic: new FormControl('',Validators.required),\r\n    bloodpressurediastolic: new FormControl('',Validators.required),\r\n    bodytemperature: new FormControl('',Validators.required),\r\n    respirationrate : new FormControl('',Validators.required),\r\n    ApptID: new FormControl('',Validators.required),\r\n    PtID: new FormControl('',Validators.required)    \r\n  });\r\n\r\n  constructor(private practitionersvc: PatientService,private toaster: ToasterService) { }\r\n  AddAllergy() \r\n  {               \r\n    this.AllergyRows.push( {allergytype: this.allergytype, chkFatal: this.chkFatal==null?'false':'true' } );\r\n    this.patienvisitallergy = new PatientAllergy(this.allergytype,this.chkFatal==null?'false':'true',this.pId.toString());\r\n    this.ob = this.practitionersvc.SavePatientVisitAllergyData(this.patienvisitallergy)\r\n    \r\n    this.ob.subscribe(      \r\n      data => { \r\n        console.log(data);      \r\n        console.log(\"Output Is: \"+data[\"allergy\"]); \r\n        this.msg = data[\"firstname\"]+ \", has Registered Successfully\" },\r\n      (error: any) => console.log(\"Error in saving patientvisitallergy data\")\r\n      );\r\n    this.allergytype = null;\r\n    this.chkFatal = null;\r\n  }\r\n  AddDiagnosis()\r\n  {\r\n    this.DiagnosisRows.push( {diagnosistype: this.diagnosistype, diagnosisdescription: this.diagnosisdescription} );\r\n    this.patienvisitdiagnosis = new PatientDiagnosis(this.diagnosistype,this.diagnosisdescription,this.pId.toString(),this.aId.toString());\r\n    this.ob = this.practitionersvc.SavePatientVisitDiagnosisData(this.patienvisitdiagnosis)\r\n    \r\n    this.ob.subscribe(      \r\n      data => { \r\n        console.log(data);      \r\n        console.log(\"Output Is: \"+data[\"diagnosis\"]); \r\n        this.msg = data[\"firstname\"]+ \", has Registered Successfully\" },\r\n      (error: any) => console.log(\"Error in saving patientvisitdiagnosis data\")\r\n      );\r\n    this.diagnosistype = null;\r\n    this.diagnosisdescription = null;\r\n  }\r\n  AddProcedure()\r\n  {\r\n    this.ProcedureRows.push( {proceduretype: this.proceduretype, proceduredescription: this.proceduredescription} );\r\n    this.patienvisitprocedure = new PatientProcedure(this.proceduretype,this.proceduredescription,this.pId.toString(),this.aId.toString());\r\n    this.ob = this.practitionersvc.SavePatientVisitProcedureData(this.patienvisitprocedure)\r\n    \r\n    this.ob.subscribe(      \r\n      data => { \r\n        console.log(data);      \r\n        console.log(\"Output Is: \"+data[\"procedure\"]); \r\n        this.msg = data[\"firstname\"]+ \", has Registered Successfully\" },\r\n      (error: any) => console.log(\"Error in saving patientvisitprocedure data\")\r\n      );\r\n    this.proceduretype = null;\r\n    this.proceduredescription = null;\r\n  }\r\n  AddMedication()\r\n  {\r\n    this.MedicationRows.push( {medicationtype: this.medicationtype, medicationdosage: this.medicationdosage,medicationdescription: this.medicationdescription} );\r\n    this.patienvisitmedication = new PatientMedication(this.medicationtype,this.medicationdosage,this.medicationdescription,this.pId.toString(),this.aId.toString());\r\n    this.ob = this.practitionersvc.SavePatientVisitMedicationData(this.patienvisitmedication)\r\n    \r\n    this.ob.subscribe(      \r\n      data => { \r\n        console.log(data);      \r\n        console.log(\"Output Is: \"+data[\"medication\"]); \r\n        this.msg = data[\"firstname\"]+ \", has Registered Successfully\" },\r\n      (error: any) => console.log(\"Error in saving patientvisitmedication data\")\r\n      );\r\n    this.medicationtype = null;\r\n    this.medicationdosage = null;\r\n    this.medicationdescription = null;\r\n  }\r\n  SavePatientVisitDoctor():void\r\n  {\r\n    let operation:string=\"\";\r\n    console.log(this.fg.value.height);\r\n    this.patientvisitdoctor=new PatientVisit(\r\n      this.pId.toString(),this.aId.toString(),this.fg.value.height,this.fg.value.weight,\r\n      this.fg.value.bloodpressuresystolic,this.fg.value.bloodpressurediastolic,\r\n      this.fg.value.bodytemperature,this.fg.value.respirationrate);      \r\n      if(this.patientvisitdata.length > 0)\r\n      {          \r\n          operation=\"PATCH\";  \r\n          this.patientvisitdoctor.id=this.patientvisitdata[0].id;        \r\n      }\r\n      else\r\n      {\r\n        operation=\"POST\";\r\n      }\r\n    if(this.fg.invalid==false)\r\n    { \r\n      this.ob = this.practitionersvc.SavePatientVisitData(this.patientvisitdoctor,operation)\r\n\r\n      this.ob.subscribe(      \r\n        data => { \r\n          console.log(data); \r\n          if(data !=null)\r\n          {\r\n          this.success = true;\r\n          this.toaster.success(\"Success\",\"Visit details of PatientID \"+data[\"patientid\"]+\" updated.\",ToasterPosition.topFull,this.functioncallbackFunction)   \r\n          }     \r\n          console.log(\"Output Is: \"+data[\"height\"]); \r\n          this.msg = data[\"firstname\"]+ \", has Registered Successfully\" },\r\n        (error: any) => console.log(\"Error in saving patientvisitnurse data\")\r\n        );\r\n    }\r\n  }\r\n  loadAppointmentData(aId:number)\r\n  {\r\n    console.log('LoadData'+this.aId);\r\n   this.obpv=this.practitionersvc.GetPatientVisitDataByID(this.aId);\r\n   this.obpv.subscribe(\r\n     (pv:PatientVisit[])=>{this.patientvisitdata=pv;\r\n      console.log(this.patientvisitdata)\r\n       console.log(this.patientvisitdata[0])\r\n     this.fg.patchValue({\r\n       \"height\": this.patientvisitdata[0].height,\r\n       \"weight\": this.patientvisitdata[0].weight,\r\n       \"bloodpressuresystolic\": this.patientvisitdata[0].bloodpressuresystolic,\r\n       \"bloodpressurediastolic\":this.patientvisitdata[0].bloodpressurediastolic,\r\n       \"bodytemperature\":this.patientvisitdata[0].bodytemperature,\r\n       \"respirationrate\":this.patientvisitdata[0].respirationrate       \r\n     })\r\n   },\r\n   (error:any)=>console.log('fails to load nurse data')\r\n   );\r\n  }\r\n  loadAllergyData(pId:number)\r\n  {    \r\n   this.oballergy=this.practitionersvc.GetPatientAllergyDataByPatientID(this.pId);\r\n   this.oballergy.subscribe(\r\n     (pv:PatientAllergy[])=>{this.patientAllergyData=pv;      \r\n       console.log(this.patientAllergyData[0])\r\n       for (let i = 0; i < this.patientAllergyData.length; i++) {\r\n        this.AllergyRows.push( {allergytype: this.patientAllergyData[i].allergy, \r\n          chkFatal: this.patientAllergyData[i].isfatal } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadDiagnosisData(aId:number)\r\n  {   \r\n    \r\n   this.obdiagnosis=this.practitionersvc.GetPatientDiagnosisDataByAppointmentID(this.aId);\r\n   this.obdiagnosis.subscribe(\r\n     (pv:PatientDiagnosis[])=>{this.patientDiagnosisData=pv;      \r\n       console.log(this.patientDiagnosisData[0])\r\n       for (let i = 0; i < this.patientDiagnosisData.length; i++) {\r\n        this.DiagnosisRows.push( {diagnosistype: this.patientDiagnosisData[i].diagnosis, \r\n          diagnosisdescription: this.patientDiagnosisData[i].diagnosisdescription } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadProcedureData(aId:number)\r\n  {   \r\n    \r\n   this.obprocedure=this.practitionersvc.GetPatientProcedureDataByAppointmentID(this.aId);\r\n   this.obprocedure.subscribe(\r\n     (pv:PatientProcedure[])=>{this.patientProcedureData=pv;      \r\n       console.log(this.patientProcedureData[0])\r\n       for (let i = 0; i < this.patientProcedureData.length; i++) {\r\n        this.ProcedureRows.push( {proceduretype: this.patientProcedureData[i].procedure, \r\n          proceduredescription: this.patientProcedureData[i].proceduredescription } );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n  loadMedicationData(aId:number)\r\n  {   \r\n    \r\n   this.obmedication=this.practitionersvc.GetPatientMedicationDataByAppointmentID(this.aId);\r\n   this.obmedication.subscribe(\r\n     (pv:PatientMedication[])=>{this.patientMedicationData=pv;      \r\n       console.log(this.patientMedicationData[0])\r\n       for (let i = 0; i < this.patientMedicationData.length; i++) {\r\n        this.MedicationRows.push( {medicationtype: this.patientMedicationData[i].medication, \r\n          medicationdosage: this.patientMedicationData[i].dosage,\r\n        medicationdescription: this.patientMedicationData[i].medicationdescription} );\r\n      }\r\n       \r\n   },\r\n   (error:any)=>console.log('fails to load allergy data')\r\n   );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    debugger;\r\n    this.loadAppointmentData(this.aId);\r\n    this.loadAllergyData(this.pId);\r\n    this.loadDiagnosisData(this.aId);\r\n    this.loadProcedureData(this.aId);\r\n    this.loadMedicationData(this.aId);\r\n    this.fg.patchValue({      \r\n      \"ApptID\":\"A0\"+this.aId,\r\n      \"PtID\":\"P0\"+this.pId\r\n    })\r\n  }\r\n  functioncallbackFunction(){\r\n    this.success=true;\r\n  }\r\n}\r\n","<div class=\"signup-form\">\r\n    <form class=\"form-group\" [formGroup]=\"fg\" (ngSubmit)=\"SavePatientVisitDoctor()\">        \r\n        <h2>Patient Visit</h2>\r\n        <h3>Patient Details</h3>\r\n        <hr>    \r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"ApptID\">AppointmentID: <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"ApptID\" formControlName=\"ApptID\" disabled>                        \r\n                </div>\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"PtID\">PatientID: <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"PtID\" formControlName=\"PtID\" disabled>                        \r\n                </div>\r\n            </div>\r\n        </div>\r\n        PatientID : P001 | Patient Name: ABC | AppointmentID : A001\r\n        <h3>Vital Signs</h3>\r\n        <hr>        \r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"height\">Height (in cms): <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"height\" formControlName=\"height\">                        \r\n                </div>\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"weight\">Weight (in kgs): <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"weight\" formControlName=\"weight\">                        \r\n                </div>\r\n            </div>            \r\n            <div class=\"row\">\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"bloodpressuresystolic\">Blood Pressure Systolic (in mmHg): <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"bloodpressuresystolic\" formControlName=\"bloodpressuresystolic\">                        \r\n                </div>\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"bloodpressurediastolic\">Blood Pressure Diastolic (in mmHg): <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"bloodpressurediastolic\" formControlName=\"bloodpressurediastolic\">                        \r\n                </div>\r\n            </div>            \r\n            <div class=\"row\">\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"temperature\">Body Temperature (in celsius): <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"bodytemperature\" formControlName=\"bodytemperature\">                        \r\n                </div>\r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"respirationrate\">Respiration Rate (in BPM): <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"respirationrate\" formControlName=\"respirationrate\">                        \r\n                </div>\r\n            </div>                        \r\n        </div>\r\n        <h3>New Allergy</h3>\r\n        <hr>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-4\">\r\n                    <label for=\"Allergytype\">Allergy Type: <span class=\"asterisk\"> *</span></label>\r\n                    <select class=\"form-control\" [(ngModel)]=\"allergytype\" [ngModelOptions]=\"{standalone: true}\" aria-label=\"Default select example\">\r\n                        <!-- <option selected>Select Allergy Type</option> -->\r\n                        <option value=\"Pollen\">Pollen</option>\r\n\t\t\t\t\t\t<option value=\"Fungal\">Fungal</option>\r\n\t\t\t\t\t\t<option value=\"Drug\">Drug</option>\r\n\t\t\t\t\t\t<option value=\"Food\">Food</option>\r\n                      </select>\r\n                      <!-- <input type=\"text\" [(ngModel)]=\"name\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"name\" /> -->\r\n                </div>                \r\n                <div class=\"col-xs-8\">\r\n                    <label for=\"fatalallergy\">Fatal Allergy? <span class=\"asterisk\"> *</span></label><br>\r\n                    <input type=\"checkbox\" id=\"chkFatal\" name=\"chkFatal\" [(ngModel)]=\"chkFatal\" [ngModelOptions]=\"{standalone: true}\" value=\"True\">                    \r\n                    <!-- <label class=\"radio-inline\"><input type=\"radio\" [(ngModel)]=\"year\" [ngModelOptions]=\"{standalone: true}\" name=\"optradio\" checked>True</label>\r\n                    <label class=\"radio-inline\"><input type=\"radio\" [(ngModel)]=\"year\" [ngModelOptions]=\"{standalone: true}\" name=\"optradio\">False</label>                     -->\r\n                    <!-- <input type=\"text\" [(ngModel)]=\"year\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"year\" /> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <button id=\"btnSubmitAllergy\" type=\"button\" (click)=\"AddAllergy()\" class=\"btn\">Add Allergy</button>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <table class=\"table table-hover table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Allergy</th><th>Fatal Allergy?</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let row of AllergyRows\">                  \r\n                        <td>{{row.allergytype}}</td>\r\n                        <td>{{row.chkFatal}}</td>\r\n                      </tr>\r\n                </tbody>                                \t\t\t\t\r\n            </table>\r\n        </div>\r\n        <h3>Diagnosis</h3>\r\n        <hr>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-4\">\r\n                    <label for=\"Title\">Diagnosis: <span class=\"asterisk\"> *</span></label>\r\n                    <select class=\"form-control\" [(ngModel)]=\"diagnosistype\" [ngModelOptions]=\"{standalone: true}\" aria-label=\"Default select example\">\r\n                        <option selected>Select Diagnosis</option>\r\n                        <option value=\"DD01\">DD01</option>\r\n                        <option value=\"DD02\">DD02</option>\r\n                        <option value=\"DD03\">DD03</option>\r\n                        <option value=\"DD04\">DD04</option>\r\n                      </select>\r\n                </div>                \r\n                <div class=\"col-xs-8\">\r\n                    <label for=\"DiagnosisDescription\">Diagnosis Description: <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"diagnosisdescription\" [ngModelOptions]=\"{standalone: true}\"/>\r\n                    <!-- <span class=\"asterisk\" *ngIf=\"fg.get('lastname').touched && fg.get('lastname').errors?.required\">\r\n                        LastName is required!\r\n                    </span> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <button id=\"btnSubmit\" type=\"button\" (click)=\"AddDiagnosis()\" class=\"btn\">Add Diagnosis</button>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <table class=\"table table-hover table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Diagnosis</th><th>Diagnosis Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let row of DiagnosisRows\">                  \r\n                        <td>{{row.diagnosistype}}</td>\r\n                        <td>{{row.diagnosisdescription}}</td>\r\n                      </tr>                    \r\n                </tbody>                                \t\t\t\t\r\n            </table>          \r\n        </div>\r\n        <h3>Procedure</h3>\r\n        <hr>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-4\">\r\n                    <label for=\"Title\">Procedure: <span class=\"asterisk\"> *</span></label>\r\n                    <select class=\"form-control\" [(ngModel)]=\"proceduretype\" [ngModelOptions]=\"{standalone: true}\" aria-label=\"Default select example\">\r\n                        <option selected>Select Procedure</option>\r\n                        <option value=\"P01\">P01</option>\r\n\t\t\t\t\t\t<option value=\"P02\">P02</option>\r\n\t\t\t\t\t\t<option value=\"P03\">P03</option>\r\n\t\t\t\t\t\t<option value=\"P04\">P04</option>\r\n                      </select>\r\n                </div>                \r\n                <div class=\"col-xs-8\">\r\n                    <label for=\"lastname\">Procedure Description: <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"proceduredescription\" [ngModelOptions]=\"{standalone: true}\"/>\r\n                    <!-- <span class=\"asterisk\" *ngIf=\"fg.get('lastname').touched && fg.get('lastname').errors?.required\">\r\n                        LastName is required!\r\n                    </span> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <button id=\"btnSubmit\" type=\"button\" (click)=\"AddProcedure()\" class=\"btn\">Add Procedure</button>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <table class=\"table table-hover table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Procedure</th><th>Procedure Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let row of ProcedureRows\">                  \r\n                        <td>{{row.proceduretype}}</td>\r\n                        <td>{{row.proceduredescription}}</td>\r\n                      </tr>                    \r\n                </tbody>                                \t\t\t\t\r\n            </table>               \r\n        </div>\r\n        <h3>Medication</h3>\r\n        <hr>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-3\">\r\n                    <label for=\"Title\">Medication: <span class=\"asterisk\"> *</span></label>\r\n                    <select class=\"form-control\" [(ngModel)]=\"medicationtype\" [ngModelOptions]=\"{standalone: true}\" aria-label=\"Default select example\">\r\n                        <option selected>Select Medication</option>\r\n                        <option value=\"M01\">M01</option>\r\n\t\t\t\t\t\t<option value=\"M02\">M02</option>\r\n\t\t\t\t\t\t<option value=\"M03\">M03</option>\r\n\t\t\t\t\t\t<option value=\"M04\">M04</option>\r\n                      </select>\r\n                </div> \r\n                <div class=\"col-xs-3\">\r\n                    <label for=\"Title\">Dosage: <span class=\"asterisk\"> *</span></label>\r\n                    <select class=\"form-control\" [(ngModel)]=\"medicationdosage\" [ngModelOptions]=\"{standalone: true}\" aria-label=\"Default select example\">\r\n                        <option selected>Select Dosage</option>\r\n                        <option value=\"10mg\">10mg</option>\r\n\t\t\t\t\t\t<option value=\"20mg\">20mg</option>\r\n\t\t\t\t\t\t<option value=\"30mg\">30mg</option>\r\n\t\t\t\t\t\t<option value=\"40mg\">40mg</option>\r\n                      </select>\r\n                </div>                \r\n                <div class=\"col-xs-6\">\r\n                    <label for=\"lastname\">Medication Description: <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"medicationdescription\" [ngModelOptions]=\"{standalone: true}\"/>\r\n                    <!-- <span class=\"asterisk\" *ngIf=\"fg.get('lastname').touched && fg.get('lastname').errors?.required\">\r\n                        LastName is required!\r\n                    </span> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <button id=\"btnSubmit\" type=\"button\" (click)=\"AddMedication()\" class=\"btn\">Add Medication</button>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <table class=\"table table-hover table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Medication</th><th>Dosage</th><th>Medication Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let row of MedicationRows\">                  \r\n                        <td>{{row.medicationtype}}</td>\r\n                        <td>{{row.medicationdosage}}</td>\r\n                        <td>{{row.medicationdescription}}</td>\r\n                      </tr>                    \r\n                </tbody>                                \t\t\t\t\r\n            </table>        \r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <button id=\"btnFormSubmit\" type=\"submit\" value=\"Submit\" class=\"btn center-block\">Submit</button>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FormGroup,FormControl,Validators} from '@angular/forms';\r\nimport { Doctors } from '../../models/Doctor';\r\nimport { Appointment } from '../../models/Appointment';\r\nimport { throttleTime } from 'rxjs/operators';\r\nimport { DoctorServiceService } from '../../Service/doctor-service.service';\r\nimport {AppointmentService} from '../../Service/appointment.service';\r\nimport {ToasterService} from '../../core/ToasterService';\r\nimport { ToasterPosition } from 'src/app/core/ToasterPosition';\r\nimport { AuthService } from '../../core/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-book-appointment',\r\n  templateUrl: './book-appointment.component.html',\r\n  styleUrls: ['./book-appointment.component.css']\r\n})\r\nexport class BookAppointmentComponent implements OnInit {\r\n\r\n@Input()  drId:number;\r\n\r\npublic ob:Observable<Doctors[]>;\r\npublic doctorsdata: any;\r\npublic ob1:Observable<Appointment[]>;\r\npublic appointmentData;\r\npublic msg:string=\"\";\r\nsuccess: boolean;\r\npublic res: any;\r\n\r\nuserForm: FormGroup = new FormGroup({\r\n  doctorname: new FormControl(''),\r\n  patientname: new FormControl(''),\r\n  appointmentdate: new FormControl('',Validators.required),\r\n  fromtime: new FormControl(null,Validators.required),\r\n  totime: new FormControl('',Validators.required),\r\n  spetiality : new FormControl(''),\r\n  description: new FormControl('')   \r\n});\r\n\r\n  constructor(private doctorsvc:DoctorServiceService\r\n    ,private appointmentsvc:AppointmentService,private toaster:ToasterService,private authService: AuthService) {\r\n   }\r\n\r\n  submit():void{\r\nconsole.log('click done');\r\nconsole.log(this.userForm);\r\n  }\r\n\r\n  getToday(): string {\r\n    return new Date().toISOString().split('T')[0];\r\n  }\r\n\r\n  SaveAppointmentData():void{\r\n    debugger;\r\n    console.log('click done');\r\n    console.log(this.userForm);\r\n    this.appointmentData=new Appointment(0,this.userForm.value.doctorname,this.userForm.value.patientname\r\n      ,this.userForm.value.appointmentdate,this.userForm.value.fromtime,this.userForm.value.totime\r\n      ,this.drId.toString(),this.doctorsdata[\"patientid\"],false,\"\",this.userForm.value.description);\r\n\r\n      if(this.userForm.invalid==false)\r\n      {\r\n      this.ob1=this.appointmentsvc.SaveAppointment(this.appointmentData);\r\n      this.ob1.subscribe(\r\n        dataa => { \r\n          this.res = dataa;\r\n          console.log(this.res);\r\n          if(this.res.code==\"1\"){ \r\n            this.success=true;\r\n            this.toaster.success(\"Success\",this.res.response,ToasterPosition.topFull);\r\n          }else{\r\n            this.toaster.error(\"Error\",this.res.response,ToasterPosition.topFull);\r\n          }  },\r\n        (error: any) =>  {this.toaster.error('Error',error,ToasterPosition.topFull);\r\n         console.log(\"Error in saving Appointment data\")}\r\n      )\r\n      }\r\n  }\r\n\r\n loadData(drId:number)\r\n {\r\n  this.ob=this.doctorsvc.GetDoctorDataById(this.drId,this.authService.email);\r\n  this.ob.subscribe(\r\n  (dr:any)=>{this.doctorsdata=dr;console.log(this.doctorsdata)\r\n  this.userForm.patchValue({\r\n    \"doctorname\": \"Dr. \" +this.doctorsdata[\"drname\"],\r\n    \"patientname\": \"Patient1\",\r\n    \"spetiality\": this.doctorsdata[\"speciality\"]\r\n  })\r\n},\r\n(error:any)=>console.log('fails to load doctors data')\r\n);\r\n }\r\n\r\n functioncallbackFunction(){\r\n  this.success=true;\r\n}\r\n\r\n  ngOnInit(): void {\r\n    debugger;\r\n    console.log(this.drId);\r\n    this.loadData(this.drId); \r\n  }\r\n}\r\n","<div class=\"signup-form\">\r\n    <form class=\"form-group\"  [formGroup]=\"userForm\" (ngSubmit)=\"SaveAppointmentData()\">\r\n        <h2>Book Appointment</h2>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6\">\r\n                    <label for=\"drname\">Doctor: </label>\r\n                    <input type=\"text\" class=\"form-control bold-text\" name=\"drname\" formControlName=\"doctorname\" placeholder=\"\" readonly>\r\n                    \r\n                </div>\r\n                <div class=\"col-xl-6\">\r\n                    <label for=\"ptname\">Patient:</label>\r\n                    <input type=\"text\" class=\"form-control bold-text\" name=\"ptname\" formControlName=\"patientname\" readonly>\r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6\">\r\n                    <label for=\"speciality\">Speciality: </label>\r\n                    <input type=\"text\" class=\"form-control bold-text\" name=\"speciality\" formControlName=\"spetiality\" placeholder=\"\" readonly>\r\n                \r\n                </div>\r\n                <div class=\"col-xl-6\">\r\n                    <label for=\"shdate\">Date: <span class=\"asterisk\"> *</span></label>                    \r\n                    <input type=\"date\" [min]=\"getToday()\" class=\"form-control\" name=\"shdate\" formControlName=\"appointmentdate\">\r\n                    <span class=\"asterisk\" *ngIf=\"userForm.get('appointmentdate').touched && userForm.get('appointmentdate').errors?.required\">\r\n                        Date is required!\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n        <div class=\"col-xl-6\">\r\n            <label for=\"from\">From: <span class=\"asterisk\"> *</span></label>\r\n            <input type=\"time\" class=\"form-control\" name=\"from\" formControlName=\"fromtime\">\r\n            <span class=\"asterisk\" *ngIf=\"userForm.get('fromtime').touched && userForm.get('fromtime').errors?.required\">\r\n                From time is required!\r\n            </span>\r\n        </div>\r\n        <div class=\"col-xl-6\">\r\n            <label for=\"to\">To: <span class=\"asterisk\"> *</span></label>\r\n            <input type=\"time\" class=\"form-control\" name=\"to\" formControlName=\"totime\">\r\n            <span class=\"asterisk\" *ngIf=\"userForm.get('totime').touched && userForm.get('totime').errors?.required\">\r\n                To Time is required!\r\n            </span>\r\n        </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row col-xl-12\">\r\n            <label for=\"desc\">Description: </label>\r\n            <textarea class=\"form-control\" name=\"desc\" formControlName=\"description\"></textarea>\r\n        </div>\r\n        <div class=\"form-group\">            \r\n            <button id=\"btnSubmit\" class=\"btn\" [disabled]=\"!userForm.valid\">Book Appointment</button>\r\n        </div>\r\n    </form>\r\n    <!-- <div>\r\n        <h1 style=\"color: red;\">{{msg}}</h1>\r\n    </div> -->\r\n    <!--<div class=\"text-center\">Already have an account? <a href=\"#\">Sign in</a></div>-->\r\n</div> \r\n","import { Component, OnInit, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport * as data from '../../../assets/jsonData/AllUserdata.json';\r\nimport { RegisterService } from '../../service/register.service';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n//import { Patient } from '../../models/patientModel';\r\nimport { Patients } from '../../models/Patient';\r\nimport { Observable } from 'rxjs';\r\nimport {ToasterService} from '../../core/ToasterService';\r\nimport { ToasterPosition } from 'src/app/core/ToasterPosition';\r\n\r\n@Component({\r\n  selector: 'app-patient-section',\r\n  templateUrl: './patient-section.component.html',\r\n  styleUrls: ['./patient-section.component.css']\r\n})\r\nexport class PatientSectionComponent implements OnInit\r\n{\r\n  value = '';\r\n  private UserData: any;\r\n  private DeleteUserData: any;\r\n  public ob :Observable<Patients[]>;\r\n  public regiterData;\r\n  msg:any;\r\n  public dataSourcePatient: any;  \r\n  public PatientData: Patients[]= [];\r\n  public dataSourcePatientData: Patients[]= [];\r\n  success: boolean;\r\n  //Ng mat-table columns\r\n  displayedColumns = [\r\n    'PatientID',\r\n    'FullName',\r\n    'DOB',\r\n    'EmailID',\r\n    'ContactNo',\r\n    'Status',\r\n    'Blocked_Unblocked',\r\n    'View_Edit_Delete'\r\n  ];\r\n\r\n  // Ng Pop Up Model\r\n  constructor(config: NgbModalConfig, private modalService: NgbModal\r\n    , private registerService: RegisterService,private toaster:ToasterService) {\r\n    //modals used by this component\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n    // console.log(\"Heeellllelele\");      \r\n  }\r\n  \r\n  public Getjson():void\r\n  {\r\n    this.ob = this.registerService.GetPatientJsonDatas()\r\n    this.ob.subscribe(\r\n      data => { \r\n        console.log(\"Output\");\r\n        console.log(data);\r\n        this.PatientData = data;\r\n        this.dataSourcePatientData = data;\r\n      },\r\n      (error: any) => console.log(\"Error in saving regiter data\")\r\n      );\r\n      this.dataSourcePatient = new MatTableDataSource(this.PatientData);\r\n      console.log(\"Data Source: \"+this.PatientData);\r\n  }\r\n // View by Id function\r\n public GetdataById(id: number)\r\n {\r\n   this.ob = this.registerService.GetPatientJsonDatasByID(id)\r\n   this.ob.subscribe(\r\n   data => {this.UserData= data; console.log(data)});\r\n   // console.log(\"USerdata : \"+this.UserData.id);\r\n }\r\n // Delete by Id function\r\n public DeletedataById(id: number)\r\n {\r\n   this.ob = this.registerService.DeletePatientJsonDatasByID(id)\r\n   this.ob.subscribe(\r\n   data => {this.DeleteUserData= data;});\r\n   console.log(\"DeleteUserData : \"+this.DeleteUserData.id);\r\n }\r\n applyFilter()\r\n {\r\n   debugger;\r\n   console.log(this.value);\r\n\r\n   if(this.value!='')\r\n   {\r\n   this.dataSourcePatientData=this.PatientData.filter(p => p.fullName.includes(this.value));\r\n   }\r\n   else\r\n   {\r\n   this.dataSourcePatientData=this.PatientData;\r\n   }\r\n   console.log(this.PatientData);    \r\n }\r\n // Ng Pop Up Model\r\n open(content)\r\n { // Ng Pop Up Model \r\n   this.modalService.open(content,{ size:'xl',centered:true,scrollable:true});     \r\n }\r\n\r\n Viewopen(Viewcontent, id?:number)\r\n { // Ng Pop Up Model       \r\n   this.modalService.open(Viewcontent,{ size:'md',centered:true,scrollable:false});  \r\n   this.GetdataById(id);\r\n  }\r\n Deleteopen(Deletecontent, id?:number)\r\n { // Ng Pop Up Model       \r\n   this.modalService.open(Deletecontent,{ size:'md',centered:true,scrollable:true});\r\n   this.GetdataById(id);\r\n   // this.DeletedataById(id);\r\n }\r\n Editopen(Editcontent, id?:number)\r\n {\r\n   this.modalService.open(Editcontent,{ size:'md',centered:true,scrollable:true});  \r\n   // this.GetdataById(id);\r\n }\r\n // getToday(): string\r\n // {\r\n //    return new Date().toISOString().split('T')[0];\r\n // }\r\n\r\n SoftDeletePatientData(patientId:Number): void\r\n {\r\n   debugger;\r\n   this.modalService.dismissAll();\r\n   console.log(\"ts.SoftDeletePatientData() hits\");\r\n \r\n  let obj:any={};\r\n  obj.id=patientId,\r\n  obj.status=\"InActive\";\r\n  \r\n   this.ob =this.registerService.SoftDeletePatienData(obj)\r\n \r\n   this.ob.subscribe(\r\n     dataa => { \r\n       console.log(dataa);   \r\n       if(data !=null)\r\n       {\r\n       this.success = true;\r\n       this.toaster.success(\"Success\",\"Patient Deleted.\",ToasterPosition.topFull,this.functioncallbackFunction)   \r\n       }\r\n      },\r\n     (error: any) => console.log(\"Error in deleteing patient data\")\r\n   );\r\n   }\r\n\r\n   functioncallbackFunction(){\r\n    this.success=true;\r\n  }\r\n\r\n ngOnInit(): void\r\n {\r\n   this.Getjson();\r\n }\r\n\r\n}\r\n","<div class=\"divclass\">\r\n  <div class=\"form-group\">\r\n    <table class=\"mat-elevation-z8\" [ngClass]=\"{'btnCenter': true}\">\r\n      <th>\r\n        <mat-form-field class=\"example-form-field\">\r\n          <!-- <mat-label>Search Block/UnBlock</mat-label> -->\r\n          <input matInput type=\"text\" [(ngModel)]=\"value\" (keyup)=\"applyFilter()\" placeholder=\"Search here...\">\r\n        </mat-form-field>\r\n      </th>\r\n      <!-- <th>\r\n        <button class=\"btn\" style=\"float: right;\" (click)=\"open(content)\" [ngClass]=\"{'bgColorAdd': true}\" ><mat-icon>person_add</mat-icon></button>\r\n      </th>  -->\r\n    </table>\r\n  </div>\r\n<div class=\"form-group\">\r\n<table mat-table [dataSource]=\"dataSourcePatientData\" class=\"mat-elevation-z8\" [ngClass]=\"{'Tableclass': true}\">\r\n    <!--- Note that these columns can be defined in any order.\r\n          The actual rendered columns are set as a property on the row definition\" -->          \r\n    <!-- DrID Column -->\r\n    <ng-container matColumnDef=\"PatientID\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Patient ID. </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n    </ng-container>  \r\n    <!-- FullName Column -->\r\n    <ng-container matColumnDef=\"FullName\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Full Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.fullName}} </td>\r\n    </ng-container>  \r\n    <!-- Date_of_Birth Column -->\r\n    <ng-container matColumnDef=\"DOB\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> DOB </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.dob}} </td>\r\n    </ng-container>  \r\n    <!-- EmailID Column -->\r\n    <ng-container matColumnDef=\"EmailID\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> EmailID </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\r\n    </ng-container> \r\n    <!-- ContactNo Column -->\r\n    <ng-container matColumnDef=\"ContactNo\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> ContactNo </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.contact}} </td>\r\n    </ng-container>  \r\n    <!-- Address Column -->\r\n    <!-- <ng-container matColumnDef=\"Address\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Address </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Address}} </td>\r\n    </ng-container> -->\r\n     <!-- Allergies Column -->\r\n     <!-- <ng-container matColumnDef=\"Allergies\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Allergies </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Allergies}} </td>\r\n    </ng-container> -->\r\n    <!-- Status Column -->\r\n    <ng-container matColumnDef=\"Status\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Status </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\r\n    </ng-container>\r\n    <!-- Blocked_Unblocked Column -->\r\n    <ng-container matColumnDef=\"Blocked_Unblocked\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Is Locked </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.blocked_unblocked}} </td>\r\n    </ng-container>\r\n        <!-- View/Edit/Delete Column -->\r\n   <ng-container matColumnDef=\"View_Edit_Delete\">\r\n    <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Actions </th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <button class=\"btn\"  (click)=\"Viewopen(Viewcontent,element.id )\" [ngClass]=\"{'bgColor': true}\" style=\"float: left;\" title=\"View\"><mat-icon>visibility</mat-icon></button>\r\n      <!-- <button class=\"btn\" (click)=\"Editopen(Editcontent,element.id )\" [ngClass]=\"{'bgColor': true}\" style=\"float: left;\" title=\"Edit\"><mat-icon>edit</mat-icon></button> -->\r\n      <button class=\"btn\" (click)=\"Deleteopen(Deletecontent,element.id )\" [ngClass]=\"{'bgColor': true}\" style=\"float: left;\" title=\"Archive\"><mat-icon>delete</mat-icon></button>\r\n    </td>\r\n  </ng-container>\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n</div>\r\n<mat-paginator [length]=\"100\"\r\n[pageSize]=\"10\"\r\n[pageSizeOptions]=\"[5, 10, 25, 100]\" style=\"color: #0047AB; font-size: small;\">\r\n</mat-paginator>\r\n</div>\r\n\r\n\r\n<div class=\"modalTagReg\">\r\n <!-- View By ID PopUp -->\r\n <ng-template #Viewcontent let-modal>\r\n  <div class=\"modal-header\" *ngIf=\"UserData\">\r\n    <!-- <h4 class=\"modal-title\" id=\"modal-basic-title\">Profile update</h4> -->\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\" *ngFor=\"let item of UserData\">\r\n    <h1 style=\"text-align: left;\">User id:  {{item.id}} </h1>\r\n    <!-- <form *ngFor=\"let item of dataSourceDoctorData\" [(ngModel)]=\"dataSourceDoctorData\"> -->\r\n      <form >    \r\n        <div class=\"main main-raised\" >\r\n          <div class=\"profile-content\">\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 ml-auto mr-auto\">\r\n                  <div class=\"profile\">\r\n                    <div class=\"avatar\">\r\n                      <img src=\"../../../assets/images/UserProfileIcon.webp\" alt=\"Circle Image\" class=\"img-raised rounded-circle\" [ngClass]=\"{'person_pin': true}\">\r\n                    </div>\r\n                    <div class=\"avatar\">\r\n                      <table style=\"font-family: arial, sans-serif;border-collapse: collapse; width: 100%;\" [ngClass]=\"{'ViewPoptable': true}\">\r\n                        <tr>\r\n                          <th>Full Name</th>\r\n                          <th><h3 class=\"title\">{{item.fullName}}</h3></th>                          \r\n                        </tr>\r\n                        <!-- <tr>\r\n                          <th>Specialties</th>\r\n                          <td><h3>{{item.Specialties}}</h3></td>\r\n                        </tr> -->\r\n                        </table>\r\n                    </div>                   \r\n                  </div>\r\n                  <div class=\"name\">                      \r\n                    <!-- <hr/> -->\r\n                    <table class=\"table table-hover\" style=\"font-family: arial, sans-serif;border-collapse: collapse; width: 100%;\" [ngClass]=\"{'ViewPoptable': true}\">\r\n                      <tr>\r\n                        <td>Date of Birth</td>\r\n                        <td>{{item.dob}}</td>                          \r\n                      </tr>\r\n                      <tr>\r\n                        <td>Email Id</td>\r\n                        <td>{{item.email}}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Phone No.</td>\r\n                        <td>{{item.contact}}g</td>\r\n                      </tr>\r\n                      <!-- <tr>\r\n                        <td>Address</td>\r\n                        <td>{{item.Address}}</td>\r\n                      </tr> -->\r\n                      <tr>\r\n                        <td>Status</td>\r\n                        <td>{{item.status}}</td>\r\n                      </tr>                        \r\n                    </table>                    \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- <div class=\"description text-center\">\r\n                <p>An artist of considerable range, Chet Faker — the name taken by Melbourne-raised, Brooklyn-based Nick Murphy — writes, performs and records all of his own music, giving it a warm, intimate feel with a solid groove structure. </p>\r\n              </div> -->\r\n              <!-- <div class=\"row\">\r\n                <div class=\"col-md-6 ml-auto mr-auto\">\r\n                  <div class=\"profile-tabs\">\r\n                    <ul class=\"nav nav-pills nav-pills-icons justify-content-center\" role=\"tablist\">\r\n                    <li class=\"nav-item\">\r\n                      <a class=\"nav-link active\" href=\"#studio\" role=\"tab\" data-toggle=\"tab\">\r\n                        <i class=\"material-icons\">camera</i>\r\n                        Studio\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                      <a class=\"nav-link\" href=\"#works\" role=\"tab\" data-toggle=\"tab\">\r\n                        <i class=\"material-icons\">palette</i>\r\n                        Work\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                      <a class=\"nav-link\" href=\"#favorite\" role=\"tab\" data-toggle=\"tab\">\r\n                        <i class=\"material-icons\">favorite</i>\r\n                        Favorite\r\n                      </a>\r\n                    </li>\r\n                    </ul>\r\n                  </div>\r\n              </div>\r\n            </div>\t -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <!-- <button type=\"button\" class=\"btn btn-outline\" (click)=\"modal.close('Save click')\">Save</button> -->\r\n  </div>\r\n</ng-template>\r\n  <!-- View By ID PopUp -->\r\n\r\n  <!-- Edit By ID PopUp -->  \r\n  <ng-template #Editcontent let-modal>\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\">Update records</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <!-- Update Modal -->\r\n      <h1 style=\"text-align: center;\">Doctor & Nurse Registration</h1>\r\n      <div class=\"signup-form\">\r\n          <form class=\"form-group\" [formGroup]=\"fg\" (ngSubmit)=\"SavePractitionerData()\">\r\n              <h2>Register</h2>\r\n              <div class=\"form-group\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-xs-2\">\r\n                    <label for=\"Title\">Title: <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"title\" formControlName=\"title\" placeholder=\"\" required=\"required\">\r\n                    <span class=\"asterisk\" *ngIf=\"fg.get('title').touched && fg.get('title').errors?.required\">\r\n                      Title is required!\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"col-xs-5\">\r\n                    <label for=\"firstname\">First Name: <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"firstname\" formControlName=\"firstname\">\r\n                    <span class=\"asterisk\" *ngIf=\"fg.get('firstname').touched && fg.get('firstname').errors?.required\">\r\n                      FirstName is required!\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"col-xs-5\">\r\n                    <label for=\"lastname\">Last Name: <span class=\"asterisk\"> *</span></label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"lastname\" formControlName=\"lastname\">\r\n                    <span class=\"asterisk\" *ngIf=\"fg.get('lastname').touched && fg.get('lastname').errors?.required\">\r\n                      LastName is required!\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"email\">Email: <span class=\"asterisk\"> *</span></label>\r\n                <input type=\"email\" class=\"form-control\" name=\"email\" formControlName=\"email\">\r\n                <span class=\"asterisk\" *ngIf=\"fg.get('email').touched && fg.get('email').errors?.required\">\r\n                  Email is required!\r\n                </span>\r\n                <span class=\"asterisk\" *ngIf=\"fg.get('email').touched && fg.get('email').errors?.email\">\r\n                  Email is not valid!\r\n                </span>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-xs-6\">\r\n                    <label for=\"email\">DOB: <span class=\"asterisk\"> *</span></label>                    \r\n                    <input type=\"date\" [max]=\"getToday()\" class=\"form-control\" name=\"dob\" formControlName=\"dob\">\r\n                    <span class=\"asterisk\" *ngIf=\"fg.get('dob').touched && fg.get('dob').errors?.required\">\r\n                      DOB is required!\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"col-xs-6\">\r\n                    <label for=\"role\">Role: </label><br />\r\n                    <label class=\"radio-inline\"><input type=\"radio\" formControlName=\"role\" name=\"role\" value=\"Doctor\" checked>Doctor</label>\r\n                    <label class=\"radio-inline\"><input type=\"radio\" formControlName=\"role\" name=\"role\" value=\"Nurse\">Nurse</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"contactno\">Contact No: <span class=\"asterisk\"> *</span></label>\r\n                <input type=\"text\" class=\"form-control\" name=\"contactno\" formControlName=\"contactno\">\r\n                <span class=\"asterisk\" *ngIf=\"fg.get('contactno').touched && fg.get('contactno').errors?.required\">\r\n                  contact no is required!\r\n                </span>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"address\">Address: <span class=\"asterisk\"> *</span></label>\r\n                <input type=\"text\" class=\"form-control\" name=\"address\" formControlName=\"address\">\r\n                <span class=\"asterisk\" *ngIf=\"fg.get('address').touched && fg.get('address').errors?.required\">\r\n                  Address is required!\r\n                </span>            \r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"speciality\">Speciality: <span class=\"asterisk\"> *</span></label>\r\n                <input type=\"text\" class=\"form-control\" name=\"speciality\" formControlName=\"speciality\">\r\n                <span class=\"asterisk\" *ngIf=\"fg.get('speciality').touched && fg.get('speciality').errors?.required\">\r\n                  Speciality is required!\r\n                </span>            \r\n              </div>\r\n              <div class=\"form-group\">\r\n                <button id=\"btnSubmit\" class=\"btn\" [disabled]=\"!fg.valid\">Register Now</button>\r\n                <button id=\"btnSubmit\" class=\"btn\" >Clear</button>\r\n              </div>\r\n          </form>\r\n          <div>\r\n            <h1 style=\"color: red;\">{{msg}}</h1>\r\n          </div>\r\n      </div>\r\n      <!-- Update Modal -->\r\n          </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Yes</button>\r\n      <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">No</button>\r\n    </div>\r\n  </ng-template>\r\n  <!-- Edit By ID PopUp -->\r\n\r\n   <!-- Delete By ID PopUp -->  \r\n  <ng-template #Deletecontent let-modal>\r\n    <div class=\"modal-header\" *ngIf=\"UserData\">\r\n      <!-- <h4 class=\"modal-title\" id=\"modal-basic-title\">Profile update</h4> -->\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\" *ngFor=\"let item of UserData\">\r\n      <!-- <h1 style=\"text-align: left;\">User id: {{item.id}} is deleted</h1>        -->\r\n      <!-- <hr> -->\r\n      <h2>Are you sure you want to delete the user:</h2> <h3>{{item.fullName}}</h3>\r\n      <!-- <p>If delete click on delete or Cancel</p> -->\r\n    <!-- </div> -->\r\n    <!-- <button class=\"btn\" [ngClass]=\"{'bgColor': true}\" style=\"float: left;\" title=\"Delete\">Delete</button> -->\r\n    <div class=\"modal-footer\">\r\n      <!-- <button class=\"btn\" [ngClass]=\"{'bgColor': true}\" style=\"float: left;\" title=\"Delete\">Delete</button> -->\r\n      <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"SoftDeletePatientData(item.id)\" title=\"Delete\">Delete</button>\r\n      <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"modal.close('Save click')\" title=\"Cancel\">Cancel</button>\r\n    </div>\r\n    </div>\r\n  </ng-template>\r\n  <!-- Delete By ID PopUp -->\r\n</div>","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable, observable, pipe} from 'rxjs';\r\nimport {map, catchError} from 'rxjs/operators';\r\nimport {PatientDemographicData} from '../Models/PatientDemographicData';\r\nimport {PatientAllergy} from '../Models/PatientAllergy';\r\nimport { PatientVisit } from '../Models/patientvisit';\r\nimport {PatientDiagnosis} from '../Models/patientdiagnosis';\r\nimport {PatientProcedure} from '../Models/patientprocedure';\r\nimport {PatientMedication} from '../Models/patientmedication';\r\nimport {Patients} from '../models/Patient';\r\nimport { ConfigService } from '../core/config.service';\r\nimport { BaseService } from '../core/base.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatientService extends BaseService{\r\n\r\n  constructor(private httpsvc:HttpClient, private config:ConfigService) {\r\n    super();\r\n   }\r\n\r\n \r\n  public GetPatientAllergyDataByID(userName: string):Observable<any>\r\n  {\r\n      return this.httpsvc.get<PatientAllergy>(this.config.patientManagementAPI+\"/Patient/getallergy?userName=\"+userName);\r\n  }\r\n\r\n  // public GetPatientDemographicDataByID(PatientID: number):Observable<any>\r\n  // {\r\n  //     return this.httpsvc.get<PatientDemographicData>(\"http://localhost:3000/DemographicData?patientid=\"+PatientID);\r\n  // }\r\n  public GetPatientDemographicDataByID(userName: string):Observable<any>\r\n  {\r\n    debugger;\r\n    const headers={'Access-Control-Allow-Origin':'http://localhost:54877',\r\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,OPTIONS'};\r\n       return this.httpsvc.get<PatientDemographicData>(this.config.patientManagementAPI+\"/Patient/getdemographic?userName=\"+userName);\r\n      // return this.httpsvc.get<PatientDemographicData>(\"https://localhost:44326/api/department\");\r\n  }\r\n\r\n\r\n  public GetPatientDataByID(userName: string):Observable<any>\r\n  {\r\n      return this.httpsvc.get<any>(this.config.patientManagementAPI+\"/Patient/getpatient?userName=\"+userName);\r\n  }\r\n\r\n  public GetAllergyMaster():Observable<any>\r\n  {\r\n      return this.httpsvc.get<any>(this.config.patientManagementAPI+\"/Patient/getallergydata\");\r\n  }\r\n\r\n  public SaveAllergyData(userName:string,pal:PatientAllergy):Observable<any>\r\n  {\r\n    console.log(\"service.SaveAllergyData() hits\");\r\n    //  const headers={'content-type':'application/json'};\r\n    let header = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n     });\r\n    if(userName != \"\")\r\n    {\r\n      return this.httpsvc.post<PatientAllergy>(this.config.patientManagementAPI+\"/Patient/addallergy?userName=\"+userName,JSON.stringify(pal),{headers:header}).pipe(catchError(this.handleError));\r\n    }\r\n  }\r\n\r\n  public SaveDemographicData(userName:string,pdgd:PatientDemographicData,operation:string):Observable<any>\r\n  {\r\n    debugger;\r\n    console.log(\"service.SaveAllergyData() hits\");\r\n    let header = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n     });\r\n    if(pdgd.patientid >= 0)\r\n    {      \r\n      if(operation===\"POST\")\r\n      return this.httpsvc.post<PatientDemographicData>(this.config.patientManagementAPI+\"/Patient/adddemographic?userName=\"+userName,JSON.stringify(pdgd),{'headers':header});\r\n      else\r\n      return this.httpsvc.patch<PatientDemographicData>(this.config.patientManagementAPI+\"/Patient/updatedemographic?userName=\"+userName,JSON.stringify(pdgd),{'headers':header});\r\n    }\r\n  }\r\n  public SavePatientVisitData(p:PatientVisit,operation:string):Observable<any>\r\n    {\r\n      console.log(\"service.SavePatientVisitData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n      if(operation===\"POST\")\r\n      {\r\n        return this.httpsvc.post<PatientVisit>(\"http://localhost:3000/PatientVisit\", JSON.stringify(p),{'headers':headers});      \r\n      }\r\n      else\r\n      {\r\n        debugger;\r\n        return this.httpsvc.patch<PatientVisit>(\"http://localhost:3000/PatientVisit/\"+p.id, JSON.stringify(p),{'headers':headers});      \r\n      }        \r\n    }\r\n    public SavePatientVisitAllergyData(p:PatientAllergy):Observable<any>\r\n    {\r\n      console.log(\"service.SavePatientVisitNurseData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n        return this.httpsvc.post<PatientAllergy>(\"http://localhost:3000/Allergy\", JSON.stringify(p),{'headers':headers});      \r\n    }\r\n    public SavePatientVisitDiagnosisData(p:PatientDiagnosis):Observable<any>\r\n    {\r\n      console.log(\"service.SavePatientVisitNurseData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n        return this.httpsvc.post<PatientDiagnosis>(\"http://localhost:3000/Diagnosis\", JSON.stringify(p),{'headers':headers});      \r\n    }\r\n    public SavePatientVisitProcedureData(p:PatientProcedure):Observable<any>\r\n    {\r\n      console.log(\"service.SavePatientVisitNurseData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n        return this.httpsvc.post<PatientProcedure>(\"http://localhost:3000/Procedure\", JSON.stringify(p),{'headers':headers});      \r\n    }\r\n    public SavePatientVisitMedicationData(p:PatientMedication):Observable<any>\r\n    {\r\n      console.log(\"service.SavePatientVisitNurseData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n        return this.httpsvc.post<PatientMedication>(\"http://localhost:3000/Medication\", JSON.stringify(p),{'headers':headers});      \r\n    }\r\n    public SavePatientData(p:Patients):Observable<any>\r\n    {\r\n      console.log(\"service.SavePatientData() hits\");\r\n      console.log(JSON.stringify(p));\r\n      const headers = { 'content-type': 'application/json'}  \r\n      if(p.email != \"\")\r\n      {\r\n        //return this.httpsvc.post<Patients>(\"http://localhost:3000/Patient\", JSON.stringify(p),{'headers':headers});\r\n        return this.httpsvc.post<Patients>(this.config.authApiURI+\"/patient\",p).pipe(catchError(this.handleError));\r\n      }\r\n    }\r\n    public GetPatientVisitDataByID(aID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientVisit>(\"http://localhost:3000/PatientVisit?appointmentid=\"+aID);\r\n    }\r\n    public GetPatientAllergyDataByPatientID(pID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientAllergy>(\"http://localhost:3000/Allergy?patientid=\"+pID);\r\n    }\r\n    public GetPatientDiagnosisDataByAppointmentID(aID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientDiagnosis>(\"http://localhost:3000/Diagnosis?appointmentid=\"+aID);\r\n    }\r\n    public GetPatientProcedureDataByAppointmentID(aID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientProcedure>(\"http://localhost:3000/Procedure?appointmentid=\"+aID);\r\n    }\r\n    public GetPatientMedicationDataByAppointmentID(aID: number):Observable<any>\r\n    {           \r\n        return this.httpsvc.get<PatientMedication>(\"http://localhost:3000/Medication?appointmentid=\"+aID);\r\n    }    \r\n}\r\n","import { Component, OnInit, Output, EventEmitter,OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../../core/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport {Notification} from '../../models/Notification';\r\nimport {NotificationsService} from '../../service/notifications.service';\r\nimport {DatePipe} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css'],\r\n  providers:[DatePipe]\r\n})\r\nexport class ToolbarComponent implements OnInit,OnDestroy {\r\n\r\n  @Output()\r\n  public toggle:EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  //#region Notification\r\n  public badgeValue:string=\"0\";\r\n  public ob :Observable<Notification[]>;\r\n  public notificationData:Notification[]=[];\r\n  //#endregion\r\n\r\n  constructor(private router: Router,private route: ActivatedRoute,private authService:AuthService\r\n    ,private notificationsvc:NotificationsService,private datepipe: DatePipe) { }\r\n\r\n  name: string;\r\n  isAuthenticated: boolean;\r\n  subscription:Subscription;\r\n  \r\n  public Toggle(): void\r\n  {\r\n    this.toggle.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.authService.authNavStatus$.subscribe(status => this.isAuthenticated = status);\r\n    this.name = this.authService.name;\r\n    this.loadNotifications();\r\n  }\r\n  async signout() {\r\n    await this.authService.signout();     \r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  ChangePasswdClick(eventsource: any): void\r\n  {\r\n    this.router.navigate(['changepassword'],{ relativeTo: this.route });\r\n  }\r\n  HomeClick(eventsource: any): void\r\n  {\r\n    // this.router.navigate([''],{ relativeTo: this.route });\r\n    this.router.navigate(['/sharedwrapperhome']);   \r\n  }\r\n\r\n    //#region Notification\r\n  loadNotifications()\r\n  {\r\n    debugger;\r\n    this.ob = this.notificationsvc.GetNotificationsByID(this.authService.email);\r\n    this.ob.subscribe(\r\n      data => { \r\n        console.log(\"Output\");\r\n        console.log(data);\r\n        this.notificationData = data;\r\n        this.badgeValue=data.length.toString();\r\n      },\r\n      (error: any) => console.log(\"Error in fetching notification data\")\r\n      );\r\n  }\r\n\r\n  setIsSeenNotification(notificationId:number)\r\n  {\r\n    console.log(notificationId);\r\n   console.log(\"ts.setIsSeenNotification() hits\"); \r\n  // let obj:any={};\r\n  // obj.id=notificationId,\r\n  // obj.isSeen=true;\r\n  \r\n   this.ob =this.notificationsvc.SetIsSeenNotification(notificationId);\r\n \r\n   this.ob.subscribe(\r\n     dataa => { \r\n       console.log(dataa); \r\n       this.loadNotifications();\r\n      },\r\n     (error: any) => console.log(\"Error Occured\")\r\n   );\r\n  }\r\n\r\n  getNotificationTimeDiff(createdTime:string):string\r\n  {\r\n    console.log(createdTime);\r\n    var dateOneObj = new Date(createdTime).getTime();\r\n    var dateTwoObj = new Date().getTime();\r\n    // var milliseconds = Math.abs(dateOneObj-dateTwoObj)\r\n    // var hours = milliseconds / 36e5;\r\n    // return hours.toString()+\" Hours ago\";\r\n\r\n    var diff =(dateOneObj-dateTwoObj) / 1000;\r\n    var minutes=Math. abs(Math. round(diff/60)).toString();\r\n    console.log(minutes);\r\n    var hours=Math. abs(Math. round(diff/3600)).toString();\r\n    console.log(hours);\r\n    if(parseInt(minutes) < 60)\r\n    {\r\n      return minutes.toString()+\" Minutes ago\"\r\n    }\r\n    else if(parseInt(hours)<24)\r\n    {\r\n      return hours.toString()+\" Hours ago\"\r\n    }\r\n    else\r\n    {\r\n    return this.datepipe.transform(createdTime,\"MMMM d, y\");\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n}\r\n","<mat-toolbar style=\"background-color: slategrey;\" class=\"mat-elevation-z6 tbar\">\r\n    <button #btn mat-button (click)=\"Toggle()\" class=\"sidenav-toggle show\">\r\n        <mat-icon>menu</mat-icon>\r\n        <!-- Button to toggle -->\r\n    </button>\r\n    <!-- <span class=\"color-white\">Patient Section</span> -->\r\n    <span class=\"logout-spacer\"></span>\r\n    <nav *ngIf=\"isAuthenticated\" class=\"my-2 my-md-0 mr-md-3\">\r\n    <button class=\"btn color-white\" (click)=\"HomeClick($event)\"><mat-icon style=\"vertical-align: middle;\">home</mat-icon> Home </button>\r\n    <!-- <button class=\"btn color-white\" (click)=\"ChangePasswdClick($event)\"><mat-icon style=\"vertical-align: middle;\">vpn_key</mat-icon> Change Password </button> -->\r\n    \r\n        <!-- <a class=\"p-2 text-light\" routerLink=\"/topsecret\">Authorized Section</a>   -->\r\n        <!-- <a class=\"p-2 text-light\" (click)=\"signout()\" href=\"javascript:void(0)\">Signout</a>                -->\r\n        \r\n    <div class=\"btn-group mr-3\">\r\n        <button type=\"button\" class=\"btn btn-dark\" (click)=\"signout()\" href=\"javascript:void(0)\">Signout</button>\r\n        <div class=\"btn-group\" ngbDropdown role=\"group\" aria-label=\"Button group with nested dropdown\">\r\n        <button class=\"btn btn-dark dropdown-toggle-split\" ngbDropdownToggle></button>\r\n        <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n            <button ngbDropdownItem class=\"btn btn-secondary\" ><a style=\"text-decoration: none;\" routerlink=\"/sharedwrapperhome/changepassword\" href=\"/sharedwrapperhome/changepassword\">Change Password</a></button>\r\n            <!-- <button ngbDropdownItem>Two</button>\r\n            <button ngbDropdownItem>Four!</button> -->\r\n        </div>\r\n        </div> \r\n    </div>\r\n    <div class=\"btn-group mr-3\" ngbDropdown role=\"group\" aria-label=\"Button group with nested dropdown\">\r\n        <button class=\"btn color-white notification-toggle\" ngbDropdownToggle><mat-icon matBadge={{badgeValue}} matBadgeColor=\"accent\">notifications</mat-icon></button>\r\n    <!-- <button class=\"btn btn-dark dropdown-toggle-split\" ngbDropdownToggle></button> -->\r\n    <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n        <div class=\"card notification-text\" *ngFor=\"let ntf of notificationData\" (click)=\"setIsSeenNotification(ntf.id)\">\r\n            <div class=\"card-body\">\r\n            <h6 class=\"card-title\">{{getNotificationTimeDiff(ntf.createdDate)}}</h6>\r\n            <p class=\"card-text\">{{ntf.notificationText}}</p>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    </nav>\r\n</mat-toolbar>","export class Register{\r\n  constructor(\r\n      public title:string =\"\",\r\n      public firstname:string=\"\",\r\n      public lastname:string=\"\",\r\n      public email:string=\"\",\r\n      public Dob:string=\"\",\r\n      public role:string = \"\",\r\n      public FullName:string =\"\",\r\n      public ContactNo:string = \"\",\r\n      public Address:string =\"\",\r\n      public Specialties: string = \"\",\r\n      public Status:string =\"\",\r\n      public Blocked_Unblocked:string =\"\",\r\n      public id:string =\"\",\r\n      public gender:string=\"\",     \r\n   )\r\n  {\r\n      \r\n  }\r\n\r\nget Title() { return this.title };\r\nset Title(address: string) { this.title = address };\r\n\r\nget FirstName() { return this.firstname };\r\nset FirstName(address: string) { this.firstname = address };\r\n\r\nget LastName() { return this.lastname };\r\nset LastName(address: string) { this.lastname = address };\r\n\r\nget Fullname() { return this.FullName };\r\nset Fullname(address: string) { this.FullName = address };\r\n\r\nget Email() { return this.email };\r\nset Email(address: string) { this.email = address };\r\n\r\nget DOB() { return this.Dob };\r\nset DOB(address: string) { this.Dob = address };\r\n\r\nget Role() { return this.role };\r\nset Role(address: string) { this.role = address };\r\n\r\nget Contactno() { return this.ContactNo };\r\nset Contactno(address: string) { this.ContactNo = address };\r\n\r\nget Addresss() { return this.Address };\r\nset Addresss(address: string) { this.Address = address };\r\n\r\nget Specialtiess() { return this.Specialties };\r\nset Specialtiess(address: string) { this.Specialties = address };\r\n\r\nget Statuss() { return this.Status };\r\nset Statuss(address: string) { this.Status = address };\r\n\r\nget Blocked_unblocked() { return this.Blocked_Unblocked };\r\nset Blocked_unblocked(address: string) { this.Blocked_Unblocked = address };\r\n\r\nget ID() { return this.id };\r\nset ID(address: string) { this.id = address };\r\n\r\nget Gender() { return this.gender };\r\nset Gender(val: string) { this.gender = val };\r\n}\r\n\r\n\r\n\r\n// export class Register{\r\n//     constructor(\r\n//         public title:string =\"\",\r\n//         public firstname:string=\"\",\r\n//         public lastname:string=\"\",\r\n//         public email:string=\"\",\r\n//         public dob:string=\"\",\r\n//         public role:string = \"\"        \r\n//      )\r\n//     {\r\n        \r\n//     }\r\n\r\n  // get Title() { return this.title };\r\n  // set Title(address: string) { this.title = address };\r\n\r\n  // get FirstName() { return this.firstname };\r\n  // set FirstName(address: string) { this.firstname = address };\r\n\r\n  // get LastName() { return this.lastname };\r\n  // set LastName(address: string) { this.lastname = address };\r\n\r\n  // get Email() { return this.email };\r\n  // set Email(address: string) { this.email = address };\r\n\r\n  // get DOB() { return this.dob };\r\n  // set DOB(address: string) { this.dob = address };\r\n\r\n  // get Role() { return this.role };\r\n  // set Role(address: string) { this.role = address };\r\n// }","export class PatientDiagnosis{\r\n    constructor(              \r\n        public diagnosis:string=\"\",\r\n        public diagnosisdescription:string=\"\",\r\n        public patientid:string=\"\",\r\n        public appointmentid:string=\"\"\r\n     )\r\n    {}\r\n\r\n  get Diagnosis() { return this.diagnosis };\r\n  set Diagnosis(data: string) { this.diagnosis = data };\r\n\r\n  get Diagnosisdescription() { return this.diagnosisdescription };\r\n  set Diagnosisdescription(data: string) { this.diagnosisdescription = data };\r\n\r\n  get Patientid() { return this.patientid };\r\n  set Patientid(data: string) { this.patientid = data };\r\n\r\n  get Appointmentid() { return this.appointmentid };\r\n  set Appointmentid(data: string) { this.appointmentid = data };\r\n}","import { Component, OnInit, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport * as data from '../../../assets/jsonData/AllUserdata.json';\r\nimport { RegisterService } from '../../service/register.service';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { Nurse } from '../../models/nurseModel';\r\nimport { Observable } from 'rxjs';\r\nimport { ToasterPosition } from 'src/app/core/ToasterPosition';\r\nimport {ToasterService} from '../../core/ToasterService';\r\n\r\n@Component({\r\n  selector: 'app-nurse-section',\r\n  templateUrl: './nurse-section.component.html',\r\n  styleUrls: ['./nurse-section.component.css'],\r\n  providers: [NgbModalConfig, NgbModal],\r\n})\r\nexport class NurseSectionComponent implements OnInit {\r\n  value = '';\r\n  private UserData: any;\r\n  public ob :Observable<Nurse[]>;\r\n  public regiterData;\r\n  private DeleteUserData: any;\r\n  msg:any;\r\n  public dataSourceNurse: any;  \r\n  public NurseData: Nurse[]= [];\r\n  public dataSourceNurseData: Nurse[]= []; \r\n  public NrIdToUpdate:number; \r\n  success: boolean;\r\n  //Ng mat-table columns\r\n  displayedColumns = [\r\n                      'NurseID',\r\n                      'FullName',\r\n                      'Date_of_Birth',\r\n                      'EmailID',\r\n                      'ContactNo',\r\n                      'Address',\r\n                      'Status',\r\n                      'Blocked_Unblocked',\r\n                      'View_Edit_Delete'\r\n                     ];\r\n  \r\n    // Ng Pop Up Model\r\n    constructor(config: NgbModalConfig, private modalService: NgbModal, private registerService: RegisterService,private toaster:ToasterService) {\r\n      //modals used by this component\r\n      config.backdrop = 'static';\r\n      config.keyboard = false;\r\n    }\r\n\r\n    public Getjson():void\r\n    {\r\n      this.ob = this.registerService.GetNurseJsonDatas()\r\n      this.ob.subscribe(\r\n        data => { \r\n          console.log(\"Output\");\r\n          console.log(data);\r\n          this.NurseData = data;\r\n          this.dataSourceNurseData = data;\r\n        },\r\n        (error: any) => console.log(\"Error in saving regiter data\")\r\n        );\r\n        this.dataSourceNurse = new MatTableDataSource(this.NurseData);\r\n        console.log(\"Data Source: \"+this.NurseData);\r\n    }\r\n  // View by Id function\r\n  public GetdataById(id: number)\r\n  {\r\n    this.ob = this.registerService.GetNurseJsonDatasByID(id)\r\n    this.ob.subscribe(\r\n    data => {this.UserData= data;});\r\n    // console.log(\"USerdata : \"+this.UserData.id);\r\n  }\r\n  // Delete by Id function\r\n  public DeletedataById(id: number)\r\n  {\r\n    this.ob = this.registerService.DeleteNurseJsonDatasByID(id)\r\n    this.ob.subscribe(\r\n    data => {this.DeleteUserData= data;});\r\n    console.log(\"DeleteUserData : \"+this.DeleteUserData.id);\r\n  }\r\n  applyFilter()\r\n  {\r\n    debugger;\r\n    console.log(this.value);\r\n\r\n    if(this.value!='')\r\n    {\r\n    this.dataSourceNurseData=this.NurseData.filter(p => p.FullName.includes(this.value));\r\n    }\r\n    else\r\n    {\r\n    this.dataSourceNurseData=this.NurseData;\r\n    }\r\n    console.log(this.NurseData);    \r\n  }\r\n  // Ng Pop Up Model\r\n  open(content)\r\n  { // Ng Pop Up Model \r\n    this.modalService.open(content,{ size:'xl',centered:true,scrollable:true});     \r\n  }\r\n\r\n  Viewopen(Viewcontent, id?:number)\r\n  { // Ng Pop Up Model       \r\n    this.modalService.open(Viewcontent,{ size:'md',centered:true,scrollable:false});  \r\n    this.GetdataById(id);\r\n  }\r\n  Deleteopen(Deletecontent, id?:number)\r\n  { // Ng Pop Up Model       \r\n    this.modalService.open(Deletecontent,{ size:'md',centered:true,scrollable:true});\r\n    this.GetdataById(id);\r\n    // this.DeletedataById(id);\r\n  }\r\n  Editopen(Editcontent, selectedNrId?:number)\r\n  {    \r\n    this.modalService.open(Editcontent,{ size:'xl',centered:true,scrollable:true});\r\n    this.NrIdToUpdate=selectedNrId;  \r\n    // this.GetdataById(id);\r\n  }\r\n  // getToday(): string\r\n  // {\r\n  //    return new Date().toISOString().split('T')[0];\r\n  // }\r\n  ngOnInit(): void\r\n  {\r\n    this.Getjson();\r\n  }\r\n  SoftDeleteNurseData(nurseId:Number): void\r\n  {\r\n    debugger;\r\n    this.modalService.dismissAll();\r\n    console.log(\"ts.SoftDeletePatientData() hits\");\r\n  console.log(nurseId);\r\n   let obj:any={};\r\n   obj.id=nurseId,\r\n   obj.Status=\"InActive\";\r\n   \r\n    this.ob =this.registerService.SoftDeleteNurseData(obj)\r\n  \r\n    this.ob.subscribe(\r\n      dataa => { \r\n        console.log(dataa);   \r\n        if(data !=null)\r\n        {\r\n         this.success = true;\r\n         this.toaster.success(\"Success\",\"Nurse with Id: \"+nurseId+\" Deleted.\",ToasterPosition.topFull,this.functioncallbackFunction)   \r\n        }\r\n       },\r\n      (error: any) => console.log(\"Error in deleting nurse data\")\r\n    );\r\n    }\r\n    functioncallbackFunction(){\r\n      this.success=true;\r\n    }\r\n    receiveMessage($event) {\r\n      this.modalService.dismissAll();\r\n      this.Getjson();\r\n    }\r\n}\r\n","<div class=\"divclass\">\r\n  <div class=\"form-group\">\r\n    <table class=\"mat-elevation-z8\" [ngClass]=\"{'btnCenter': true}\">\r\n      <th>\r\n        <mat-form-field class=\"example-form-field\">\r\n          <!-- <mat-label>Search Block/UnBlock</mat-label> -->\r\n          <input matInput type=\"text\" [(ngModel)]=\"value\" (keyup)=\"applyFilter()\" placeholder=\"Search here...\">\r\n        </mat-form-field>\r\n      <!-- </th>\r\n      <th> -->\r\n        <button class=\"btn\" style=\"float: right;\" (click)=\"open(content)\" [ngClass]=\"{'bgColorAdd': true}\" ><mat-icon>person_add</mat-icon></button>\r\n      </th>        \r\n    </table>\r\n    <!-- <h1 *ngFor=\"let item of nurseData\">\r\n  {{item.FullName}}\r\n</h1> -->\r\n  </div>\r\n<div class=\"form-group\">\r\n<table mat-table [dataSource]=\"dataSourceNurseData\" class=\"mat-elevation-z8\" [ngClass]=\"{'Tableclass': true}\">\r\n    <!--- Note that these columns can be defined in any order.\r\n          The actual rendered columns are set as a property on the row definition\" -->          \r\n    <!-- DrID Column -->\r\n    <ng-container matColumnDef=\"NurseID\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Nurse ID. </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n    </ng-container>  \r\n    <!-- FullName Column -->\r\n    <ng-container matColumnDef=\"FullName\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Full Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.FullName}} </td>\r\n    </ng-container>  \r\n    <!-- Date_of_Birth Column -->\r\n    <ng-container matColumnDef=\"Date_of_Birth\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Date of Birth </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Date_of_Birth}} </td>\r\n    </ng-container>  \r\n    <!-- EmailID Column -->\r\n    <ng-container matColumnDef=\"EmailID\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> EmailID </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.EmailID}} </td>\r\n    </ng-container> \r\n    <!-- ContactNo Column -->\r\n    <ng-container matColumnDef=\"ContactNo\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> ContactNo </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.ContactNo}} </td>\r\n    </ng-container>  \r\n    <!-- Address Column -->\r\n    <ng-container matColumnDef=\"Address\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Address </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Address}} </td>\r\n    </ng-container>\r\n    <!-- Status Column -->\r\n    <ng-container matColumnDef=\"Status\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Status </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Status}} </td>\r\n    </ng-container>\r\n    <!-- Blocked_Unblocked Column -->\r\n    <ng-container matColumnDef=\"Blocked_Unblocked\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Is Locked </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Blocked_Unblocked}} </td>\r\n    </ng-container>\r\n      <!-- View/Edit/Delete Column -->\r\n     <ng-container matColumnDef=\"View_Edit_Delete\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'fontSizeBold': true}\"> Actions </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n          <button class=\"btn\"  (click)=\"Viewopen(Viewcontent,element.id )\" [ngClass]=\"{'bgColor': true}\" style=\"float: left;\" title=\"View\"><mat-icon>visibility</mat-icon></button>\r\n          <button class=\"btn\" (click)=\"Editopen(Editcontent,element.id )\" [ngClass]=\"{'bgColor': true}\" style=\"float: left;\" title=\"Edit\"><mat-icon>edit</mat-icon></button>\r\n          <button class=\"btn\" (click)=\"Deleteopen(Deletecontent,element.id )\" [ngClass]=\"{'bgColor': true}\" style=\"float: left;\" title=\"Archive\"><mat-icon>delete</mat-icon></button>\r\n      </td>\r\n    </ng-container>\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n</div>\r\n<mat-paginator [length]=\"100\"\r\n[pageSize]=\"10\"\r\n[pageSizeOptions]=\"[5, 10, 25, 100]\" style=\"color: #0047AB; font-size: small;\">\r\n</mat-paginator>\r\n\r\n</div>\r\n\r\n<div class=\"modalTagReg\">\r\n  <!-- Register PopUp -->\r\n  <ng-template #content let-c=\"close\" let-d=\"dismiss\" >    \r\n    <!-- <div class=\"modal-body\" [ngClass]=\"{'ModelPopUpClass': true}\"> -->\r\n      <div class=\"modal-body\" >\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times; &nbsp;</span>\r\n      </button>\r\n      <app-register (parentFun)=\"receiveMessage()\" [userrole]=\"Nurse\"></app-register>\r\n     </div> \r\n  </ng-template>\r\n  <!-- Register PopUp -->\r\n\r\n <!-- View By ID PopUp -->\r\n <ng-template #Viewcontent let-modal>\r\n  <div class=\"modal-header\" *ngIf=\"UserData\">\r\n    <!-- <h4 class=\"modal-title\" id=\"modal-basic-title\">Profile update</h4> -->\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\" *ngFor=\"let item of UserData\">\r\n    <h1 style=\"text-align: left;\">User id:  {{item.id}} </h1>\r\n    <!-- <form *ngFor=\"let item of dataSourceDoctorData\" [(ngModel)]=\"dataSourceDoctorData\"> -->\r\n      <form >    \r\n        <div class=\"main main-raised\" >\r\n          <div class=\"profile-content\">\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 ml-auto mr-auto\">\r\n                  <div class=\"profile\">\r\n                    <div class=\"avatar\">\r\n                      <img src=\"../../../assets/images/UserProfileIcon.webp\" alt=\"Circle Image\" class=\"img-raised rounded-circle\" [ngClass]=\"{'person_pin': true}\">\r\n                    </div>\r\n                    <div class=\"avatar\">\r\n                      <table style=\"font-family: arial, sans-serif;border-collapse: collapse; width: 100%;\" [ngClass]=\"{'ViewPoptable': true}\">\r\n                        <tr>\r\n                          <th>Full Name</th>\r\n                          <th><h3 class=\"title\">{{item.FullName}}</h3></th>                          \r\n                        </tr>\r\n                        <!-- <tr>\r\n                          <th>Specialties</th>\r\n                          <td><h3>{{item.Specialties}}</h3></td>\r\n                        </tr> -->\r\n                        </table>\r\n                    </div>                   \r\n                  </div>\r\n                  <div class=\"name\">                      \r\n                    <!-- <hr/> -->\r\n                    <table class=\"table table-hover\" style=\"font-family: arial, sans-serif;border-collapse: collapse; width: 100%;\" [ngClass]=\"{'ViewPoptable': true}\">\r\n                      <tr>\r\n                        <td>Date of Birth</td>\r\n                        <td>{{item.Date_of_Birth}}</td>                          \r\n                      </tr>\r\n                      <tr>\r\n                        <td>Email Id</td>\r\n                        <td>{{item.EmailID}}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Phone No.</td>\r\n                        <td>{{item.ContactNo}}g</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Address</td>\r\n                        <td>{{item.Address}}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Status</td>\r\n                        <td>{{item.Status}}</td>\r\n                      </tr>                        \r\n                    </table>                    \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- <div class=\"description text-center\">\r\n                <p>An artist of considerable range, Chet Faker — the name taken by Melbourne-raised, Brooklyn-based Nick Murphy — writes, performs and records all of his own music, giving it a warm, intimate feel with a solid groove structure. </p>\r\n              </div> -->\r\n              <!-- <div class=\"row\">\r\n                <div class=\"col-md-6 ml-auto mr-auto\">\r\n                  <div class=\"profile-tabs\">\r\n                    <ul class=\"nav nav-pills nav-pills-icons justify-content-center\" role=\"tablist\">\r\n                    <li class=\"nav-item\">\r\n                      <a class=\"nav-link active\" href=\"#studio\" role=\"tab\" data-toggle=\"tab\">\r\n                        <i class=\"material-icons\">camera</i>\r\n                        Studio\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                      <a class=\"nav-link\" href=\"#works\" role=\"tab\" data-toggle=\"tab\">\r\n                        <i class=\"material-icons\">palette</i>\r\n                        Work\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                      <a class=\"nav-link\" href=\"#favorite\" role=\"tab\" data-toggle=\"tab\">\r\n                        <i class=\"material-icons\">favorite</i>\r\n                        Favorite\r\n                      </a>\r\n                    </li>\r\n                    </ul>\r\n                  </div>\r\n              </div>\r\n            </div>\t -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <!-- <button type=\"button\" class=\"btn btn-outline\" (click)=\"modal.close('Save click')\">Save</button> -->\r\n  </div>\r\n</ng-template>\r\n  <!-- View By ID PopUp -->\r\n\r\n  <!-- Edit By ID PopUp -->  \r\n  <ng-template #Editcontent let-c=\"close\" let-d=\"dismiss\" >    \r\n    <!-- <div class=\"modal-body\" [ngClass]=\"{'ModelPopUpClass': true}\"> -->\r\n      <div class=\"modal-body\" >\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times; &nbsp;</span>\r\n      </button>\r\n      <app-register [nrId]=\"NrIdToUpdate\"></app-register>\r\n     </div> \r\n  </ng-template>\r\n  <!-- Edit By ID PopUp -->\r\n\r\n   <!-- Delete By ID PopUp -->  \r\n  <ng-template #Deletecontent let-modal>\r\n    <div class=\"modal-header\" *ngIf=\"UserData\">\r\n      <!-- <h4 class=\"modal-title\" id=\"modal-basic-title\">Profile update</h4> -->\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\" *ngFor=\"let item of UserData\">\r\n      <!-- <h1 style=\"text-align: left;\">User id: {{item.id}} is deleted</h1>        -->\r\n      <!-- <hr> -->\r\n      <h2>Are you sure you want to delete the user:</h2> <h3>{{item.FullName}}</h3>\r\n      <!-- <p>If delete click on delete or Cancel</p> -->\r\n    <!-- </div> -->\r\n    <!-- <button class=\"btn\" [ngClass]=\"{'bgColor': true}\" style=\"float: left;\" title=\"Delete\">Delete</button> -->\r\n    <div class=\"modal-footer\">\r\n      <!-- <button class=\"btn\" [ngClass]=\"{'bgColor': true}\" style=\"float: left;\" title=\"Delete\">Delete</button> -->\r\n      <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"SoftDeleteNurseData(item.id)\" title=\"Delete\">Delete</button>\r\n      <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"modal.close('Save click')\" title=\"Cancel\">Cancel</button>\r\n    </div>\r\n  </div>\r\n  </ng-template>\r\n  <!-- Delete By ID PopUp -->\r\n</div>","import { Component, OnInit, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\r\nimport { ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../core/auth.service';\r\n\r\nimport { finalize } from 'rxjs/operators'\r\nimport { UserModel }    from '../../models/user.model';\r\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\r\nimport { ToasterService } from './../../core/ToasterService';\r\nimport { ToasterPosition } from './../../core/ToasterPosition';\r\nimport { NgxSpinnerService } from 'ngx-spinner'; \r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\nconst SMALL_SCREEN_SIZE = 720;\r\n\r\n@Component({\r\n  selector: 'app-shared-wrapper',\r\n  templateUrl: './shared-wrapper.component.html',\r\n  styleUrls: ['./shared-wrapper.component.css']\r\n})\r\nexport class SharedWrapperComponent implements OnInit {\r\n\r\n  public isScreenSmall: boolean;\r\n  public selectedoption: string = \"\";\r\n  name: string;\r\n  role:string;\r\n  @ViewChild('x')\r\n  public matselection: any;\r\n  constructor(private breakpointobserver: BreakpointObserver, private router: Router, private route: ActivatedRoute,private authService: AuthService) { }\r\n  res:any;\r\n  ngOnInit(): void \r\n  {\r\n    this.breakpointobserver.observe(\r\n      [`(max-width: ${SMALL_SCREEN_SIZE}px)`]\r\n    )\r\n    .subscribe((state: BreakpointState) => {\r\n      this.isScreenSmall = state.matches;\r\n    });\r\n    this.name = this.authService.name;\r\n\r\n    this.initRole();\r\n  }\r\n  initRole(){\r\n    this.authService.getUserRole(this.authService.email)\r\n      .pipe(finalize(() => {\r\n      }))  \r\n      .subscribe(\r\n      result => {         \r\n         if(result) {\r\n            this.res = result;\r\n            //alert(this.res.role);\r\n            this.authService.userrole = this.res.role;\r\n            this.role = this.res.role;\r\n         }\r\n      },\r\n      error => {\r\n      });\r\n  }\r\n  DoSomething(eventsource: any): void\r\n  {    \r\n    console.log(this.matselection.selectedOptions.selected[0]?.value);\r\n    if(this.matselection.selectedOptions.selected[0]?.value == \"doctorsection\")\r\n    {\r\n       this.router.navigate(['doctorsection'],{ relativeTo: this.route });\r\n    }\r\n    else if(this.matselection.selectedOptions.selected[0]?.value == \"nursesection\")\r\n    {\r\n      this.router.navigate(['nursesection'],{ relativeTo: this.route });\r\n    }\r\n    else if(this.matselection.selectedOptions.selected[0]?.value == \"patientsection\")\r\n    {\r\n      this.router.navigate(['patientsection'],{ relativeTo: this.route });\r\n    }\r\n    else if(this.matselection.selectedOptions.selected[0]?.value == \"registration\")\r\n    {\r\n      this.router.navigate(['registration'],{ relativeTo: this.route });\r\n    }\r\n    else if(this.matselection.selectedOptions.selected[0]?.value == \"changepassword\")\r\n    {\r\n      this.router.navigate(['changepassword'],{ relativeTo: this.route });\r\n    }\r\n    else if(this.matselection.selectedOptions.selected[0]?.value == \"inbox\")\r\n    {\r\n      this.router.navigate(['inbox'],{ relativeTo: this.route });\r\n    }\r\n    else if(this.matselection.selectedOptions.selected[0]?.value == \"viewdata\")\r\n    {\r\n      this.router.navigate(['viewpatientdata'],{ relativeTo: this.route });\r\n    }\r\n    else if(this.matselection.selectedOptions.selected[0]?.value == \"bookappointment\")\r\n    {\r\n      this.router.navigate(['schedule'],{ relativeTo: this.route });\r\n    }\r\n    else if(this.matselection.selectedOptions.selected[0]?.value == \"patientvisitnurse\")\r\n    {\r\n      this.router.navigate(['patientvisitnurse'],{ relativeTo: this.route });\r\n    }\r\n    else if(this.matselection.selectedOptions.selected[0]?.value == \"patientvisitdoctor\")\r\n    {\r\n      this.router.navigate(['patientvisitdoctor'],{ relativeTo: this.route });\r\n    }\r\n    else if(this.matselection.selectedOptions.selected[0]?.value == \"viewappointments\")\r\n    {\r\n      this.router.navigate(['viewappointments'],{ relativeTo: this.route });\r\n    }\r\n    else{\r\n      this.router.navigate(['doctorsection'],{ relativeTo: this.route });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"example-container\">\r\n    <mat-sidenav #sidenav \r\n                 [opened]=\"!isScreenSmall\" \r\n                 [mode]=\"isScreenSmall ? 'over' : 'side'\" class=\"mat-elevation-z10\">\r\n        \r\n        <mat-toolbar style=\"background-color: slategrey;\" class=\"mat-elevation-z6 tbar\">\r\n            <span><mat-icon style=\"vertical-align: middle;\">assignment_ind</mat-icon><span style=\"vertical-align: middle;\"> {{name}} </span></span>\r\n        </mat-toolbar>\r\n        \r\n        <div>\r\n            \r\n            <mat-selection-list #x [multiple]=\"false\">\r\n                \r\n                <mat-list-option [value]=\"'inbox'\" *ngIf=\"this.role=='doctor' || this.role=='patient'\" (click)=\"DoSomething($event)\" selected>\r\n                    <span><mat-icon style=\"vertical-align: middle;\">schedule</mat-icon><span style=\"vertical-align: middle;\"> Inbox</span></span>\r\n                  </mat-list-option>\r\n                <mat-list-option [value]=\"'doctorsection'\" *ngIf=\"this.role=='admin'\" (click)=\"DoSomething($event)\" >\r\n                  <span><mat-icon style=\"vertical-align: middle;\">medical_services</mat-icon><span style=\"vertical-align: middle;\"> Doctor Section</span></span>\r\n                </mat-list-option>\r\n                <mat-list-option [value]=\"'nursesection'\" *ngIf=\"this.role=='admin'\" (click)=\"DoSomething($event)\">\r\n                    <span><mat-icon style=\"vertical-align: middle;\">content_paste</mat-icon><span style=\"vertical-align: middle;\"> Nurse Section</span></span>\r\n                </mat-list-option>                \r\n                <mat-list-option [value]=\"'patientsection'\" *ngIf=\"this.role=='admin'\" (click)=\"DoSomething($event)\">\r\n                    <span><mat-icon style=\"vertical-align: middle;\">person</mat-icon><span style=\"vertical-align: middle;\"> Patient Section</span></span>\r\n                </mat-list-option>\r\n\r\n                <mat-list-option *ngIf=\"this.role=='doctor' || this.role=='nurse'\" [value]=\"'viewappointments'\" (click)=\"DoSomething($event)\">\r\n                    <span><mat-icon style=\"vertical-align: middle;\">visibility</mat-icon><span style=\"vertical-align: middle;\"> Appointment List</span></span>\r\n                  </mat-list-option>\r\n                  <!-- <mat-list-option *ngIf=\"this.role=='doctor'\" [value]=\"'patientvisitdoctor'\" (click)=\"DoSomething($event)\">\r\n                    <span><mat-icon style=\"vertical-align: middle;\">visibility</mat-icon><span style=\"vertical-align: middle;\"> Patient Visit</span></span>\r\n                  </mat-list-option>\r\n                  <mat-list-option *ngIf=\"this.role=='nurse'\" [value]=\"'patientvisitnurse'\" (click)=\"DoSomething($event)\">\r\n                    <span><mat-icon style=\"vertical-align: middle;\">visibility</mat-icon><span style=\"vertical-align: middle;\"> Patient Visit</span></span>\r\n                  </mat-list-option> -->\r\n                  <mat-list-option *ngIf=\"this.role=='patient'\" [value]=\"'viewdata'\" (click)=\"DoSomething($event)\">\r\n                    <span><mat-icon style=\"vertical-align: middle;\">visibility</mat-icon><span style=\"vertical-align: middle;\"> My Data</span></span>\r\n                </mat-list-option>\r\n                  <mat-list-option *ngIf=\"this.role=='patient'\" [value]=\"'bookappointment'\" (click)=\"DoSomething($event)\">\r\n                      <span><mat-icon style=\"vertical-align: middle;\">content_paste</mat-icon><span style=\"vertical-align: middle;\"> Book Appointment</span></span>\r\n                  </mat-list-option>\r\n                  <!-- <mat-list-option [value]=\"'changepassword'\" (click)=\"DoSomething($event)\">\r\n                    <span><mat-icon style=\"vertical-align: middle;\">password</mat-icon><span style=\"vertical-align: middle;\"> Change Password</span></span>\r\n                </mat-list-option> -->\r\n            </mat-selection-list>\r\n            \r\n        </div>\r\n\r\n        \r\n    </mat-sidenav>\r\n    \r\n    <mat-sidenav-content class=\"example-sidenav-content\">\r\n        <app-toolbar (toggle)=\"sidenav.toggle()\"></app-toolbar>\r\n        <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n\r\n","import { RouterModule } from '@angular/router';\r\nimport { SharedWrapperComponent } from './shared-wrapper/shared-wrapper.component';\r\nimport { ChangePasswordComponent } from '../admin/change-password/change-password.component'\r\nimport { DoctorSectionComponent } from '../admin/doctor-section/doctor-section.component'\r\nimport { NurseSectionComponent} from '../admin/nurse-section/nurse-section.component';\r\nimport { PatientSectionComponent} from '../admin/patient-section/patient-section.component';\r\nimport { RegisterComponent } from '../admin/register/register.component';\r\nimport { ScheduleComponent } from '../scheduling/schedule/schedule.component';\r\nimport { BookAppointmentComponent } from '../scheduling/book-appointment/book-appointment.component';\r\nimport { ViewDataComponent} from '../patient/view-data/view-data.component';\r\n\r\nimport { UserloginComponent } from '../login/userlogin/userlogin.component';\r\nimport { InboxComponent } from '../admin/inbox/inbox.component';\r\nimport { PatientVisitDoctorComponent } from '../patient-visit/patient-visit-doctor/patient-visit-doctor.component';\r\nimport { PatientVisitNurseComponent } from '../patient-visit/patient-visit-nurse/patient-visit-nurse.component';\r\nimport{ViewAppointmentsComponent} from '../scheduling/view-appointments/view-appointments.component'\r\nconst routes = [\r\n    { \r\n        path: 'sharedwrapperhome', \r\n        component: SharedWrapperComponent,\r\n        children: [\r\n            { \r\n                path: 'doctorsection', component: DoctorSectionComponent\r\n            },\r\n            { \r\n                path: 'changepassword', component: ChangePasswordComponent\r\n            },\r\n            { \r\n                path: 'nursesection', component: NurseSectionComponent\r\n            },\r\n            { \r\n                path: 'patientsection', component: PatientSectionComponent\r\n            },\r\n            { \r\n                path: 'registration', component: RegisterComponent\r\n            },\r\n            {\r\n                path:'inbox',component:InboxComponent\r\n            },\r\n            {\r\n                path:'schedule', component:ScheduleComponent\r\n            },\r\n            {\r\n                path:'bookappointment', component:BookAppointmentComponent\r\n            },\r\n            {\r\n                path:'viewpatientdata', component:ViewDataComponent\r\n            },\r\n            {\r\n                path:'patientvisitnurse', component:PatientVisitNurseComponent\r\n            },\r\n            {\r\n                path:'patientvisitdoctor', component:PatientVisitDoctorComponent\r\n            },\r\n            {\r\n                path:'viewappointments', component:ViewAppointmentsComponent\r\n            }\r\n\r\n            \r\n        ]\r\n    },\r\n    {\r\n        path:'userlogin', component:UserloginComponent \r\n    }\r\n];\r\n\r\nexport default RouterModule.forChild(routes);\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}